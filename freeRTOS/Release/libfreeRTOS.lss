In archive libfreeRTOS.a:

heap_2.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.xPortGetFreeHeapSize 0000000a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.vPortInitialiseBlocks 00000002  00000000  00000000  0000003e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.vPortFree 00000060  00000000  00000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.pvPortMalloc 00000146  00000000  00000000  000000a0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .data.xFreeBytesRemaining 00000002  00000000  00000000  000001e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .bss.xHeapHasBeenInitialised.1587 00000001  00000000  00000000  000001e8  2**0
                  ALLOC
  9 .bss.ucHeap   000005dc  00000000  00000000  000001e8  2**0
                  ALLOC
 10 .bss.xStart   00000004  00000000  00000000  000001e8  2**0
                  ALLOC
 11 .bss.xEnd     00000004  00000000  00000000  000001e8  2**0
                  ALLOC

Disassembly of section .text.xPortGetFreeHeapSize:

00000000 <xPortGetFreeHeapSize>:
   0:	80 91 00 00 	lds	r24, 0x0000
   4:	90 91 00 00 	lds	r25, 0x0000
   8:	08 95       	ret

Disassembly of section .text.vPortInitialiseBlocks:

00000000 <vPortInitialiseBlocks>:
   0:	08 95       	ret

Disassembly of section .text.vPortFree:

00000000 <vPortFree>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	00 97       	sbiw	r24, 0x00	; 0
   6:	01 f0       	breq	.+0      	; 0x8 <vPortFree+0x8>
   8:	ec 01       	movw	r28, r24
   a:	24 97       	sbiw	r28, 0x04	; 4
   c:	0e 94 00 00 	call	0	; 0x0 <vPortFree>
  10:	4a 81       	ldd	r20, Y+2	; 0x02
  12:	5b 81       	ldd	r21, Y+3	; 0x03
  14:	a0 e0       	ldi	r26, 0x00	; 0
  16:	b0 e0       	ldi	r27, 0x00	; 0
  18:	2c 91       	ld	r18, X
  1a:	11 96       	adiw	r26, 0x01	; 1
  1c:	3c 91       	ld	r19, X
  1e:	11 97       	sbiw	r26, 0x01	; 1
  20:	bd 01       	movw	r22, r26
  22:	c9 01       	movw	r24, r18
  24:	dc 01       	movw	r26, r24
  26:	12 96       	adiw	r26, 0x02	; 2
  28:	8d 91       	ld	r24, X+
  2a:	9c 91       	ld	r25, X
  2c:	13 97       	sbiw	r26, 0x03	; 3
  2e:	84 17       	cp	r24, r20
  30:	95 07       	cpc	r25, r21
  32:	00 f0       	brcs	.+0      	; 0x34 <vPortFree+0x34>
  34:	fb 01       	movw	r30, r22
  36:	b9 83       	std	Y+1, r27	; 0x01
  38:	a8 83       	st	Y, r26
  3a:	d1 83       	std	Z+1, r29	; 0x01
  3c:	c0 83       	st	Z, r28
  3e:	80 91 00 00 	lds	r24, 0x0000
  42:	90 91 00 00 	lds	r25, 0x0000
  46:	2a 81       	ldd	r18, Y+2	; 0x02
  48:	3b 81       	ldd	r19, Y+3	; 0x03
  4a:	82 0f       	add	r24, r18
  4c:	93 1f       	adc	r25, r19
  4e:	90 93 00 00 	sts	0x0000, r25
  52:	80 93 00 00 	sts	0x0000, r24
  56:	0e 94 00 00 	call	0	; 0x0 <vPortFree>
  5a:	df 91       	pop	r29
  5c:	cf 91       	pop	r28
  5e:	08 95       	ret

Disassembly of section .text.pvPortMalloc:

00000000 <pvPortMalloc>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	0e 94 00 00 	call	0	; 0x0 <pvPortMalloc>
  12:	80 91 00 00 	lds	r24, 0x0000
  16:	88 23       	and	r24, r24
  18:	01 f4       	brne	.+0      	; 0x1a <pvPortMalloc+0x1a>
  1a:	80 e0       	ldi	r24, 0x00	; 0
  1c:	90 e0       	ldi	r25, 0x00	; 0
  1e:	90 93 00 00 	sts	0x0000, r25
  22:	80 93 00 00 	sts	0x0000, r24
  26:	10 92 00 00 	sts	0x0000, r1
  2a:	10 92 00 00 	sts	0x0000, r1
  2e:	8b ed       	ldi	r24, 0xDB	; 219
  30:	95 e0       	ldi	r25, 0x05	; 5
  32:	90 93 00 00 	sts	0x0000, r25
  36:	80 93 00 00 	sts	0x0000, r24
  3a:	10 92 00 00 	sts	0x0000, r1
  3e:	10 92 00 00 	sts	0x0000, r1
  42:	90 93 00 00 	sts	0x0000, r25
  46:	80 93 00 00 	sts	0x0000, r24
  4a:	80 e0       	ldi	r24, 0x00	; 0
  4c:	90 e0       	ldi	r25, 0x00	; 0
  4e:	90 93 00 00 	sts	0x0000, r25
  52:	80 93 00 00 	sts	0x0000, r24
  56:	81 e0       	ldi	r24, 0x01	; 1
  58:	80 93 00 00 	sts	0x0000, r24
  5c:	20 97       	sbiw	r28, 0x00	; 0
  5e:	01 f0       	breq	.+0      	; 0x60 <pvPortMalloc+0x60>
  60:	24 96       	adiw	r28, 0x04	; 4
  62:	ce 01       	movw	r24, r28
  64:	01 97       	sbiw	r24, 0x01	; 1
  66:	8a 5d       	subi	r24, 0xDA	; 218
  68:	95 40       	sbci	r25, 0x05	; 5
  6a:	00 f0       	brcs	.+0      	; 0x6c <pvPortMalloc+0x6c>
  6c:	00 c0       	rjmp	.+0      	; 0x6e <pvPortMalloc+0x6e>
  6e:	40 91 00 00 	lds	r20, 0x0000
  72:	50 91 00 00 	lds	r21, 0x0000
  76:	e0 e0       	ldi	r30, 0x00	; 0
  78:	f0 e0       	ldi	r31, 0x00	; 0
  7a:	da 01       	movw	r26, r20
  7c:	12 96       	adiw	r26, 0x02	; 2
  7e:	8d 91       	ld	r24, X+
  80:	9c 91       	ld	r25, X
  82:	13 97       	sbiw	r26, 0x03	; 3
  84:	8c 17       	cp	r24, r28
  86:	9d 07       	cpc	r25, r29
  88:	00 f4       	brcc	.+0      	; 0x8a <pvPortMalloc+0x8a>
  8a:	8d 91       	ld	r24, X+
  8c:	9c 91       	ld	r25, X
  8e:	00 97       	sbiw	r24, 0x00	; 0
  90:	01 f0       	breq	.+0      	; 0x92 <pvPortMalloc+0x92>
  92:	ac 01       	movw	r20, r24
  94:	fd 01       	movw	r30, r26
  96:	00 c0       	rjmp	.+0      	; 0x98 <pvPortMalloc+0x98>
  98:	b0 e0       	ldi	r27, 0x00	; 0
  9a:	40 30       	cpi	r20, 0x00	; 0
  9c:	5b 07       	cpc	r21, r27
  9e:	01 f4       	brne	.+0      	; 0xa0 <pvPortMalloc+0xa0>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <pvPortMalloc+0xa2>
  a2:	e0 80       	ld	r14, Z
  a4:	f1 80       	ldd	r15, Z+1	; 0x01
  a6:	da 01       	movw	r26, r20
  a8:	8d 91       	ld	r24, X+
  aa:	9c 91       	ld	r25, X
  ac:	11 97       	sbiw	r26, 0x01	; 1
  ae:	91 83       	std	Z+1, r25	; 0x01
  b0:	80 83       	st	Z, r24
  b2:	12 96       	adiw	r26, 0x02	; 2
  b4:	8d 91       	ld	r24, X+
  b6:	9c 91       	ld	r25, X
  b8:	13 97       	sbiw	r26, 0x03	; 3
  ba:	8c 1b       	sub	r24, r28
  bc:	9d 0b       	sbc	r25, r29
  be:	89 30       	cpi	r24, 0x09	; 9
  c0:	91 05       	cpc	r25, r1
  c2:	00 f0       	brcs	.+0      	; 0xc4 <pvPortMalloc+0xc4>
  c4:	ba 01       	movw	r22, r20
  c6:	6c 0f       	add	r22, r28
  c8:	7d 1f       	adc	r23, r29
  ca:	fb 01       	movw	r30, r22
  cc:	93 83       	std	Z+3, r25	; 0x03
  ce:	82 83       	std	Z+2, r24	; 0x02
  d0:	13 96       	adiw	r26, 0x03	; 3
  d2:	dc 93       	st	X, r29
  d4:	ce 93       	st	-X, r28
  d6:	12 97       	sbiw	r26, 0x02	; 2
  d8:	02 80       	ldd	r0, Z+2	; 0x02
  da:	f3 81       	ldd	r31, Z+3	; 0x03
  dc:	e0 2d       	mov	r30, r0
  de:	a0 e0       	ldi	r26, 0x00	; 0
  e0:	b0 e0       	ldi	r27, 0x00	; 0
  e2:	2c 91       	ld	r18, X
  e4:	11 96       	adiw	r26, 0x01	; 1
  e6:	3c 91       	ld	r19, X
  e8:	11 97       	sbiw	r26, 0x01	; 1
  ea:	1a 2f       	mov	r17, r26
  ec:	0b 2f       	mov	r16, r27
  ee:	c9 01       	movw	r24, r18
  f0:	dc 01       	movw	r26, r24
  f2:	12 96       	adiw	r26, 0x02	; 2
  f4:	8d 91       	ld	r24, X+
  f6:	9c 91       	ld	r25, X
  f8:	13 97       	sbiw	r26, 0x03	; 3
  fa:	8e 17       	cp	r24, r30
  fc:	9f 07       	cpc	r25, r31
  fe:	00 f0       	brcs	.+0      	; 0x100 <pvPortMalloc+0x100>
 100:	e1 2f       	mov	r30, r17
 102:	f0 2f       	mov	r31, r16
 104:	eb 01       	movw	r28, r22
 106:	b9 83       	std	Y+1, r27	; 0x01
 108:	a8 83       	st	Y, r26
 10a:	71 83       	std	Z+1, r23	; 0x01
 10c:	60 83       	st	Z, r22
 10e:	e7 01       	movw	r28, r14
 110:	24 96       	adiw	r28, 0x04	; 4
 112:	80 91 00 00 	lds	r24, 0x0000
 116:	90 91 00 00 	lds	r25, 0x0000
 11a:	fa 01       	movw	r30, r20
 11c:	22 81       	ldd	r18, Z+2	; 0x02
 11e:	33 81       	ldd	r19, Z+3	; 0x03
 120:	82 1b       	sub	r24, r18
 122:	93 0b       	sbc	r25, r19
 124:	90 93 00 00 	sts	0x0000, r25
 128:	80 93 00 00 	sts	0x0000, r24
 12c:	00 c0       	rjmp	.+0      	; 0x12e <pvPortMalloc+0x12e>
 12e:	c0 e0       	ldi	r28, 0x00	; 0
 130:	d0 e0       	ldi	r29, 0x00	; 0
 132:	0e 94 00 00 	call	0	; 0x0 <pvPortMalloc>
 136:	ce 01       	movw	r24, r28
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	1f 91       	pop	r17
 13e:	0f 91       	pop	r16
 140:	ff 90       	pop	r15
 142:	ef 90       	pop	r14
 144:	08 95       	ret

port.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.pxPortInitialiseStack 00000090  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.xPortStartScheduler 00000076  00000000  00000000  000000c4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.vPortEndScheduler 00000002  00000000  00000000  0000013a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.vPortYieldFromTick 000000ba  00000000  00000000  0000013c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.__vector_11 00000006  00000000  00000000  000001f6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.vPortYield 000000b2  00000000  00000000  000001fc  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.pxPortInitialiseStack:

00000000 <pxPortInitialiseStack>:
   0:	fc 01       	movw	r30, r24
   2:	91 e1       	ldi	r25, 0x11	; 17
   4:	90 83       	st	Z, r25
   6:	22 e2       	ldi	r18, 0x22	; 34
   8:	22 93       	st	-Z, r18
   a:	83 e3       	ldi	r24, 0x33	; 51
   c:	82 93       	st	-Z, r24
   e:	62 93       	st	-Z, r22
  10:	72 93       	st	-Z, r23
  12:	12 92       	st	-Z, r1
  14:	80 e8       	ldi	r24, 0x80	; 128
  16:	82 93       	st	-Z, r24
  18:	12 92       	st	-Z, r1
  1a:	82 e0       	ldi	r24, 0x02	; 2
  1c:	82 93       	st	-Z, r24
  1e:	83 e0       	ldi	r24, 0x03	; 3
  20:	82 93       	st	-Z, r24
  22:	84 e0       	ldi	r24, 0x04	; 4
  24:	82 93       	st	-Z, r24
  26:	85 e0       	ldi	r24, 0x05	; 5
  28:	82 93       	st	-Z, r24
  2a:	86 e0       	ldi	r24, 0x06	; 6
  2c:	82 93       	st	-Z, r24
  2e:	87 e0       	ldi	r24, 0x07	; 7
  30:	82 93       	st	-Z, r24
  32:	88 e0       	ldi	r24, 0x08	; 8
  34:	82 93       	st	-Z, r24
  36:	89 e0       	ldi	r24, 0x09	; 9
  38:	82 93       	st	-Z, r24
  3a:	80 e1       	ldi	r24, 0x10	; 16
  3c:	82 93       	st	-Z, r24
  3e:	92 93       	st	-Z, r25
  40:	82 e1       	ldi	r24, 0x12	; 18
  42:	82 93       	st	-Z, r24
  44:	83 e1       	ldi	r24, 0x13	; 19
  46:	82 93       	st	-Z, r24
  48:	84 e1       	ldi	r24, 0x14	; 20
  4a:	82 93       	st	-Z, r24
  4c:	85 e1       	ldi	r24, 0x15	; 21
  4e:	82 93       	st	-Z, r24
  50:	86 e1       	ldi	r24, 0x16	; 22
  52:	82 93       	st	-Z, r24
  54:	87 e1       	ldi	r24, 0x17	; 23
  56:	82 93       	st	-Z, r24
  58:	88 e1       	ldi	r24, 0x18	; 24
  5a:	82 93       	st	-Z, r24
  5c:	89 e1       	ldi	r24, 0x19	; 25
  5e:	82 93       	st	-Z, r24
  60:	80 e2       	ldi	r24, 0x20	; 32
  62:	82 93       	st	-Z, r24
  64:	81 e2       	ldi	r24, 0x21	; 33
  66:	82 93       	st	-Z, r24
  68:	22 93       	st	-Z, r18
  6a:	83 e2       	ldi	r24, 0x23	; 35
  6c:	82 93       	st	-Z, r24
  6e:	42 93       	st	-Z, r20
  70:	52 93       	st	-Z, r21
  72:	86 e2       	ldi	r24, 0x26	; 38
  74:	82 93       	st	-Z, r24
  76:	87 e2       	ldi	r24, 0x27	; 39
  78:	82 93       	st	-Z, r24
  7a:	88 e2       	ldi	r24, 0x28	; 40
  7c:	82 93       	st	-Z, r24
  7e:	89 e2       	ldi	r24, 0x29	; 41
  80:	82 93       	st	-Z, r24
  82:	80 e3       	ldi	r24, 0x30	; 48
  84:	82 93       	st	-Z, r24
  86:	81 e3       	ldi	r24, 0x31	; 49
  88:	82 93       	st	-Z, r24
  8a:	31 97       	sbiw	r30, 0x01	; 1
  8c:	cf 01       	movw	r24, r30
  8e:	08 95       	ret

Disassembly of section .text.xPortStartScheduler:

00000000 <xPortStartScheduler>:
   0:	89 e0       	ldi	r24, 0x09	; 9
   2:	80 93 89 00 	sts	0x0089, r24
   6:	83 ec       	ldi	r24, 0xC3	; 195
   8:	80 93 88 00 	sts	0x0088, r24
   c:	8b e0       	ldi	r24, 0x0B	; 11
   e:	80 93 81 00 	sts	0x0081, r24
  12:	ef e6       	ldi	r30, 0x6F	; 111
  14:	f0 e0       	ldi	r31, 0x00	; 0
  16:	80 81       	ld	r24, Z
  18:	82 60       	ori	r24, 0x02	; 2
  1a:	80 83       	st	Z, r24
  1c:	a0 91 00 00 	lds	r26, 0x0000
  20:	b0 91 00 00 	lds	r27, 0x0000
  24:	cd 91       	ld	r28, X+
  26:	cd bf       	out	0x3d, r28	; 61
  28:	dd 91       	ld	r29, X+
  2a:	de bf       	out	0x3e, r29	; 62
  2c:	ff 91       	pop	r31
  2e:	ef 91       	pop	r30
  30:	df 91       	pop	r29
  32:	cf 91       	pop	r28
  34:	bf 91       	pop	r27
  36:	af 91       	pop	r26
  38:	9f 91       	pop	r25
  3a:	8f 91       	pop	r24
  3c:	7f 91       	pop	r23
  3e:	6f 91       	pop	r22
  40:	5f 91       	pop	r21
  42:	4f 91       	pop	r20
  44:	3f 91       	pop	r19
  46:	2f 91       	pop	r18
  48:	1f 91       	pop	r17
  4a:	0f 91       	pop	r16
  4c:	ff 90       	pop	r15
  4e:	ef 90       	pop	r14
  50:	df 90       	pop	r13
  52:	cf 90       	pop	r12
  54:	bf 90       	pop	r11
  56:	af 90       	pop	r10
  58:	9f 90       	pop	r9
  5a:	8f 90       	pop	r8
  5c:	7f 90       	pop	r7
  5e:	6f 90       	pop	r6
  60:	5f 90       	pop	r5
  62:	4f 90       	pop	r4
  64:	3f 90       	pop	r3
  66:	2f 90       	pop	r2
  68:	1f 90       	pop	r1
  6a:	0f 90       	pop	r0
  6c:	0f be       	out	0x3f, r0	; 63
  6e:	0f 90       	pop	r0
  70:	08 95       	ret
  72:	81 e0       	ldi	r24, 0x01	; 1
  74:	08 95       	ret

Disassembly of section .text.vPortEndScheduler:

00000000 <vPortEndScheduler>:
   0:	08 95       	ret

Disassembly of section .text.vPortYieldFromTick:

00000000 <vPortYieldFromTick>:
   0:	0f 92       	push	r0
   2:	0f b6       	in	r0, 0x3f	; 63
   4:	f8 94       	cli
   6:	0f 92       	push	r0
   8:	1f 92       	push	r1
   a:	11 24       	eor	r1, r1
   c:	2f 92       	push	r2
   e:	3f 92       	push	r3
  10:	4f 92       	push	r4
  12:	5f 92       	push	r5
  14:	6f 92       	push	r6
  16:	7f 92       	push	r7
  18:	8f 92       	push	r8
  1a:	9f 92       	push	r9
  1c:	af 92       	push	r10
  1e:	bf 92       	push	r11
  20:	cf 92       	push	r12
  22:	df 92       	push	r13
  24:	ef 92       	push	r14
  26:	ff 92       	push	r15
  28:	0f 93       	push	r16
  2a:	1f 93       	push	r17
  2c:	2f 93       	push	r18
  2e:	3f 93       	push	r19
  30:	4f 93       	push	r20
  32:	5f 93       	push	r21
  34:	6f 93       	push	r22
  36:	7f 93       	push	r23
  38:	8f 93       	push	r24
  3a:	9f 93       	push	r25
  3c:	af 93       	push	r26
  3e:	bf 93       	push	r27
  40:	cf 93       	push	r28
  42:	df 93       	push	r29
  44:	ef 93       	push	r30
  46:	ff 93       	push	r31
  48:	a0 91 00 00 	lds	r26, 0x0000
  4c:	b0 91 00 00 	lds	r27, 0x0000
  50:	0d b6       	in	r0, 0x3d	; 61
  52:	0d 92       	st	X+, r0
  54:	0e b6       	in	r0, 0x3e	; 62
  56:	0d 92       	st	X+, r0
  58:	0e 94 00 00 	call	0	; 0x0 <vPortYieldFromTick>
  5c:	88 23       	and	r24, r24
  5e:	01 f0       	breq	.+0      	; 0x60 <vPortYieldFromTick+0x60>
  60:	0e 94 00 00 	call	0	; 0x0 <vPortYieldFromTick>
  64:	a0 91 00 00 	lds	r26, 0x0000
  68:	b0 91 00 00 	lds	r27, 0x0000
  6c:	cd 91       	ld	r28, X+
  6e:	cd bf       	out	0x3d, r28	; 61
  70:	dd 91       	ld	r29, X+
  72:	de bf       	out	0x3e, r29	; 62
  74:	ff 91       	pop	r31
  76:	ef 91       	pop	r30
  78:	df 91       	pop	r29
  7a:	cf 91       	pop	r28
  7c:	bf 91       	pop	r27
  7e:	af 91       	pop	r26
  80:	9f 91       	pop	r25
  82:	8f 91       	pop	r24
  84:	7f 91       	pop	r23
  86:	6f 91       	pop	r22
  88:	5f 91       	pop	r21
  8a:	4f 91       	pop	r20
  8c:	3f 91       	pop	r19
  8e:	2f 91       	pop	r18
  90:	1f 91       	pop	r17
  92:	0f 91       	pop	r16
  94:	ff 90       	pop	r15
  96:	ef 90       	pop	r14
  98:	df 90       	pop	r13
  9a:	cf 90       	pop	r12
  9c:	bf 90       	pop	r11
  9e:	af 90       	pop	r10
  a0:	9f 90       	pop	r9
  a2:	8f 90       	pop	r8
  a4:	7f 90       	pop	r7
  a6:	6f 90       	pop	r6
  a8:	5f 90       	pop	r5
  aa:	4f 90       	pop	r4
  ac:	3f 90       	pop	r3
  ae:	2f 90       	pop	r2
  b0:	1f 90       	pop	r1
  b2:	0f 90       	pop	r0
  b4:	0f be       	out	0x3f, r0	; 63
  b6:	0f 90       	pop	r0
  b8:	08 95       	ret

Disassembly of section .text.__vector_11:

00000000 <__vector_11>:
   0:	0e 94 00 00 	call	0	; 0x0 <__vector_11>
   4:	18 95       	reti

Disassembly of section .text.vPortYield:

00000000 <vPortYield>:
   0:	0f 92       	push	r0
   2:	0f b6       	in	r0, 0x3f	; 63
   4:	f8 94       	cli
   6:	0f 92       	push	r0
   8:	1f 92       	push	r1
   a:	11 24       	eor	r1, r1
   c:	2f 92       	push	r2
   e:	3f 92       	push	r3
  10:	4f 92       	push	r4
  12:	5f 92       	push	r5
  14:	6f 92       	push	r6
  16:	7f 92       	push	r7
  18:	8f 92       	push	r8
  1a:	9f 92       	push	r9
  1c:	af 92       	push	r10
  1e:	bf 92       	push	r11
  20:	cf 92       	push	r12
  22:	df 92       	push	r13
  24:	ef 92       	push	r14
  26:	ff 92       	push	r15
  28:	0f 93       	push	r16
  2a:	1f 93       	push	r17
  2c:	2f 93       	push	r18
  2e:	3f 93       	push	r19
  30:	4f 93       	push	r20
  32:	5f 93       	push	r21
  34:	6f 93       	push	r22
  36:	7f 93       	push	r23
  38:	8f 93       	push	r24
  3a:	9f 93       	push	r25
  3c:	af 93       	push	r26
  3e:	bf 93       	push	r27
  40:	cf 93       	push	r28
  42:	df 93       	push	r29
  44:	ef 93       	push	r30
  46:	ff 93       	push	r31
  48:	a0 91 00 00 	lds	r26, 0x0000
  4c:	b0 91 00 00 	lds	r27, 0x0000
  50:	0d b6       	in	r0, 0x3d	; 61
  52:	0d 92       	st	X+, r0
  54:	0e b6       	in	r0, 0x3e	; 62
  56:	0d 92       	st	X+, r0
  58:	0e 94 00 00 	call	0	; 0x0 <vPortYield>
  5c:	a0 91 00 00 	lds	r26, 0x0000
  60:	b0 91 00 00 	lds	r27, 0x0000
  64:	cd 91       	ld	r28, X+
  66:	cd bf       	out	0x3d, r28	; 61
  68:	dd 91       	ld	r29, X+
  6a:	de bf       	out	0x3e, r29	; 62
  6c:	ff 91       	pop	r31
  6e:	ef 91       	pop	r30
  70:	df 91       	pop	r29
  72:	cf 91       	pop	r28
  74:	bf 91       	pop	r27
  76:	af 91       	pop	r26
  78:	9f 91       	pop	r25
  7a:	8f 91       	pop	r24
  7c:	7f 91       	pop	r23
  7e:	6f 91       	pop	r22
  80:	5f 91       	pop	r21
  82:	4f 91       	pop	r20
  84:	3f 91       	pop	r19
  86:	2f 91       	pop	r18
  88:	1f 91       	pop	r17
  8a:	0f 91       	pop	r16
  8c:	ff 90       	pop	r15
  8e:	ef 90       	pop	r14
  90:	df 90       	pop	r13
  92:	cf 90       	pop	r12
  94:	bf 90       	pop	r11
  96:	af 90       	pop	r10
  98:	9f 90       	pop	r9
  9a:	8f 90       	pop	r8
  9c:	7f 90       	pop	r7
  9e:	6f 90       	pop	r6
  a0:	5f 90       	pop	r5
  a2:	4f 90       	pop	r4
  a4:	3f 90       	pop	r3
  a6:	2f 90       	pop	r2
  a8:	1f 90       	pop	r1
  aa:	0f 90       	pop	r0
  ac:	0f be       	out	0x3f, r0	; 63
  ae:	0f 90       	pop	r0
  b0:	08 95       	ret

croutine.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .comment      00000012  00000000  00000000  00000034  2**0
                  CONTENTS, READONLY

event_groups.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.xEventGroupCreate 0000002a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.xEventGroupWaitBits 00000168  00000000  00000000  0000005e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.xEventGroupClearBits 0000003a  00000000  00000000  000001c6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.xEventGroupGetBitsFromISR 0000000c  00000000  00000000  00000200  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text.xEventGroupSetBits 00000138  00000000  00000000  0000020c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.xEventGroupSync 00000172  00000000  00000000  00000344  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.vEventGroupDelete 00000030  00000000  00000000  000004b6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.vEventGroupSetBitsCallback 00000004  00000000  00000000  000004e6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.vEventGroupClearBitsCallback 00000004  00000000  00000000  000004ea  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .comment      00000012  00000000  00000000  000004ee  2**0
                  CONTENTS, READONLY

Disassembly of section .text.xEventGroupCreate:

00000000 <xEventGroupCreate>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	8f e0       	ldi	r24, 0x0F	; 15
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	0e 94 00 00 	call	0	; 0x0 <xEventGroupCreate>
   c:	ec 01       	movw	r28, r24
   e:	00 97       	sbiw	r24, 0x00	; 0
  10:	01 f0       	breq	.+0      	; 0x12 <xEventGroupCreate+0x12>
  12:	fc 01       	movw	r30, r24
  14:	11 92       	st	Z+, r1
  16:	11 92       	st	Z+, r1
  18:	11 92       	st	Z+, r1
  1a:	11 92       	st	Z+, r1
  1c:	cf 01       	movw	r24, r30
  1e:	0e 94 00 00 	call	0	; 0x0 <xEventGroupCreate>
  22:	ce 01       	movw	r24, r28
  24:	df 91       	pop	r29
  26:	cf 91       	pop	r28
  28:	08 95       	ret

Disassembly of section .text.xEventGroupWaitBits:

00000000 <xEventGroupWaitBits>:
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
   e:	9f 92       	push	r9
  10:	af 92       	push	r10
  12:	bf 92       	push	r11
  14:	cf 92       	push	r12
  16:	df 92       	push	r13
  18:	ef 92       	push	r14
  1a:	ff 92       	push	r15
  1c:	0f 93       	push	r16
  1e:	1f 93       	push	r17
  20:	cf 93       	push	r28
  22:	df 93       	push	r29
  24:	ec 01       	movw	r28, r24
  26:	4a 01       	movw	r8, r20
  28:	5b 01       	movw	r10, r22
  2a:	72 2e       	mov	r7, r18
  2c:	60 2e       	mov	r6, r16
  2e:	0e 94 00 00 	call	0	; 0x0 <xEventGroupWaitBits>
  32:	28 80       	ld	r2, Y
  34:	39 80       	ldd	r3, Y+1	; 0x01
  36:	4a 80       	ldd	r4, Y+2	; 0x02
  38:	5b 80       	ldd	r5, Y+3	; 0x03
  3a:	d5 01       	movw	r26, r10
  3c:	c4 01       	movw	r24, r8
  3e:	82 21       	and	r24, r2
  40:	93 21       	and	r25, r3
  42:	a4 21       	and	r26, r4
  44:	b5 21       	and	r27, r5
  46:	01 11       	cpse	r16, r1
  48:	00 c0       	rjmp	.+0      	; 0x4a <xEventGroupWaitBits+0x4a>
  4a:	89 2b       	or	r24, r25
  4c:	8a 2b       	or	r24, r26
  4e:	8b 2b       	or	r24, r27
  50:	01 f4       	brne	.+0      	; 0x52 <xEventGroupWaitBits+0x52>
  52:	00 c0       	rjmp	.+0      	; 0x54 <xEventGroupWaitBits+0x54>
  54:	88 15       	cp	r24, r8
  56:	99 05       	cpc	r25, r9
  58:	aa 05       	cpc	r26, r10
  5a:	bb 05       	cpc	r27, r11
  5c:	01 f0       	breq	.+0      	; 0x5e <xEventGroupWaitBits+0x5e>
  5e:	00 c0       	rjmp	.+0      	; 0x60 <xEventGroupWaitBits+0x60>
  60:	77 20       	and	r7, r7
  62:	01 f0       	breq	.+0      	; 0x64 <xEventGroupWaitBits+0x64>
  64:	d5 01       	movw	r26, r10
  66:	c4 01       	movw	r24, r8
  68:	80 95       	com	r24
  6a:	90 95       	com	r25
  6c:	a0 95       	com	r26
  6e:	b0 95       	com	r27
  70:	82 21       	and	r24, r2
  72:	93 21       	and	r25, r3
  74:	a4 21       	and	r26, r4
  76:	b5 21       	and	r27, r5
  78:	88 83       	st	Y, r24
  7a:	99 83       	std	Y+1, r25	; 0x01
  7c:	aa 83       	std	Y+2, r26	; 0x02
  7e:	bb 83       	std	Y+3, r27	; 0x03
  80:	c1 2c       	mov	r12, r1
  82:	d1 2c       	mov	r13, r1
  84:	76 01       	movw	r14, r12
  86:	0e 94 00 00 	call	0	; 0x0 <xEventGroupWaitBits>
  8a:	cd 28       	or	r12, r13
  8c:	ce 28       	or	r12, r14
  8e:	cf 28       	or	r12, r15
  90:	01 f4       	brne	.+0      	; 0x92 <xEventGroupWaitBits+0x92>
  92:	00 c0       	rjmp	.+0      	; 0x94 <xEventGroupWaitBits+0x94>
  94:	81 11       	cpse	r24, r1
  96:	00 c0       	rjmp	.+0      	; 0x98 <xEventGroupWaitBits+0x98>
  98:	0e 94 00 00 	call	0	; 0x0 <xEventGroupWaitBits>
  9c:	0e 94 00 00 	call	0	; 0x0 <xEventGroupWaitBits>
  a0:	91 fd       	sbrc	r25, 1
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <xEventGroupWaitBits+0xa4>
  a4:	0f b6       	in	r0, 0x3f	; 63
  a6:	f8 94       	cli
  a8:	0f 92       	push	r0
  aa:	68 81       	ld	r22, Y
  ac:	79 81       	ldd	r23, Y+1	; 0x01
  ae:	8a 81       	ldd	r24, Y+2	; 0x02
  b0:	9b 81       	ldd	r25, Y+3	; 0x03
  b2:	75 01       	movw	r14, r10
  b4:	64 01       	movw	r12, r8
  b6:	c6 22       	and	r12, r22
  b8:	d7 22       	and	r13, r23
  ba:	e8 22       	and	r14, r24
  bc:	f9 22       	and	r15, r25
  be:	61 10       	cpse	r6, r1
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <xEventGroupWaitBits+0xc2>
  c2:	cd 28       	or	r12, r13
  c4:	ce 28       	or	r12, r14
  c6:	cf 28       	or	r12, r15
  c8:	01 f4       	brne	.+0      	; 0xca <xEventGroupWaitBits+0xca>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <xEventGroupWaitBits+0xcc>
  cc:	c8 14       	cp	r12, r8
  ce:	d9 04       	cpc	r13, r9
  d0:	ea 04       	cpc	r14, r10
  d2:	fb 04       	cpc	r15, r11
  d4:	01 f4       	brne	.+0      	; 0xd6 <xEventGroupWaitBits+0xd6>
  d6:	77 20       	and	r7, r7
  d8:	01 f0       	breq	.+0      	; 0xda <xEventGroupWaitBits+0xda>
  da:	80 94       	com	r8
  dc:	90 94       	com	r9
  de:	a0 94       	com	r10
  e0:	b0 94       	com	r11
  e2:	86 22       	and	r8, r22
  e4:	97 22       	and	r9, r23
  e6:	a8 22       	and	r10, r24
  e8:	b9 22       	and	r11, r25
  ea:	88 82       	st	Y, r8
  ec:	99 82       	std	Y+1, r9	; 0x01
  ee:	aa 82       	std	Y+2, r10	; 0x02
  f0:	bb 82       	std	Y+3, r11	; 0x03
  f2:	0f 90       	pop	r0
  f4:	0f be       	out	0x3f, r0	; 63
  f6:	1b 01       	movw	r2, r22
  f8:	2c 01       	movw	r4, r24
  fa:	55 24       	eor	r5, r5
  fc:	00 c0       	rjmp	.+0      	; 0xfe <xEventGroupWaitBits+0xfe>
  fe:	c1 14       	cp	r12, r1
 100:	d1 04       	cpc	r13, r1
 102:	e1 04       	cpc	r14, r1
 104:	f1 04       	cpc	r15, r1
 106:	01 f4       	brne	.+0      	; 0x108 <xEventGroupWaitBits+0x108>
 108:	00 c0       	rjmp	.+0      	; 0x10a <xEventGroupWaitBits+0x10a>
 10a:	77 20       	and	r7, r7
 10c:	01 f0       	breq	.+0      	; 0x10e <xEventGroupWaitBits+0x10e>
 10e:	40 e0       	ldi	r20, 0x00	; 0
 110:	50 e0       	ldi	r21, 0x00	; 0
 112:	60 e0       	ldi	r22, 0x00	; 0
 114:	71 e0       	ldi	r23, 0x01	; 1
 116:	00 c0       	rjmp	.+0      	; 0x118 <xEventGroupWaitBits+0x118>
 118:	40 e0       	ldi	r20, 0x00	; 0
 11a:	50 e0       	ldi	r21, 0x00	; 0
 11c:	ba 01       	movw	r22, r20
 11e:	61 10       	cpse	r6, r1
 120:	74 60       	ori	r23, 0x04	; 4
 122:	48 29       	or	r20, r8
 124:	59 29       	or	r21, r9
 126:	6a 29       	or	r22, r10
 128:	7b 29       	or	r23, r11
 12a:	97 01       	movw	r18, r14
 12c:	86 01       	movw	r16, r12
 12e:	ce 01       	movw	r24, r28
 130:	04 96       	adiw	r24, 0x04	; 4
 132:	0e 94 00 00 	call	0	; 0x0 <xEventGroupWaitBits>
 136:	21 2c       	mov	r2, r1
 138:	31 2c       	mov	r3, r1
 13a:	21 01       	movw	r4, r2
 13c:	00 c0       	rjmp	.+0      	; 0x13e <xEventGroupWaitBits+0x13e>
 13e:	c2 01       	movw	r24, r4
 140:	b1 01       	movw	r22, r2
 142:	df 91       	pop	r29
 144:	cf 91       	pop	r28
 146:	1f 91       	pop	r17
 148:	0f 91       	pop	r16
 14a:	ff 90       	pop	r15
 14c:	ef 90       	pop	r14
 14e:	df 90       	pop	r13
 150:	cf 90       	pop	r12
 152:	bf 90       	pop	r11
 154:	af 90       	pop	r10
 156:	9f 90       	pop	r9
 158:	8f 90       	pop	r8
 15a:	7f 90       	pop	r7
 15c:	6f 90       	pop	r6
 15e:	5f 90       	pop	r5
 160:	4f 90       	pop	r4
 162:	3f 90       	pop	r3
 164:	2f 90       	pop	r2
 166:	08 95       	ret

Disassembly of section .text.xEventGroupClearBits:

00000000 <xEventGroupClearBits>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	0f b6       	in	r0, 0x3f	; 63
   6:	f8 94       	cli
   8:	0f 92       	push	r0
   a:	fc 01       	movw	r30, r24
   c:	00 81       	ld	r16, Z
   e:	11 81       	ldd	r17, Z+1	; 0x01
  10:	22 81       	ldd	r18, Z+2	; 0x02
  12:	33 81       	ldd	r19, Z+3	; 0x03
  14:	40 95       	com	r20
  16:	50 95       	com	r21
  18:	60 95       	com	r22
  1a:	70 95       	com	r23
  1c:	40 23       	and	r20, r16
  1e:	51 23       	and	r21, r17
  20:	62 23       	and	r22, r18
  22:	73 23       	and	r23, r19
  24:	40 83       	st	Z, r20
  26:	51 83       	std	Z+1, r21	; 0x01
  28:	62 83       	std	Z+2, r22	; 0x02
  2a:	73 83       	std	Z+3, r23	; 0x03
  2c:	0f 90       	pop	r0
  2e:	0f be       	out	0x3f, r0	; 63
  30:	c9 01       	movw	r24, r18
  32:	b8 01       	movw	r22, r16
  34:	1f 91       	pop	r17
  36:	0f 91       	pop	r16
  38:	08 95       	ret

Disassembly of section .text.xEventGroupGetBitsFromISR:

00000000 <xEventGroupGetBitsFromISR>:
   0:	fc 01       	movw	r30, r24
   2:	60 81       	ld	r22, Z
   4:	71 81       	ldd	r23, Z+1	; 0x01
   6:	82 81       	ldd	r24, Z+2	; 0x02
   8:	93 81       	ldd	r25, Z+3	; 0x03
   a:	08 95       	ret

Disassembly of section .text.xEventGroupSetBits:

00000000 <xEventGroupSetBits>:
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
   e:	9f 92       	push	r9
  10:	af 92       	push	r10
  12:	bf 92       	push	r11
  14:	cf 92       	push	r12
  16:	df 92       	push	r13
  18:	ef 92       	push	r14
  1a:	ff 92       	push	r15
  1c:	0f 93       	push	r16
  1e:	1f 93       	push	r17
  20:	cf 93       	push	r28
  22:	df 93       	push	r29
  24:	00 d0       	rcall	.+0      	; 0x26 <xEventGroupSetBits+0x26>
  26:	00 d0       	rcall	.+0      	; 0x28 <xEventGroupSetBits+0x28>
  28:	00 d0       	rcall	.+0      	; 0x2a <xEventGroupSetBits+0x2a>
  2a:	cd b7       	in	r28, 0x3d	; 61
  2c:	de b7       	in	r29, 0x3e	; 62
  2e:	9e 83       	std	Y+6, r25	; 0x06
  30:	8d 83       	std	Y+5, r24	; 0x05
  32:	8c 01       	movw	r16, r24
  34:	09 5f       	subi	r16, 0xF9	; 249
  36:	1f 4f       	sbci	r17, 0xFF	; 255
  38:	49 83       	std	Y+1, r20	; 0x01
  3a:	5a 83       	std	Y+2, r21	; 0x02
  3c:	6b 83       	std	Y+3, r22	; 0x03
  3e:	7c 83       	std	Y+4, r23	; 0x04
  40:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSetBits>
  44:	ad 81       	ldd	r26, Y+5	; 0x05
  46:	be 81       	ldd	r27, Y+6	; 0x06
  48:	1b 96       	adiw	r26, 0x0b	; 11
  4a:	ed 91       	ld	r30, X+
  4c:	fc 91       	ld	r31, X
  4e:	1c 97       	sbiw	r26, 0x0c	; 12
  50:	cd 90       	ld	r12, X+
  52:	dd 90       	ld	r13, X+
  54:	ed 90       	ld	r14, X+
  56:	fc 90       	ld	r15, X
  58:	13 97       	sbiw	r26, 0x03	; 3
  5a:	49 81       	ldd	r20, Y+1	; 0x01
  5c:	5a 81       	ldd	r21, Y+2	; 0x02
  5e:	6b 81       	ldd	r22, Y+3	; 0x03
  60:	7c 81       	ldd	r23, Y+4	; 0x04
  62:	4c 29       	or	r20, r12
  64:	5d 29       	or	r21, r13
  66:	6e 29       	or	r22, r14
  68:	7f 29       	or	r23, r15
  6a:	4d 93       	st	X+, r20
  6c:	5d 93       	st	X+, r21
  6e:	6d 93       	st	X+, r22
  70:	7c 93       	st	X, r23
  72:	13 97       	sbiw	r26, 0x03	; 3
  74:	c1 2c       	mov	r12, r1
  76:	d1 2c       	mov	r13, r1
  78:	76 01       	movw	r14, r12
  7a:	ad 81       	ldd	r26, Y+5	; 0x05
  7c:	be 81       	ldd	r27, Y+6	; 0x06
  7e:	4d 91       	ld	r20, X+
  80:	5d 91       	ld	r21, X+
  82:	6d 91       	ld	r22, X+
  84:	7c 91       	ld	r23, X
  86:	13 97       	sbiw	r26, 0x03	; 3
  88:	e0 17       	cp	r30, r16
  8a:	f1 07       	cpc	r31, r17
  8c:	01 f0       	breq	.+0      	; 0x8e <xEventGroupSetBits+0x8e>
  8e:	24 80       	ldd	r2, Z+4	; 0x04
  90:	35 80       	ldd	r3, Z+5	; 0x05
  92:	80 80       	ld	r8, Z
  94:	91 80       	ldd	r9, Z+1	; 0x01
  96:	a2 80       	ldd	r10, Z+2	; 0x02
  98:	b3 80       	ldd	r11, Z+3	; 0x03
  9a:	d5 01       	movw	r26, r10
  9c:	c4 01       	movw	r24, r8
  9e:	bb 27       	eor	r27, r27
  a0:	2c 01       	movw	r4, r24
  a2:	3d 01       	movw	r6, r26
  a4:	44 22       	and	r4, r20
  a6:	55 22       	and	r5, r21
  a8:	66 22       	and	r6, r22
  aa:	77 22       	and	r7, r23
  ac:	b2 fc       	sbrc	r11, 2
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <xEventGroupSetBits+0xb0>
  b0:	45 28       	or	r4, r5
  b2:	46 28       	or	r4, r6
  b4:	47 28       	or	r4, r7
  b6:	01 f4       	brne	.+0      	; 0xb8 <xEventGroupSetBits+0xb8>
  b8:	00 c0       	rjmp	.+0      	; 0xba <xEventGroupSetBits+0xba>
  ba:	48 16       	cp	r4, r24
  bc:	59 06       	cpc	r5, r25
  be:	6a 06       	cpc	r6, r26
  c0:	7b 06       	cpc	r7, r27
  c2:	01 f4       	brne	.+0      	; 0xc4 <xEventGroupSetBits+0xc4>
  c4:	b0 fe       	sbrs	r11, 0
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <xEventGroupSetBits+0xc8>
  c8:	c8 2a       	or	r12, r24
  ca:	d9 2a       	or	r13, r25
  cc:	ea 2a       	or	r14, r26
  ce:	fb 2a       	or	r15, r27
  d0:	72 60       	ori	r23, 0x02	; 2
  d2:	cf 01       	movw	r24, r30
  d4:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSetBits>
  d8:	f1 01       	movw	r30, r2
  da:	00 c0       	rjmp	.+0      	; 0xdc <xEventGroupSetBits+0xdc>
  dc:	c0 94       	com	r12
  de:	d0 94       	com	r13
  e0:	e0 94       	com	r14
  e2:	f0 94       	com	r15
  e4:	4c 21       	and	r20, r12
  e6:	5d 21       	and	r21, r13
  e8:	6e 21       	and	r22, r14
  ea:	7f 21       	and	r23, r15
  ec:	fd 01       	movw	r30, r26
  ee:	40 83       	st	Z, r20
  f0:	51 83       	std	Z+1, r21	; 0x01
  f2:	62 83       	std	Z+2, r22	; 0x02
  f4:	73 83       	std	Z+3, r23	; 0x03
  f6:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSetBits>
  fa:	ad 81       	ldd	r26, Y+5	; 0x05
  fc:	be 81       	ldd	r27, Y+6	; 0x06
  fe:	6d 91       	ld	r22, X+
 100:	7d 91       	ld	r23, X+
 102:	8d 91       	ld	r24, X+
 104:	9c 91       	ld	r25, X
 106:	26 96       	adiw	r28, 0x06	; 6
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	f8 94       	cli
 10c:	de bf       	out	0x3e, r29	; 62
 10e:	0f be       	out	0x3f, r0	; 63
 110:	cd bf       	out	0x3d, r28	; 61
 112:	df 91       	pop	r29
 114:	cf 91       	pop	r28
 116:	1f 91       	pop	r17
 118:	0f 91       	pop	r16
 11a:	ff 90       	pop	r15
 11c:	ef 90       	pop	r14
 11e:	df 90       	pop	r13
 120:	cf 90       	pop	r12
 122:	bf 90       	pop	r11
 124:	af 90       	pop	r10
 126:	9f 90       	pop	r9
 128:	8f 90       	pop	r8
 12a:	7f 90       	pop	r7
 12c:	6f 90       	pop	r6
 12e:	5f 90       	pop	r5
 130:	4f 90       	pop	r4
 132:	3f 90       	pop	r3
 134:	2f 90       	pop	r2
 136:	08 95       	ret

Disassembly of section .text.xEventGroupSync:

00000000 <xEventGroupSync>:
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
   e:	9f 92       	push	r9
  10:	af 92       	push	r10
  12:	bf 92       	push	r11
  14:	cf 92       	push	r12
  16:	df 92       	push	r13
  18:	ef 92       	push	r14
  1a:	ff 92       	push	r15
  1c:	0f 93       	push	r16
  1e:	1f 93       	push	r17
  20:	cf 93       	push	r28
  22:	df 93       	push	r29
  24:	00 d0       	rcall	.+0      	; 0x26 <xEventGroupSync+0x26>
  26:	00 d0       	rcall	.+0      	; 0x28 <xEventGroupSync+0x28>
  28:	cd b7       	in	r28, 0x3d	; 61
  2a:	de b7       	in	r29, 0x3e	; 62
  2c:	1c 01       	movw	r2, r24
  2e:	2a 01       	movw	r4, r20
  30:	3b 01       	movw	r6, r22
  32:	48 01       	movw	r8, r16
  34:	59 01       	movw	r10, r18
  36:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSync>
  3a:	d1 01       	movw	r26, r2
  3c:	8d 91       	ld	r24, X+
  3e:	9d 91       	ld	r25, X+
  40:	0d 90       	ld	r0, X+
  42:	bc 91       	ld	r27, X
  44:	a0 2d       	mov	r26, r0
  46:	89 83       	std	Y+1, r24	; 0x01
  48:	9a 83       	std	Y+2, r25	; 0x02
  4a:	ab 83       	std	Y+3, r26	; 0x03
  4c:	bc 83       	std	Y+4, r27	; 0x04
  4e:	b3 01       	movw	r22, r6
  50:	a2 01       	movw	r20, r4
  52:	c1 01       	movw	r24, r2
  54:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSync>
  58:	89 81       	ldd	r24, Y+1	; 0x01
  5a:	9a 81       	ldd	r25, Y+2	; 0x02
  5c:	ab 81       	ldd	r26, Y+3	; 0x03
  5e:	bc 81       	ldd	r27, Y+4	; 0x04
  60:	48 2a       	or	r4, r24
  62:	59 2a       	or	r5, r25
  64:	6a 2a       	or	r6, r26
  66:	7b 2a       	or	r7, r27
  68:	d3 01       	movw	r26, r6
  6a:	c2 01       	movw	r24, r4
  6c:	88 21       	and	r24, r8
  6e:	99 21       	and	r25, r9
  70:	aa 21       	and	r26, r10
  72:	bb 21       	and	r27, r11
  74:	88 15       	cp	r24, r8
  76:	99 05       	cpc	r25, r9
  78:	aa 05       	cpc	r26, r10
  7a:	bb 05       	cpc	r27, r11
  7c:	01 f4       	brne	.+0      	; 0x7e <xEventGroupSync+0x7e>
  7e:	d1 01       	movw	r26, r2
  80:	4d 91       	ld	r20, X+
  82:	5d 91       	ld	r21, X+
  84:	6d 91       	ld	r22, X+
  86:	7c 91       	ld	r23, X
  88:	d5 01       	movw	r26, r10
  8a:	c4 01       	movw	r24, r8
  8c:	80 95       	com	r24
  8e:	90 95       	com	r25
  90:	a0 95       	com	r26
  92:	b0 95       	com	r27
  94:	84 23       	and	r24, r20
  96:	95 23       	and	r25, r21
  98:	a6 23       	and	r26, r22
  9a:	b7 23       	and	r27, r23
  9c:	f1 01       	movw	r30, r2
  9e:	80 83       	st	Z, r24
  a0:	91 83       	std	Z+1, r25	; 0x01
  a2:	a2 83       	std	Z+2, r26	; 0x02
  a4:	b3 83       	std	Z+3, r27	; 0x03
  a6:	c1 2c       	mov	r12, r1
  a8:	d1 2c       	mov	r13, r1
  aa:	76 01       	movw	r14, r12
  ac:	00 c0       	rjmp	.+0      	; 0xae <xEventGroupSync+0xae>
  ae:	c1 14       	cp	r12, r1
  b0:	d1 04       	cpc	r13, r1
  b2:	e1 04       	cpc	r14, r1
  b4:	f1 04       	cpc	r15, r1
  b6:	01 f0       	breq	.+0      	; 0xb8 <xEventGroupSync+0xb8>
  b8:	97 01       	movw	r18, r14
  ba:	86 01       	movw	r16, r12
  bc:	b5 01       	movw	r22, r10
  be:	a4 01       	movw	r20, r8
  c0:	75 60       	ori	r23, 0x05	; 5
  c2:	c1 01       	movw	r24, r2
  c4:	04 96       	adiw	r24, 0x04	; 4
  c6:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSync>
  ca:	41 2c       	mov	r4, r1
  cc:	51 2c       	mov	r5, r1
  ce:	32 01       	movw	r6, r4
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <xEventGroupSync+0xd2>
  d2:	d1 01       	movw	r26, r2
  d4:	4d 90       	ld	r4, X+
  d6:	5d 90       	ld	r5, X+
  d8:	6d 90       	ld	r6, X+
  da:	7c 90       	ld	r7, X
  dc:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSync>
  e0:	cd 28       	or	r12, r13
  e2:	ce 28       	or	r12, r14
  e4:	cf 28       	or	r12, r15
  e6:	01 f0       	breq	.+0      	; 0xe8 <xEventGroupSync+0xe8>
  e8:	81 11       	cpse	r24, r1
  ea:	00 c0       	rjmp	.+0      	; 0xec <xEventGroupSync+0xec>
  ec:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSync>
  f0:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSync>
  f4:	91 fd       	sbrc	r25, 1
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <xEventGroupSync+0xf8>
  f8:	0f b6       	in	r0, 0x3f	; 63
  fa:	f8 94       	cli
  fc:	0f 92       	push	r0
  fe:	f1 01       	movw	r30, r2
 100:	60 81       	ld	r22, Z
 102:	71 81       	ldd	r23, Z+1	; 0x01
 104:	82 81       	ldd	r24, Z+2	; 0x02
 106:	93 81       	ldd	r25, Z+3	; 0x03
 108:	75 01       	movw	r14, r10
 10a:	64 01       	movw	r12, r8
 10c:	c6 22       	and	r12, r22
 10e:	d7 22       	and	r13, r23
 110:	e8 22       	and	r14, r24
 112:	f9 22       	and	r15, r25
 114:	c8 14       	cp	r12, r8
 116:	d9 04       	cpc	r13, r9
 118:	ea 04       	cpc	r14, r10
 11a:	fb 04       	cpc	r15, r11
 11c:	01 f4       	brne	.+0      	; 0x11e <xEventGroupSync+0x11e>
 11e:	80 94       	com	r8
 120:	90 94       	com	r9
 122:	a0 94       	com	r10
 124:	b0 94       	com	r11
 126:	86 22       	and	r8, r22
 128:	97 22       	and	r9, r23
 12a:	a8 22       	and	r10, r24
 12c:	b9 22       	and	r11, r25
 12e:	80 82       	st	Z, r8
 130:	91 82       	std	Z+1, r9	; 0x01
 132:	a2 82       	std	Z+2, r10	; 0x02
 134:	b3 82       	std	Z+3, r11	; 0x03
 136:	0f 90       	pop	r0
 138:	0f be       	out	0x3f, r0	; 63
 13a:	2b 01       	movw	r4, r22
 13c:	3c 01       	movw	r6, r24
 13e:	77 24       	eor	r7, r7
 140:	c3 01       	movw	r24, r6
 142:	b2 01       	movw	r22, r4
 144:	0f 90       	pop	r0
 146:	0f 90       	pop	r0
 148:	0f 90       	pop	r0
 14a:	0f 90       	pop	r0
 14c:	df 91       	pop	r29
 14e:	cf 91       	pop	r28
 150:	1f 91       	pop	r17
 152:	0f 91       	pop	r16
 154:	ff 90       	pop	r15
 156:	ef 90       	pop	r14
 158:	df 90       	pop	r13
 15a:	cf 90       	pop	r12
 15c:	bf 90       	pop	r11
 15e:	af 90       	pop	r10
 160:	9f 90       	pop	r9
 162:	8f 90       	pop	r8
 164:	7f 90       	pop	r7
 166:	6f 90       	pop	r6
 168:	5f 90       	pop	r5
 16a:	4f 90       	pop	r4
 16c:	3f 90       	pop	r3
 16e:	2f 90       	pop	r2
 170:	08 95       	ret

Disassembly of section .text.vEventGroupDelete:

00000000 <vEventGroupDelete>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	0e 94 00 00 	call	0	; 0x0 <vEventGroupDelete>
   a:	8c 81       	ldd	r24, Y+4	; 0x04
   c:	88 23       	and	r24, r24
   e:	01 f0       	breq	.+0      	; 0x10 <vEventGroupDelete+0x10>
  10:	40 e0       	ldi	r20, 0x00	; 0
  12:	50 e0       	ldi	r21, 0x00	; 0
  14:	60 e0       	ldi	r22, 0x00	; 0
  16:	72 e0       	ldi	r23, 0x02	; 2
  18:	8b 85       	ldd	r24, Y+11	; 0x0b
  1a:	9c 85       	ldd	r25, Y+12	; 0x0c
  1c:	0e 94 00 00 	call	0	; 0x0 <vEventGroupDelete>
  20:	00 c0       	rjmp	.+0      	; 0x22 <vEventGroupDelete+0x22>
  22:	ce 01       	movw	r24, r28
  24:	0e 94 00 00 	call	0	; 0x0 <vEventGroupDelete>
  28:	df 91       	pop	r29
  2a:	cf 91       	pop	r28
  2c:	0c 94 00 00 	jmp	0	; 0x0 <vEventGroupDelete>

Disassembly of section .text.vEventGroupSetBitsCallback:

00000000 <vEventGroupSetBitsCallback>:
   0:	0c 94 00 00 	jmp	0	; 0x0 <vEventGroupSetBitsCallback>

Disassembly of section .text.vEventGroupClearBitsCallback:

00000000 <vEventGroupClearBitsCallback>:
   0:	0c 94 00 00 	jmp	0	; 0x0 <vEventGroupClearBitsCallback>

list.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.vListInitialise 00000028  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.vListInitialiseItem 00000008  00000000  00000000  0000005c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.vListInsertEnd 0000003e  00000000  00000000  00000064  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.vListInsert 00000084  00000000  00000000  000000a2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.uxListRemove 00000054  00000000  00000000  00000126  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.vListInitialise:

00000000 <vListInitialise>:
   0:	fc 01       	movw	r30, r24
   2:	9c 01       	movw	r18, r24
   4:	2d 5f       	subi	r18, 0xFD	; 253
   6:	3f 4f       	sbci	r19, 0xFF	; 255
   8:	32 83       	std	Z+2, r19	; 0x02
   a:	21 83       	std	Z+1, r18	; 0x01
   c:	8f ef       	ldi	r24, 0xFF	; 255
   e:	9f ef       	ldi	r25, 0xFF	; 255
  10:	af ef       	ldi	r26, 0xFF	; 255
  12:	bf ef       	ldi	r27, 0xFF	; 255
  14:	83 83       	std	Z+3, r24	; 0x03
  16:	94 83       	std	Z+4, r25	; 0x04
  18:	a5 83       	std	Z+5, r26	; 0x05
  1a:	b6 83       	std	Z+6, r27	; 0x06
  1c:	30 87       	std	Z+8, r19	; 0x08
  1e:	27 83       	std	Z+7, r18	; 0x07
  20:	32 87       	std	Z+10, r19	; 0x0a
  22:	21 87       	std	Z+9, r18	; 0x09
  24:	10 82       	st	Z, r1
  26:	08 95       	ret

Disassembly of section .text.vListInitialiseItem:

00000000 <vListInitialiseItem>:
   0:	fc 01       	movw	r30, r24
   2:	13 86       	std	Z+11, r1	; 0x0b
   4:	12 86       	std	Z+10, r1	; 0x0a
   6:	08 95       	ret

Disassembly of section .text.vListInsertEnd:

00000000 <vListInsertEnd>:
   0:	ac 01       	movw	r20, r24
   2:	fc 01       	movw	r30, r24
   4:	a1 81       	ldd	r26, Z+1	; 0x01
   6:	b2 81       	ldd	r27, Z+2	; 0x02
   8:	fb 01       	movw	r30, r22
   a:	b5 83       	std	Z+5, r27	; 0x05
   c:	a4 83       	std	Z+4, r26	; 0x04
   e:	16 96       	adiw	r26, 0x06	; 6
  10:	8d 91       	ld	r24, X+
  12:	9c 91       	ld	r25, X
  14:	17 97       	sbiw	r26, 0x07	; 7
  16:	97 83       	std	Z+7, r25	; 0x07
  18:	86 83       	std	Z+6, r24	; 0x06
  1a:	16 96       	adiw	r26, 0x06	; 6
  1c:	ed 91       	ld	r30, X+
  1e:	fc 91       	ld	r31, X
  20:	17 97       	sbiw	r26, 0x07	; 7
  22:	75 83       	std	Z+5, r23	; 0x05
  24:	64 83       	std	Z+4, r22	; 0x04
  26:	17 96       	adiw	r26, 0x07	; 7
  28:	7c 93       	st	X, r23
  2a:	6e 93       	st	-X, r22
  2c:	16 97       	sbiw	r26, 0x06	; 6
  2e:	fb 01       	movw	r30, r22
  30:	53 87       	std	Z+11, r21	; 0x0b
  32:	42 87       	std	Z+10, r20	; 0x0a
  34:	fa 01       	movw	r30, r20
  36:	80 81       	ld	r24, Z
  38:	8f 5f       	subi	r24, 0xFF	; 255
  3a:	80 83       	st	Z, r24
  3c:	08 95       	ret

Disassembly of section .text.vListInsert:

00000000 <vListInsert>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	9b 01       	movw	r18, r22
   c:	db 01       	movw	r26, r22
   e:	4d 91       	ld	r20, X+
  10:	5d 91       	ld	r21, X+
  12:	6d 91       	ld	r22, X+
  14:	7c 91       	ld	r23, X
  16:	4f 3f       	cpi	r20, 0xFF	; 255
  18:	bf ef       	ldi	r27, 0xFF	; 255
  1a:	5b 07       	cpc	r21, r27
  1c:	bf ef       	ldi	r27, 0xFF	; 255
  1e:	6b 07       	cpc	r22, r27
  20:	bf ef       	ldi	r27, 0xFF	; 255
  22:	7b 07       	cpc	r23, r27
  24:	01 f4       	brne	.+0      	; 0x26 <vListInsert+0x26>
  26:	fc 01       	movw	r30, r24
  28:	c1 85       	ldd	r28, Z+9	; 0x09
  2a:	d2 85       	ldd	r29, Z+10	; 0x0a
  2c:	00 c0       	rjmp	.+0      	; 0x2e <vListInsert+0x2e>
  2e:	ec 01       	movw	r28, r24
  30:	23 96       	adiw	r28, 0x03	; 3
  32:	ec 81       	ldd	r30, Y+4	; 0x04
  34:	fd 81       	ldd	r31, Y+5	; 0x05
  36:	80 81       	ld	r24, Z
  38:	91 81       	ldd	r25, Z+1	; 0x01
  3a:	a2 81       	ldd	r26, Z+2	; 0x02
  3c:	b3 81       	ldd	r27, Z+3	; 0x03
  3e:	48 17       	cp	r20, r24
  40:	59 07       	cpc	r21, r25
  42:	6a 07       	cpc	r22, r26
  44:	7b 07       	cpc	r23, r27
  46:	00 f0       	brcs	.+0      	; 0x48 <vListInsert+0x48>
  48:	ef 01       	movw	r28, r30
  4a:	00 c0       	rjmp	.+0      	; 0x4c <vListInsert+0x4c>
  4c:	ec 81       	ldd	r30, Y+4	; 0x04
  4e:	fd 81       	ldd	r31, Y+5	; 0x05
  50:	d9 01       	movw	r26, r18
  52:	15 96       	adiw	r26, 0x05	; 5
  54:	fc 93       	st	X, r31
  56:	ee 93       	st	-X, r30
  58:	14 97       	sbiw	r26, 0x04	; 4
  5a:	37 83       	std	Z+7, r19	; 0x07
  5c:	26 83       	std	Z+6, r18	; 0x06
  5e:	17 96       	adiw	r26, 0x07	; 7
  60:	dc 93       	st	X, r29
  62:	ce 93       	st	-X, r28
  64:	16 97       	sbiw	r26, 0x06	; 6
  66:	3d 83       	std	Y+5, r19	; 0x05
  68:	2c 83       	std	Y+4, r18	; 0x04
  6a:	1b 96       	adiw	r26, 0x0b	; 11
  6c:	1c 93       	st	X, r17
  6e:	0e 93       	st	-X, r16
  70:	1a 97       	sbiw	r26, 0x0a	; 10
  72:	f8 01       	movw	r30, r16
  74:	80 81       	ld	r24, Z
  76:	8f 5f       	subi	r24, 0xFF	; 255
  78:	80 83       	st	Z, r24
  7a:	df 91       	pop	r29
  7c:	cf 91       	pop	r28
  7e:	1f 91       	pop	r17
  80:	0f 91       	pop	r16
  82:	08 95       	ret

Disassembly of section .text.uxListRemove:

00000000 <uxListRemove>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	dc 01       	movw	r26, r24
   6:	1a 96       	adiw	r26, 0x0a	; 10
   8:	cd 91       	ld	r28, X+
   a:	dc 91       	ld	r29, X
   c:	1b 97       	sbiw	r26, 0x0b	; 11
   e:	14 96       	adiw	r26, 0x04	; 4
  10:	4d 91       	ld	r20, X+
  12:	5c 91       	ld	r21, X
  14:	15 97       	sbiw	r26, 0x05	; 5
  16:	16 96       	adiw	r26, 0x06	; 6
  18:	8d 91       	ld	r24, X+
  1a:	9c 91       	ld	r25, X
  1c:	17 97       	sbiw	r26, 0x07	; 7
  1e:	fa 01       	movw	r30, r20
  20:	97 83       	std	Z+7, r25	; 0x07
  22:	86 83       	std	Z+6, r24	; 0x06
  24:	16 96       	adiw	r26, 0x06	; 6
  26:	2d 91       	ld	r18, X+
  28:	3c 91       	ld	r19, X
  2a:	17 97       	sbiw	r26, 0x07	; 7
  2c:	f9 01       	movw	r30, r18
  2e:	55 83       	std	Z+5, r21	; 0x05
  30:	44 83       	std	Z+4, r20	; 0x04
  32:	89 81       	ldd	r24, Y+1	; 0x01
  34:	9a 81       	ldd	r25, Y+2	; 0x02
  36:	8a 17       	cp	r24, r26
  38:	9b 07       	cpc	r25, r27
  3a:	01 f4       	brne	.+0      	; 0x3c <uxListRemove+0x3c>
  3c:	3a 83       	std	Y+2, r19	; 0x02
  3e:	29 83       	std	Y+1, r18	; 0x01
  40:	1b 96       	adiw	r26, 0x0b	; 11
  42:	1c 92       	st	X, r1
  44:	1e 92       	st	-X, r1
  46:	1a 97       	sbiw	r26, 0x0a	; 10
  48:	88 81       	ld	r24, Y
  4a:	81 50       	subi	r24, 0x01	; 1
  4c:	88 83       	st	Y, r24
  4e:	df 91       	pop	r29
  50:	cf 91       	pop	r28
  52:	08 95       	ret

queue.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.uxQueueMessagesWaiting 00000010  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.uxQueueSpacesAvailable 00000014  00000000  00000000  00000044  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.uxQueueMessagesWaitingFromISR 00000006  00000000  00000000  00000058  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.xQueueIsQueueEmptyFromISR 00000010  00000000  00000000  0000005e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.xQueueIsQueueFullFromISR 00000012  00000000  00000000  0000006e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.vQueueDelete 00000006  00000000  00000000  00000080  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.prvCopyDataFromQueue 0000003c  00000000  00000000  00000086  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.xQueuePeekFromISR 0000002a  00000000  00000000  000000c2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.xQueueReceiveFromISR 00000056  00000000  00000000  000000ec  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text.xQueueGiveFromISR 0000004a  00000000  00000000  00000142  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text.prvUnlockQueue 00000080  00000000  00000000  0000018c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text.xQueueGenericReceive 000001b0  00000000  00000000  0000020c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text.prvCopyDataToQueue 000000b4  00000000  00000000  000003bc  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text.xQueueGenericSendFromISR 0000005c  00000000  00000000  00000470  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .text.xQueueGenericSend 0000016e  00000000  00000000  000004cc  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 18 .text.xQueueCreateMutex 00000060  00000000  00000000  0000063a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 19 .text.xQueueGenericReset 00000084  00000000  00000000  0000069a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 20 .text.xQueueGenericCreate 0000005a  00000000  00000000  0000071e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 21 .text.xQueueCreateCountingSemaphore 0000001a  00000000  00000000  00000778  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.uxQueueMessagesWaiting:

00000000 <uxQueueMessagesWaiting>:
   0:	0f b6       	in	r0, 0x3f	; 63
   2:	f8 94       	cli
   4:	0f 92       	push	r0
   6:	fc 01       	movw	r30, r24
   8:	86 8d       	ldd	r24, Z+30	; 0x1e
   a:	0f 90       	pop	r0
   c:	0f be       	out	0x3f, r0	; 63
   e:	08 95       	ret

Disassembly of section .text.uxQueueSpacesAvailable:

00000000 <uxQueueSpacesAvailable>:
   0:	fc 01       	movw	r30, r24
   2:	0f b6       	in	r0, 0x3f	; 63
   4:	f8 94       	cli
   6:	0f 92       	push	r0
   8:	96 8d       	ldd	r25, Z+30	; 0x1e
   a:	0f 90       	pop	r0
   c:	0f be       	out	0x3f, r0	; 63
   e:	87 8d       	ldd	r24, Z+31	; 0x1f
  10:	89 1b       	sub	r24, r25
  12:	08 95       	ret

Disassembly of section .text.uxQueueMessagesWaitingFromISR:

00000000 <uxQueueMessagesWaitingFromISR>:
   0:	fc 01       	movw	r30, r24
   2:	86 8d       	ldd	r24, Z+30	; 0x1e
   4:	08 95       	ret

Disassembly of section .text.xQueueIsQueueEmptyFromISR:

00000000 <xQueueIsQueueEmptyFromISR>:
   0:	fc 01       	movw	r30, r24
   2:	86 8d       	ldd	r24, Z+30	; 0x1e
   4:	90 e0       	ldi	r25, 0x00	; 0
   6:	88 23       	and	r24, r24
   8:	01 f4       	brne	.+0      	; 0xa <xQueueIsQueueEmptyFromISR+0xa>
   a:	91 e0       	ldi	r25, 0x01	; 1
   c:	89 2f       	mov	r24, r25
   e:	08 95       	ret

Disassembly of section .text.xQueueIsQueueFullFromISR:

00000000 <xQueueIsQueueFullFromISR>:
   0:	fc 01       	movw	r30, r24
   2:	96 8d       	ldd	r25, Z+30	; 0x1e
   4:	20 e0       	ldi	r18, 0x00	; 0
   6:	87 8d       	ldd	r24, Z+31	; 0x1f
   8:	98 17       	cp	r25, r24
   a:	01 f4       	brne	.+0      	; 0xc <xQueueIsQueueFullFromISR+0xc>
   c:	21 e0       	ldi	r18, 0x01	; 1
   e:	82 2f       	mov	r24, r18
  10:	08 95       	ret

Disassembly of section .text.vQueueDelete:

00000000 <vQueueDelete>:
   0:	0e 94 00 00 	call	0	; 0x0 <vQueueDelete>
   4:	08 95       	ret

Disassembly of section .text.prvCopyDataFromQueue:

00000000 <prvCopyDataFromQueue>:
   0:	fc 01       	movw	r30, r24
   2:	56 2f       	mov	r21, r22
   4:	a7 2f       	mov	r26, r23
   6:	20 a1       	ldd	r18, Z+32	; 0x20
   8:	22 23       	and	r18, r18
   a:	01 f0       	breq	.+0      	; 0xc <prvCopyDataFromQueue+0xc>
   c:	86 81       	ldd	r24, Z+6	; 0x06
   e:	97 81       	ldd	r25, Z+7	; 0x07
  10:	82 0f       	add	r24, r18
  12:	91 1d       	adc	r25, r1
  14:	97 83       	std	Z+7, r25	; 0x07
  16:	86 83       	std	Z+6, r24	; 0x06
  18:	22 81       	ldd	r18, Z+2	; 0x02
  1a:	33 81       	ldd	r19, Z+3	; 0x03
  1c:	82 17       	cp	r24, r18
  1e:	93 07       	cpc	r25, r19
  20:	00 f0       	brcs	.+0      	; 0x22 <prvCopyDataFromQueue+0x22>
  22:	80 81       	ld	r24, Z
  24:	91 81       	ldd	r25, Z+1	; 0x01
  26:	97 83       	std	Z+7, r25	; 0x07
  28:	86 83       	std	Z+6, r24	; 0x06
  2a:	40 a1       	ldd	r20, Z+32	; 0x20
  2c:	66 81       	ldd	r22, Z+6	; 0x06
  2e:	77 81       	ldd	r23, Z+7	; 0x07
  30:	85 2f       	mov	r24, r21
  32:	9a 2f       	mov	r25, r26
  34:	50 e0       	ldi	r21, 0x00	; 0
  36:	0e 94 00 00 	call	0	; 0x0 <prvCopyDataFromQueue>
  3a:	08 95       	ret

Disassembly of section .text.xQueuePeekFromISR:

00000000 <xQueuePeekFromISR>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	8e 8d       	ldd	r24, Y+30	; 0x1e
   c:	88 23       	and	r24, r24
   e:	01 f0       	breq	.+0      	; 0x10 <xQueuePeekFromISR+0x10>
  10:	0e 81       	ldd	r16, Y+6	; 0x06
  12:	1f 81       	ldd	r17, Y+7	; 0x07
  14:	ce 01       	movw	r24, r28
  16:	0e 94 00 00 	call	0	; 0x0 <xQueuePeekFromISR>
  1a:	1f 83       	std	Y+7, r17	; 0x07
  1c:	0e 83       	std	Y+6, r16	; 0x06
  1e:	81 e0       	ldi	r24, 0x01	; 1
  20:	df 91       	pop	r29
  22:	cf 91       	pop	r28
  24:	1f 91       	pop	r17
  26:	0f 91       	pop	r16
  28:	08 95       	ret

Disassembly of section .text.xQueueReceiveFromISR:

00000000 <xQueueReceiveFromISR>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8a 01       	movw	r16, r20
   a:	ec 01       	movw	r28, r24
   c:	8e 8d       	ldd	r24, Y+30	; 0x1e
   e:	88 23       	and	r24, r24
  10:	01 f0       	breq	.+0      	; 0x12 <xQueueReceiveFromISR+0x12>
  12:	ce 01       	movw	r24, r28
  14:	0e 94 00 00 	call	0	; 0x0 <xQueueReceiveFromISR>
  18:	8e 8d       	ldd	r24, Y+30	; 0x1e
  1a:	81 50       	subi	r24, 0x01	; 1
  1c:	8e 8f       	std	Y+30, r24	; 0x1e
  1e:	89 a1       	ldd	r24, Y+33	; 0x21
  20:	8f 3f       	cpi	r24, 0xFF	; 255
  22:	01 f4       	brne	.+0      	; 0x24 <xQueueReceiveFromISR+0x24>
  24:	88 85       	ldd	r24, Y+8	; 0x08
  26:	88 23       	and	r24, r24
  28:	01 f0       	breq	.+0      	; 0x2a <xQueueReceiveFromISR+0x2a>
  2a:	ce 01       	movw	r24, r28
  2c:	08 96       	adiw	r24, 0x08	; 8
  2e:	0e 94 00 00 	call	0	; 0x0 <xQueueReceiveFromISR>
  32:	88 23       	and	r24, r24
  34:	01 f0       	breq	.+0      	; 0x36 <xQueueReceiveFromISR+0x36>
  36:	01 15       	cp	r16, r1
  38:	11 05       	cpc	r17, r1
  3a:	01 f0       	breq	.+0      	; 0x3c <xQueueReceiveFromISR+0x3c>
  3c:	81 e0       	ldi	r24, 0x01	; 1
  3e:	f8 01       	movw	r30, r16
  40:	80 83       	st	Z, r24
  42:	00 c0       	rjmp	.+0      	; 0x44 <xQueueReceiveFromISR+0x44>
  44:	89 a1       	ldd	r24, Y+33	; 0x21
  46:	8f 5f       	subi	r24, 0xFF	; 255
  48:	89 a3       	std	Y+33, r24	; 0x21
  4a:	81 e0       	ldi	r24, 0x01	; 1
  4c:	df 91       	pop	r29
  4e:	cf 91       	pop	r28
  50:	1f 91       	pop	r17
  52:	0f 91       	pop	r16
  54:	08 95       	ret

Disassembly of section .text.xQueueGiveFromISR:

00000000 <xQueueGiveFromISR>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	eb 01       	movw	r28, r22
   6:	fc 01       	movw	r30, r24
   8:	96 8d       	ldd	r25, Z+30	; 0x1e
   a:	87 8d       	ldd	r24, Z+31	; 0x1f
   c:	98 17       	cp	r25, r24
   e:	00 f0       	brcs	.+0      	; 0x10 <xQueueGiveFromISR+0x10>
  10:	80 e0       	ldi	r24, 0x00	; 0
  12:	00 c0       	rjmp	.+0      	; 0x14 <xQueueGiveFromISR+0x14>
  14:	86 8d       	ldd	r24, Z+30	; 0x1e
  16:	8f 5f       	subi	r24, 0xFF	; 255
  18:	86 8f       	std	Z+30, r24	; 0x1e
  1a:	82 a1       	ldd	r24, Z+34	; 0x22
  1c:	8f 3f       	cpi	r24, 0xFF	; 255
  1e:	01 f4       	brne	.+0      	; 0x20 <xQueueGiveFromISR+0x20>
  20:	83 89       	ldd	r24, Z+19	; 0x13
  22:	88 23       	and	r24, r24
  24:	01 f0       	breq	.+0      	; 0x26 <xQueueGiveFromISR+0x26>
  26:	cf 01       	movw	r24, r30
  28:	43 96       	adiw	r24, 0x13	; 19
  2a:	0e 94 00 00 	call	0	; 0x0 <xQueueGiveFromISR>
  2e:	88 23       	and	r24, r24
  30:	01 f0       	breq	.+0      	; 0x32 <xQueueGiveFromISR+0x32>
  32:	20 97       	sbiw	r28, 0x00	; 0
  34:	01 f0       	breq	.+0      	; 0x36 <xQueueGiveFromISR+0x36>
  36:	81 e0       	ldi	r24, 0x01	; 1
  38:	88 83       	st	Y, r24
  3a:	00 c0       	rjmp	.+0      	; 0x3c <xQueueGiveFromISR+0x3c>
  3c:	82 a1       	ldd	r24, Z+34	; 0x22
  3e:	8f 5f       	subi	r24, 0xFF	; 255
  40:	82 a3       	std	Z+34, r24	; 0x22
  42:	81 e0       	ldi	r24, 0x01	; 1
  44:	df 91       	pop	r29
  46:	cf 91       	pop	r28
  48:	08 95       	ret

Disassembly of section .text.prvUnlockQueue:

00000000 <prvUnlockQueue>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	0f b6       	in	r0, 0x3f	; 63
   c:	f8 94       	cli
   e:	0f 92       	push	r0
  10:	8c 01       	movw	r16, r24
  12:	0d 5e       	subi	r16, 0xED	; 237
  14:	1f 4f       	sbci	r17, 0xFF	; 255
  16:	00 c0       	rjmp	.+0      	; 0x18 <prvUnlockQueue+0x18>
  18:	8b 89       	ldd	r24, Y+19	; 0x13
  1a:	88 23       	and	r24, r24
  1c:	01 f0       	breq	.+0      	; 0x1e <prvUnlockQueue+0x1e>
  1e:	c8 01       	movw	r24, r16
  20:	0e 94 00 00 	call	0	; 0x0 <prvUnlockQueue>
  24:	88 23       	and	r24, r24
  26:	01 f0       	breq	.+0      	; 0x28 <prvUnlockQueue+0x28>
  28:	0e 94 00 00 	call	0	; 0x0 <prvUnlockQueue>
  2c:	8a a1       	ldd	r24, Y+34	; 0x22
  2e:	81 50       	subi	r24, 0x01	; 1
  30:	8a a3       	std	Y+34, r24	; 0x22
  32:	8a a1       	ldd	r24, Y+34	; 0x22
  34:	18 16       	cp	r1, r24
  36:	04 f0       	brlt	.+0      	; 0x38 <prvUnlockQueue+0x38>
  38:	8f ef       	ldi	r24, 0xFF	; 255
  3a:	8a a3       	std	Y+34, r24	; 0x22
  3c:	0f 90       	pop	r0
  3e:	0f be       	out	0x3f, r0	; 63
  40:	0f b6       	in	r0, 0x3f	; 63
  42:	f8 94       	cli
  44:	0f 92       	push	r0
  46:	8e 01       	movw	r16, r28
  48:	08 5f       	subi	r16, 0xF8	; 248
  4a:	1f 4f       	sbci	r17, 0xFF	; 255
  4c:	00 c0       	rjmp	.+0      	; 0x4e <prvUnlockQueue+0x4e>
  4e:	88 85       	ldd	r24, Y+8	; 0x08
  50:	88 23       	and	r24, r24
  52:	01 f0       	breq	.+0      	; 0x54 <prvUnlockQueue+0x54>
  54:	c8 01       	movw	r24, r16
  56:	0e 94 00 00 	call	0	; 0x0 <prvUnlockQueue>
  5a:	88 23       	and	r24, r24
  5c:	01 f0       	breq	.+0      	; 0x5e <prvUnlockQueue+0x5e>
  5e:	0e 94 00 00 	call	0	; 0x0 <prvUnlockQueue>
  62:	89 a1       	ldd	r24, Y+33	; 0x21
  64:	81 50       	subi	r24, 0x01	; 1
  66:	89 a3       	std	Y+33, r24	; 0x21
  68:	89 a1       	ldd	r24, Y+33	; 0x21
  6a:	18 16       	cp	r1, r24
  6c:	04 f0       	brlt	.+0      	; 0x6e <prvUnlockQueue+0x6e>
  6e:	8f ef       	ldi	r24, 0xFF	; 255
  70:	89 a3       	std	Y+33, r24	; 0x21
  72:	0f 90       	pop	r0
  74:	0f be       	out	0x3f, r0	; 63
  76:	df 91       	pop	r29
  78:	cf 91       	pop	r28
  7a:	1f 91       	pop	r17
  7c:	0f 91       	pop	r16
  7e:	08 95       	ret

Disassembly of section .text.xQueueGenericReceive:

00000000 <xQueueGenericReceive>:
   0:	7f 92       	push	r7
   2:	8f 92       	push	r8
   4:	9f 92       	push	r9
   6:	af 92       	push	r10
   8:	bf 92       	push	r11
   a:	cf 92       	push	r12
   c:	df 92       	push	r13
   e:	ef 92       	push	r14
  10:	ff 92       	push	r15
  12:	0f 93       	push	r16
  14:	1f 93       	push	r17
  16:	df 93       	push	r29
  18:	cf 93       	push	r28
  1a:	cd b7       	in	r28, 0x3d	; 61
  1c:	de b7       	in	r29, 0x3e	; 62
  1e:	29 97       	sbiw	r28, 0x09	; 9
  20:	0f b6       	in	r0, 0x3f	; 63
  22:	f8 94       	cli
  24:	de bf       	out	0x3e, r29	; 62
  26:	0f be       	out	0x3f, r0	; 63
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	5b 01       	movw	r10, r22
  2c:	2e 83       	std	Y+6, r18	; 0x06
  2e:	3f 83       	std	Y+7, r19	; 0x07
  30:	48 87       	std	Y+8, r20	; 0x08
  32:	59 87       	std	Y+9, r21	; 0x09
  34:	70 2e       	mov	r7, r16
  36:	8c 01       	movw	r16, r24
  38:	93 e1       	ldi	r25, 0x13	; 19
  3a:	c9 2e       	mov	r12, r25
  3c:	d1 2c       	mov	r13, r1
  3e:	c0 0e       	add	r12, r16
  40:	d1 1e       	adc	r13, r17
  42:	20 e0       	ldi	r18, 0x00	; 0
  44:	7e 01       	movw	r14, r28
  46:	08 94       	sec
  48:	e1 1c       	adc	r14, r1
  4a:	f1 1c       	adc	r15, r1
  4c:	86 e0       	ldi	r24, 0x06	; 6
  4e:	88 2e       	mov	r8, r24
  50:	91 2c       	mov	r9, r1
  52:	8c 0e       	add	r8, r28
  54:	9d 1e       	adc	r9, r29
  56:	00 c0       	rjmp	.+0      	; 0x58 <xQueueGenericReceive+0x58>
  58:	21 e0       	ldi	r18, 0x01	; 1
  5a:	0f b6       	in	r0, 0x3f	; 63
  5c:	f8 94       	cli
  5e:	0f 92       	push	r0
  60:	f8 01       	movw	r30, r16
  62:	86 8d       	ldd	r24, Z+30	; 0x1e
  64:	88 23       	and	r24, r24
  66:	01 f0       	breq	.+0      	; 0x68 <xQueueGenericReceive+0x68>
  68:	e6 80       	ldd	r14, Z+6	; 0x06
  6a:	f7 80       	ldd	r15, Z+7	; 0x07
  6c:	c8 01       	movw	r24, r16
  6e:	b5 01       	movw	r22, r10
  70:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  74:	77 20       	and	r7, r7
  76:	01 f4       	brne	.+0      	; 0x78 <xQueueGenericReceive+0x78>
  78:	f8 01       	movw	r30, r16
  7a:	86 8d       	ldd	r24, Z+30	; 0x1e
  7c:	81 50       	subi	r24, 0x01	; 1
  7e:	86 8f       	std	Z+30, r24	; 0x1e
  80:	80 81       	ld	r24, Z
  82:	91 81       	ldd	r25, Z+1	; 0x01
  84:	89 2b       	or	r24, r25
  86:	01 f4       	brne	.+0      	; 0x88 <xQueueGenericReceive+0x88>
  88:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  8c:	f8 01       	movw	r30, r16
  8e:	93 83       	std	Z+3, r25	; 0x03
  90:	82 83       	std	Z+2, r24	; 0x02
  92:	f8 01       	movw	r30, r16
  94:	80 85       	ldd	r24, Z+8	; 0x08
  96:	88 23       	and	r24, r24
  98:	01 f0       	breq	.+0      	; 0x9a <xQueueGenericReceive+0x9a>
  9a:	c8 01       	movw	r24, r16
  9c:	08 96       	adiw	r24, 0x08	; 8
  9e:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  a2:	81 30       	cpi	r24, 0x01	; 1
  a4:	01 f4       	brne	.+0      	; 0xa6 <xQueueGenericReceive+0xa6>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <xQueueGenericReceive+0xa8>
  a8:	f8 01       	movw	r30, r16
  aa:	f7 82       	std	Z+7, r15	; 0x07
  ac:	e6 82       	std	Z+6, r14	; 0x06
  ae:	83 89       	ldd	r24, Z+19	; 0x13
  b0:	88 23       	and	r24, r24
  b2:	01 f0       	breq	.+0      	; 0xb4 <xQueueGenericReceive+0xb4>
  b4:	c6 01       	movw	r24, r12
  b6:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  ba:	88 23       	and	r24, r24
  bc:	01 f0       	breq	.+0      	; 0xbe <xQueueGenericReceive+0xbe>
  be:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  c2:	0f 90       	pop	r0
  c4:	0f be       	out	0x3f, r0	; 63
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	00 c0       	rjmp	.+0      	; 0xca <xQueueGenericReceive+0xca>
  ca:	8e 81       	ldd	r24, Y+6	; 0x06
  cc:	9f 81       	ldd	r25, Y+7	; 0x07
  ce:	a8 85       	ldd	r26, Y+8	; 0x08
  d0:	b9 85       	ldd	r27, Y+9	; 0x09
  d2:	00 97       	sbiw	r24, 0x00	; 0
  d4:	a1 05       	cpc	r26, r1
  d6:	b1 05       	cpc	r27, r1
  d8:	01 f4       	brne	.+0      	; 0xda <xQueueGenericReceive+0xda>
  da:	0f 90       	pop	r0
  dc:	0f be       	out	0x3f, r0	; 63
  de:	00 c0       	rjmp	.+0      	; 0xe0 <xQueueGenericReceive+0xe0>
  e0:	22 23       	and	r18, r18
  e2:	01 f4       	brne	.+0      	; 0xe4 <xQueueGenericReceive+0xe4>
  e4:	c7 01       	movw	r24, r14
  e6:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  ea:	0f 90       	pop	r0
  ec:	0f be       	out	0x3f, r0	; 63
  ee:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  f2:	0f b6       	in	r0, 0x3f	; 63
  f4:	f8 94       	cli
  f6:	0f 92       	push	r0
  f8:	f8 01       	movw	r30, r16
  fa:	81 a1       	ldd	r24, Z+33	; 0x21
  fc:	8f 3f       	cpi	r24, 0xFF	; 255
  fe:	01 f4       	brne	.+0      	; 0x100 <xQueueGenericReceive+0x100>
 100:	11 a2       	std	Z+33, r1	; 0x21
 102:	f8 01       	movw	r30, r16
 104:	82 a1       	ldd	r24, Z+34	; 0x22
 106:	8f 3f       	cpi	r24, 0xFF	; 255
 108:	01 f4       	brne	.+0      	; 0x10a <xQueueGenericReceive+0x10a>
 10a:	12 a2       	std	Z+34, r1	; 0x22
 10c:	0f 90       	pop	r0
 10e:	0f be       	out	0x3f, r0	; 63
 110:	c7 01       	movw	r24, r14
 112:	b4 01       	movw	r22, r8
 114:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 118:	88 23       	and	r24, r24
 11a:	01 f4       	brne	.+0      	; 0x11c <xQueueGenericReceive+0x11c>
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	f8 94       	cli
 120:	0f 92       	push	r0
 122:	f8 01       	movw	r30, r16
 124:	86 8d       	ldd	r24, Z+30	; 0x1e
 126:	0f 90       	pop	r0
 128:	0f be       	out	0x3f, r0	; 63
 12a:	88 23       	and	r24, r24
 12c:	01 f4       	brne	.+0      	; 0x12e <xQueueGenericReceive+0x12e>
 12e:	f8 01       	movw	r30, r16
 130:	80 81       	ld	r24, Z
 132:	91 81       	ldd	r25, Z+1	; 0x01
 134:	89 2b       	or	r24, r25
 136:	01 f4       	brne	.+0      	; 0x138 <xQueueGenericReceive+0x138>
 138:	0f b6       	in	r0, 0x3f	; 63
 13a:	f8 94       	cli
 13c:	0f 92       	push	r0
 13e:	f8 01       	movw	r30, r16
 140:	82 81       	ldd	r24, Z+2	; 0x02
 142:	93 81       	ldd	r25, Z+3	; 0x03
 144:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 148:	0f 90       	pop	r0
 14a:	0f be       	out	0x3f, r0	; 63
 14c:	4e 81       	ldd	r20, Y+6	; 0x06
 14e:	5f 81       	ldd	r21, Y+7	; 0x07
 150:	68 85       	ldd	r22, Y+8	; 0x08
 152:	79 85       	ldd	r23, Y+9	; 0x09
 154:	c6 01       	movw	r24, r12
 156:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 15a:	c8 01       	movw	r24, r16
 15c:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 160:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 164:	88 23       	and	r24, r24
 166:	01 f0       	breq	.+0      	; 0x168 <xQueueGenericReceive+0x168>
 168:	00 c0       	rjmp	.+0      	; 0x16a <xQueueGenericReceive+0x16a>
 16a:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <xQueueGenericReceive+0x170>
 170:	c8 01       	movw	r24, r16
 172:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 176:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <xQueueGenericReceive+0x17c>
 17c:	c8 01       	movw	r24, r16
 17e:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 182:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	29 96       	adiw	r28, 0x09	; 9
 18a:	0f b6       	in	r0, 0x3f	; 63
 18c:	f8 94       	cli
 18e:	de bf       	out	0x3e, r29	; 62
 190:	0f be       	out	0x3f, r0	; 63
 192:	cd bf       	out	0x3d, r28	; 61
 194:	cf 91       	pop	r28
 196:	df 91       	pop	r29
 198:	1f 91       	pop	r17
 19a:	0f 91       	pop	r16
 19c:	ff 90       	pop	r15
 19e:	ef 90       	pop	r14
 1a0:	df 90       	pop	r13
 1a2:	cf 90       	pop	r12
 1a4:	bf 90       	pop	r11
 1a6:	af 90       	pop	r10
 1a8:	9f 90       	pop	r9
 1aa:	8f 90       	pop	r8
 1ac:	7f 90       	pop	r7
 1ae:	08 95       	ret

Disassembly of section .text.prvCopyDataToQueue:

00000000 <prvCopyDataToQueue>:
   0:	1f 93       	push	r17
   2:	cf 93       	push	r28
   4:	df 93       	push	r29
   6:	ec 01       	movw	r28, r24
   8:	14 2f       	mov	r17, r20
   a:	48 a1       	ldd	r20, Y+32	; 0x20
   c:	44 23       	and	r20, r20
   e:	01 f4       	brne	.+0      	; 0x10 <prvCopyDataToQueue+0x10>
  10:	88 81       	ld	r24, Y
  12:	99 81       	ldd	r25, Y+1	; 0x01
  14:	89 2b       	or	r24, r25
  16:	01 f0       	breq	.+0      	; 0x18 <prvCopyDataToQueue+0x18>
  18:	00 c0       	rjmp	.+0      	; 0x1a <prvCopyDataToQueue+0x1a>
  1a:	8a 81       	ldd	r24, Y+2	; 0x02
  1c:	9b 81       	ldd	r25, Y+3	; 0x03
  1e:	0e 94 00 00 	call	0	; 0x0 <prvCopyDataToQueue>
  22:	98 2f       	mov	r25, r24
  24:	1b 82       	std	Y+3, r1	; 0x03
  26:	1a 82       	std	Y+2, r1	; 0x02
  28:	00 c0       	rjmp	.+0      	; 0x2a <prvCopyDataToQueue+0x2a>
  2a:	11 23       	and	r17, r17
  2c:	01 f4       	brne	.+0      	; 0x2e <prvCopyDataToQueue+0x2e>
  2e:	8c 81       	ldd	r24, Y+4	; 0x04
  30:	9d 81       	ldd	r25, Y+5	; 0x05
  32:	50 e0       	ldi	r21, 0x00	; 0
  34:	0e 94 00 00 	call	0	; 0x0 <prvCopyDataToQueue>
  38:	88 a1       	ldd	r24, Y+32	; 0x20
  3a:	2c 81       	ldd	r18, Y+4	; 0x04
  3c:	3d 81       	ldd	r19, Y+5	; 0x05
  3e:	28 0f       	add	r18, r24
  40:	31 1d       	adc	r19, r1
  42:	3d 83       	std	Y+5, r19	; 0x05
  44:	2c 83       	std	Y+4, r18	; 0x04
  46:	8a 81       	ldd	r24, Y+2	; 0x02
  48:	9b 81       	ldd	r25, Y+3	; 0x03
  4a:	28 17       	cp	r18, r24
  4c:	39 07       	cpc	r19, r25
  4e:	00 f0       	brcs	.+0      	; 0x50 <prvCopyDataToQueue+0x50>
  50:	88 81       	ld	r24, Y
  52:	99 81       	ldd	r25, Y+1	; 0x01
  54:	9d 83       	std	Y+5, r25	; 0x05
  56:	8c 83       	std	Y+4, r24	; 0x04
  58:	00 c0       	rjmp	.+0      	; 0x5a <prvCopyDataToQueue+0x5a>
  5a:	8e 81       	ldd	r24, Y+6	; 0x06
  5c:	9f 81       	ldd	r25, Y+7	; 0x07
  5e:	50 e0       	ldi	r21, 0x00	; 0
  60:	0e 94 00 00 	call	0	; 0x0 <prvCopyDataToQueue>
  64:	88 a1       	ldd	r24, Y+32	; 0x20
  66:	90 e0       	ldi	r25, 0x00	; 0
  68:	44 27       	eor	r20, r20
  6a:	55 27       	eor	r21, r21
  6c:	48 1b       	sub	r20, r24
  6e:	59 0b       	sbc	r21, r25
  70:	8e 81       	ldd	r24, Y+6	; 0x06
  72:	9f 81       	ldd	r25, Y+7	; 0x07
  74:	84 0f       	add	r24, r20
  76:	95 1f       	adc	r25, r21
  78:	9f 83       	std	Y+7, r25	; 0x07
  7a:	8e 83       	std	Y+6, r24	; 0x06
  7c:	28 81       	ld	r18, Y
  7e:	39 81       	ldd	r19, Y+1	; 0x01
  80:	82 17       	cp	r24, r18
  82:	93 07       	cpc	r25, r19
  84:	00 f4       	brcc	.+0      	; 0x86 <prvCopyDataToQueue+0x86>
  86:	8a 81       	ldd	r24, Y+2	; 0x02
  88:	9b 81       	ldd	r25, Y+3	; 0x03
  8a:	84 0f       	add	r24, r20
  8c:	95 1f       	adc	r25, r21
  8e:	9f 83       	std	Y+7, r25	; 0x07
  90:	8e 83       	std	Y+6, r24	; 0x06
  92:	12 30       	cpi	r17, 0x02	; 2
  94:	01 f4       	brne	.+0      	; 0x96 <prvCopyDataToQueue+0x96>
  96:	8e 8d       	ldd	r24, Y+30	; 0x1e
  98:	88 23       	and	r24, r24
  9a:	01 f0       	breq	.+0      	; 0x9c <prvCopyDataToQueue+0x9c>
  9c:	8e 8d       	ldd	r24, Y+30	; 0x1e
  9e:	81 50       	subi	r24, 0x01	; 1
  a0:	8e 8f       	std	Y+30, r24	; 0x1e
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	8e 8d       	ldd	r24, Y+30	; 0x1e
  a6:	8f 5f       	subi	r24, 0xFF	; 255
  a8:	8e 8f       	std	Y+30, r24	; 0x1e
  aa:	89 2f       	mov	r24, r25
  ac:	df 91       	pop	r29
  ae:	cf 91       	pop	r28
  b0:	1f 91       	pop	r17
  b2:	08 95       	ret

Disassembly of section .text.xQueueGenericSendFromISR:

00000000 <xQueueGenericSendFromISR>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8a 01       	movw	r16, r20
   a:	ec 01       	movw	r28, r24
   c:	9e 8d       	ldd	r25, Y+30	; 0x1e
   e:	8f 8d       	ldd	r24, Y+31	; 0x1f
  10:	98 17       	cp	r25, r24
  12:	00 f0       	brcs	.+0      	; 0x14 <xQueueGenericSendFromISR+0x14>
  14:	22 30       	cpi	r18, 0x02	; 2
  16:	01 f0       	breq	.+0      	; 0x18 <xQueueGenericSendFromISR+0x18>
  18:	80 e0       	ldi	r24, 0x00	; 0
  1a:	00 c0       	rjmp	.+0      	; 0x1c <xQueueGenericSendFromISR+0x1c>
  1c:	ce 01       	movw	r24, r28
  1e:	42 2f       	mov	r20, r18
  20:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSendFromISR>
  24:	8a a1       	ldd	r24, Y+34	; 0x22
  26:	8f 3f       	cpi	r24, 0xFF	; 255
  28:	01 f4       	brne	.+0      	; 0x2a <xQueueGenericSendFromISR+0x2a>
  2a:	8b 89       	ldd	r24, Y+19	; 0x13
  2c:	88 23       	and	r24, r24
  2e:	01 f0       	breq	.+0      	; 0x30 <xQueueGenericSendFromISR+0x30>
  30:	ce 01       	movw	r24, r28
  32:	43 96       	adiw	r24, 0x13	; 19
  34:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSendFromISR>
  38:	88 23       	and	r24, r24
  3a:	01 f0       	breq	.+0      	; 0x3c <xQueueGenericSendFromISR+0x3c>
  3c:	01 15       	cp	r16, r1
  3e:	11 05       	cpc	r17, r1
  40:	01 f0       	breq	.+0      	; 0x42 <xQueueGenericSendFromISR+0x42>
  42:	81 e0       	ldi	r24, 0x01	; 1
  44:	f8 01       	movw	r30, r16
  46:	80 83       	st	Z, r24
  48:	00 c0       	rjmp	.+0      	; 0x4a <xQueueGenericSendFromISR+0x4a>
  4a:	8a a1       	ldd	r24, Y+34	; 0x22
  4c:	8f 5f       	subi	r24, 0xFF	; 255
  4e:	8a a3       	std	Y+34, r24	; 0x22
  50:	81 e0       	ldi	r24, 0x01	; 1
  52:	df 91       	pop	r29
  54:	cf 91       	pop	r28
  56:	1f 91       	pop	r17
  58:	0f 91       	pop	r16
  5a:	08 95       	ret

Disassembly of section .text.xQueueGenericSend:

00000000 <xQueueGenericSend>:
   0:	6f 92       	push	r6
   2:	7f 92       	push	r7
   4:	9f 92       	push	r9
   6:	af 92       	push	r10
   8:	bf 92       	push	r11
   a:	cf 92       	push	r12
   c:	df 92       	push	r13
   e:	ef 92       	push	r14
  10:	ff 92       	push	r15
  12:	0f 93       	push	r16
  14:	1f 93       	push	r17
  16:	df 93       	push	r29
  18:	cf 93       	push	r28
  1a:	cd b7       	in	r28, 0x3d	; 61
  1c:	de b7       	in	r29, 0x3e	; 62
  1e:	29 97       	sbiw	r28, 0x09	; 9
  20:	0f b6       	in	r0, 0x3f	; 63
  22:	f8 94       	cli
  24:	de bf       	out	0x3e, r29	; 62
  26:	0f be       	out	0x3f, r0	; 63
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	6b 01       	movw	r12, r22
  2c:	2e 83       	std	Y+6, r18	; 0x06
  2e:	3f 83       	std	Y+7, r19	; 0x07
  30:	48 87       	std	Y+8, r20	; 0x08
  32:	59 87       	std	Y+9, r21	; 0x09
  34:	90 2e       	mov	r9, r16
  36:	8c 01       	movw	r16, r24
  38:	48 e0       	ldi	r20, 0x08	; 8
  3a:	e4 2e       	mov	r14, r20
  3c:	f1 2c       	mov	r15, r1
  3e:	e8 0e       	add	r14, r24
  40:	f9 1e       	adc	r15, r25
  42:	20 e0       	ldi	r18, 0x00	; 0
  44:	5e 01       	movw	r10, r28
  46:	08 94       	sec
  48:	a1 1c       	adc	r10, r1
  4a:	b1 1c       	adc	r11, r1
  4c:	36 e0       	ldi	r19, 0x06	; 6
  4e:	63 2e       	mov	r6, r19
  50:	71 2c       	mov	r7, r1
  52:	6c 0e       	add	r6, r28
  54:	7d 1e       	adc	r7, r29
  56:	00 c0       	rjmp	.+0      	; 0x58 <xQueueGenericSend+0x58>
  58:	21 e0       	ldi	r18, 0x01	; 1
  5a:	0f b6       	in	r0, 0x3f	; 63
  5c:	f8 94       	cli
  5e:	0f 92       	push	r0
  60:	f8 01       	movw	r30, r16
  62:	96 8d       	ldd	r25, Z+30	; 0x1e
  64:	87 8d       	ldd	r24, Z+31	; 0x1f
  66:	98 17       	cp	r25, r24
  68:	00 f0       	brcs	.+0      	; 0x6a <xQueueGenericSend+0x6a>
  6a:	f2 e0       	ldi	r31, 0x02	; 2
  6c:	9f 16       	cp	r9, r31
  6e:	01 f4       	brne	.+0      	; 0x70 <xQueueGenericSend+0x70>
  70:	c8 01       	movw	r24, r16
  72:	b6 01       	movw	r22, r12
  74:	49 2d       	mov	r20, r9
  76:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  7a:	98 2f       	mov	r25, r24
  7c:	f8 01       	movw	r30, r16
  7e:	83 89       	ldd	r24, Z+19	; 0x13
  80:	88 23       	and	r24, r24
  82:	01 f0       	breq	.+0      	; 0x84 <xQueueGenericSend+0x84>
  84:	c8 01       	movw	r24, r16
  86:	43 96       	adiw	r24, 0x13	; 19
  88:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  8c:	81 30       	cpi	r24, 0x01	; 1
  8e:	01 f4       	brne	.+0      	; 0x90 <xQueueGenericSend+0x90>
  90:	00 c0       	rjmp	.+0      	; 0x92 <xQueueGenericSend+0x92>
  92:	99 23       	and	r25, r25
  94:	01 f0       	breq	.+0      	; 0x96 <xQueueGenericSend+0x96>
  96:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  9a:	0f 90       	pop	r0
  9c:	0f be       	out	0x3f, r0	; 63
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <xQueueGenericSend+0xa2>
  a2:	8e 81       	ldd	r24, Y+6	; 0x06
  a4:	9f 81       	ldd	r25, Y+7	; 0x07
  a6:	a8 85       	ldd	r26, Y+8	; 0x08
  a8:	b9 85       	ldd	r27, Y+9	; 0x09
  aa:	00 97       	sbiw	r24, 0x00	; 0
  ac:	a1 05       	cpc	r26, r1
  ae:	b1 05       	cpc	r27, r1
  b0:	01 f4       	brne	.+0      	; 0xb2 <xQueueGenericSend+0xb2>
  b2:	0f 90       	pop	r0
  b4:	0f be       	out	0x3f, r0	; 63
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <xQueueGenericSend+0xb8>
  b8:	22 23       	and	r18, r18
  ba:	01 f4       	brne	.+0      	; 0xbc <xQueueGenericSend+0xbc>
  bc:	c5 01       	movw	r24, r10
  be:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  c2:	0f 90       	pop	r0
  c4:	0f be       	out	0x3f, r0	; 63
  c6:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	f8 94       	cli
  ce:	0f 92       	push	r0
  d0:	f8 01       	movw	r30, r16
  d2:	81 a1       	ldd	r24, Z+33	; 0x21
  d4:	8f 3f       	cpi	r24, 0xFF	; 255
  d6:	01 f4       	brne	.+0      	; 0xd8 <xQueueGenericSend+0xd8>
  d8:	11 a2       	std	Z+33, r1	; 0x21
  da:	f8 01       	movw	r30, r16
  dc:	82 a1       	ldd	r24, Z+34	; 0x22
  de:	8f 3f       	cpi	r24, 0xFF	; 255
  e0:	01 f4       	brne	.+0      	; 0xe2 <xQueueGenericSend+0xe2>
  e2:	12 a2       	std	Z+34, r1	; 0x22
  e4:	0f 90       	pop	r0
  e6:	0f be       	out	0x3f, r0	; 63
  e8:	c5 01       	movw	r24, r10
  ea:	b3 01       	movw	r22, r6
  ec:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  f0:	88 23       	and	r24, r24
  f2:	01 f4       	brne	.+0      	; 0xf4 <xQueueGenericSend+0xf4>
  f4:	0f b6       	in	r0, 0x3f	; 63
  f6:	f8 94       	cli
  f8:	0f 92       	push	r0
  fa:	f8 01       	movw	r30, r16
  fc:	96 8d       	ldd	r25, Z+30	; 0x1e
  fe:	0f 90       	pop	r0
 100:	0f be       	out	0x3f, r0	; 63
 102:	f8 01       	movw	r30, r16
 104:	87 8d       	ldd	r24, Z+31	; 0x1f
 106:	98 17       	cp	r25, r24
 108:	01 f4       	brne	.+0      	; 0x10a <xQueueGenericSend+0x10a>
 10a:	4e 81       	ldd	r20, Y+6	; 0x06
 10c:	5f 81       	ldd	r21, Y+7	; 0x07
 10e:	68 85       	ldd	r22, Y+8	; 0x08
 110:	79 85       	ldd	r23, Y+9	; 0x09
 112:	c7 01       	movw	r24, r14
 114:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 118:	c8 01       	movw	r24, r16
 11a:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 11e:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 122:	88 23       	and	r24, r24
 124:	01 f0       	breq	.+0      	; 0x126 <xQueueGenericSend+0x126>
 126:	00 c0       	rjmp	.+0      	; 0x128 <xQueueGenericSend+0x128>
 128:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <xQueueGenericSend+0x12e>
 12e:	c8 01       	movw	r24, r16
 130:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 134:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 138:	00 c0       	rjmp	.+0      	; 0x13a <xQueueGenericSend+0x13a>
 13a:	c8 01       	movw	r24, r16
 13c:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 140:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	29 96       	adiw	r28, 0x09	; 9
 148:	0f b6       	in	r0, 0x3f	; 63
 14a:	f8 94       	cli
 14c:	de bf       	out	0x3e, r29	; 62
 14e:	0f be       	out	0x3f, r0	; 63
 150:	cd bf       	out	0x3d, r28	; 61
 152:	cf 91       	pop	r28
 154:	df 91       	pop	r29
 156:	1f 91       	pop	r17
 158:	0f 91       	pop	r16
 15a:	ff 90       	pop	r15
 15c:	ef 90       	pop	r14
 15e:	df 90       	pop	r13
 160:	cf 90       	pop	r12
 162:	bf 90       	pop	r11
 164:	af 90       	pop	r10
 166:	9f 90       	pop	r9
 168:	7f 90       	pop	r7
 16a:	6f 90       	pop	r6
 16c:	08 95       	ret

Disassembly of section .text.xQueueCreateMutex:

00000000 <xQueueCreateMutex>:
   0:	0f 93       	push	r16
   2:	cf 93       	push	r28
   4:	df 93       	push	r29
   6:	83 e2       	ldi	r24, 0x23	; 35
   8:	90 e0       	ldi	r25, 0x00	; 0
   a:	0e 94 00 00 	call	0	; 0x0 <xQueueCreateMutex>
   e:	ec 01       	movw	r28, r24
  10:	00 97       	sbiw	r24, 0x00	; 0
  12:	01 f0       	breq	.+0      	; 0x14 <xQueueCreateMutex+0x14>
  14:	1b 82       	std	Y+3, r1	; 0x03
  16:	1a 82       	std	Y+2, r1	; 0x02
  18:	19 82       	std	Y+1, r1	; 0x01
  1a:	18 82       	st	Y, r1
  1c:	1d 82       	std	Y+5, r1	; 0x05
  1e:	1c 82       	std	Y+4, r1	; 0x04
  20:	1f 82       	std	Y+7, r1	; 0x07
  22:	1e 82       	std	Y+6, r1	; 0x06
  24:	1e 8e       	std	Y+30, r1	; 0x1e
  26:	81 e0       	ldi	r24, 0x01	; 1
  28:	8f 8f       	std	Y+31, r24	; 0x1f
  2a:	18 a2       	std	Y+32, r1	; 0x20
  2c:	8f ef       	ldi	r24, 0xFF	; 255
  2e:	89 a3       	std	Y+33, r24	; 0x21
  30:	8a a3       	std	Y+34, r24	; 0x22
  32:	ce 01       	movw	r24, r28
  34:	08 96       	adiw	r24, 0x08	; 8
  36:	0e 94 00 00 	call	0	; 0x0 <xQueueCreateMutex>
  3a:	ce 01       	movw	r24, r28
  3c:	43 96       	adiw	r24, 0x13	; 19
  3e:	0e 94 00 00 	call	0	; 0x0 <xQueueCreateMutex>
  42:	ce 01       	movw	r24, r28
  44:	60 e0       	ldi	r22, 0x00	; 0
  46:	70 e0       	ldi	r23, 0x00	; 0
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	30 e0       	ldi	r19, 0x00	; 0
  4c:	40 e0       	ldi	r20, 0x00	; 0
  4e:	50 e0       	ldi	r21, 0x00	; 0
  50:	00 e0       	ldi	r16, 0x00	; 0
  52:	0e 94 00 00 	call	0	; 0x0 <xQueueCreateMutex>
  56:	ce 01       	movw	r24, r28
  58:	df 91       	pop	r29
  5a:	cf 91       	pop	r28
  5c:	0f 91       	pop	r16
  5e:	08 95       	ret

Disassembly of section .text.xQueueGenericReset:

00000000 <xQueueGenericReset>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	0f b6       	in	r0, 0x3f	; 63
   8:	f8 94       	cli
   a:	0f 92       	push	r0
   c:	e8 a1       	ldd	r30, Y+32	; 0x20
   e:	2f 8d       	ldd	r18, Y+31	; 0x1f
  10:	e2 9f       	mul	r30, r18
  12:	c0 01       	movw	r24, r0
  14:	11 24       	eor	r1, r1
  16:	48 81       	ld	r20, Y
  18:	59 81       	ldd	r21, Y+1	; 0x01
  1a:	84 0f       	add	r24, r20
  1c:	95 1f       	adc	r25, r21
  1e:	9b 83       	std	Y+3, r25	; 0x03
  20:	8a 83       	std	Y+2, r24	; 0x02
  22:	1e 8e       	std	Y+30, r1	; 0x1e
  24:	5d 83       	std	Y+5, r21	; 0x05
  26:	4c 83       	std	Y+4, r20	; 0x04
  28:	30 e0       	ldi	r19, 0x00	; 0
  2a:	21 50       	subi	r18, 0x01	; 1
  2c:	30 40       	sbci	r19, 0x00	; 0
  2e:	f0 e0       	ldi	r31, 0x00	; 0
  30:	2e 9f       	mul	r18, r30
  32:	c0 01       	movw	r24, r0
  34:	2f 9f       	mul	r18, r31
  36:	90 0d       	add	r25, r0
  38:	3e 9f       	mul	r19, r30
  3a:	90 0d       	add	r25, r0
  3c:	11 24       	eor	r1, r1
  3e:	48 0f       	add	r20, r24
  40:	59 1f       	adc	r21, r25
  42:	5f 83       	std	Y+7, r21	; 0x07
  44:	4e 83       	std	Y+6, r20	; 0x06
  46:	8f ef       	ldi	r24, 0xFF	; 255
  48:	89 a3       	std	Y+33, r24	; 0x21
  4a:	8a a3       	std	Y+34, r24	; 0x22
  4c:	66 23       	and	r22, r22
  4e:	01 f4       	brne	.+0      	; 0x50 <xQueueGenericReset+0x50>
  50:	88 85       	ldd	r24, Y+8	; 0x08
  52:	88 23       	and	r24, r24
  54:	01 f0       	breq	.+0      	; 0x56 <xQueueGenericReset+0x56>
  56:	ce 01       	movw	r24, r28
  58:	08 96       	adiw	r24, 0x08	; 8
  5a:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReset>
  5e:	81 30       	cpi	r24, 0x01	; 1
  60:	01 f4       	brne	.+0      	; 0x62 <xQueueGenericReset+0x62>
  62:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReset>
  66:	00 c0       	rjmp	.+0      	; 0x68 <xQueueGenericReset+0x68>
  68:	ce 01       	movw	r24, r28
  6a:	08 96       	adiw	r24, 0x08	; 8
  6c:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReset>
  70:	ce 01       	movw	r24, r28
  72:	43 96       	adiw	r24, 0x13	; 19
  74:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReset>
  78:	0f 90       	pop	r0
  7a:	0f be       	out	0x3f, r0	; 63
  7c:	81 e0       	ldi	r24, 0x01	; 1
  7e:	df 91       	pop	r29
  80:	cf 91       	pop	r28
  82:	08 95       	ret

Disassembly of section .text.xQueueGenericCreate:

00000000 <xQueueGenericCreate>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	08 2f       	mov	r16, r24
   a:	16 2f       	mov	r17, r22
   c:	66 23       	and	r22, r22
   e:	01 f4       	brne	.+0      	; 0x10 <xQueueGenericCreate+0x10>
  10:	80 e0       	ldi	r24, 0x00	; 0
  12:	90 e0       	ldi	r25, 0x00	; 0
  14:	00 c0       	rjmp	.+0      	; 0x16 <xQueueGenericCreate+0x16>
  16:	68 9f       	mul	r22, r24
  18:	c0 01       	movw	r24, r0
  1a:	11 24       	eor	r1, r1
  1c:	01 96       	adiw	r24, 0x01	; 1
  1e:	83 96       	adiw	r24, 0x23	; 35
  20:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericCreate>
  24:	ec 01       	movw	r28, r24
  26:	00 97       	sbiw	r24, 0x00	; 0
  28:	01 f4       	brne	.+0      	; 0x2a <xQueueGenericCreate+0x2a>
  2a:	20 e0       	ldi	r18, 0x00	; 0
  2c:	30 e0       	ldi	r19, 0x00	; 0
  2e:	00 c0       	rjmp	.+0      	; 0x30 <xQueueGenericCreate+0x30>
  30:	11 23       	and	r17, r17
  32:	01 f4       	brne	.+0      	; 0x34 <xQueueGenericCreate+0x34>
  34:	99 83       	std	Y+1, r25	; 0x01
  36:	88 83       	st	Y, r24
  38:	00 c0       	rjmp	.+0      	; 0x3a <xQueueGenericCreate+0x3a>
  3a:	83 96       	adiw	r24, 0x23	; 35
  3c:	99 83       	std	Y+1, r25	; 0x01
  3e:	88 83       	st	Y, r24
  40:	0f 8f       	std	Y+31, r16	; 0x1f
  42:	18 a3       	std	Y+32, r17	; 0x20
  44:	ce 01       	movw	r24, r28
  46:	61 e0       	ldi	r22, 0x01	; 1
  48:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericCreate>
  4c:	9e 01       	movw	r18, r28
  4e:	c9 01       	movw	r24, r18
  50:	df 91       	pop	r29
  52:	cf 91       	pop	r28
  54:	1f 91       	pop	r17
  56:	0f 91       	pop	r16
  58:	08 95       	ret

Disassembly of section .text.xQueueCreateCountingSemaphore:

00000000 <xQueueCreateCountingSemaphore>:
   0:	1f 93       	push	r17
   2:	16 2f       	mov	r17, r22
   4:	60 e0       	ldi	r22, 0x00	; 0
   6:	42 e0       	ldi	r20, 0x02	; 2
   8:	0e 94 00 00 	call	0	; 0x0 <xQueueCreateCountingSemaphore>
   c:	fc 01       	movw	r30, r24
   e:	00 97       	sbiw	r24, 0x00	; 0
  10:	01 f0       	breq	.+0      	; 0x12 <xQueueCreateCountingSemaphore+0x12>
  12:	16 8f       	std	Z+30, r17	; 0x1e
  14:	cf 01       	movw	r24, r30
  16:	1f 91       	pop	r17
  18:	08 95       	ret

tasks.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000005  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000039  2**0
                  ALLOC
  3 .text.uxTaskPriorityGet 0000001e  00000000  00000000  00000039  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.uxTaskPriorityGetFromISR 00000014  00000000  00000000  00000057  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.vTaskSuspendAll 0000000c  00000000  00000000  0000006b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.xTaskGetTickCount 00000020  00000000  00000000  00000077  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.xTaskGetTickCountFromISR 00000016  00000000  00000000  00000097  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.uxTaskGetNumberOfTasks 00000006  00000000  00000000  000000ad  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.vTaskSwitchContext 00000094  00000000  00000000  000000b3  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.vTaskSetTimeOutState 00000022  00000000  00000000  00000147  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.xTaskCheckForTimeOut 000000d8  00000000  00000000  00000169  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text.vTaskMissedYield 00000008  00000000  00000000  00000241  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text.xTaskGetCurrentTaskHandle 0000000c  00000000  00000000  00000249  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text.uxTaskResetEventItemValue 00000040  00000000  00000000  00000255  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text.pvTaskIncrementMutexHeldCount 00000026  00000000  00000000  00000295  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text.xTaskNotifyStateClear 00000028  00000000  00000000  000002bb  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .text.vTaskNotifyGiveFromISR 0000009a  00000000  00000000  000002e3  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 18 .text.xTaskGenericNotifyFromISR 000000f0  00000000  00000000  0000037d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 19 .text.xTaskPriorityDisinherit 00000076  00000000  00000000  0000046d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 20 .text.vTaskPriorityInherit 000000b6  00000000  00000000  000004e3  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 21 .text.xTaskRemoveFromUnorderedEventList 0000006c  00000000  00000000  00000599  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 22 .text.xTaskRemoveFromEventList 00000080  00000000  00000000  00000605  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 23 .text.xTaskIncrementTick 000001f2  00000000  00000000  00000685  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 24 .text.xTaskResumeFromISR 0000009c  00000000  00000000  00000877  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 25 .text.xTaskGenericNotify 000000d4  00000000  00000000  00000913  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 26 .text.xTaskResumeAll 000000e4  00000000  00000000  000009e7  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 27 .text.vTaskResume 00000092  00000000  00000000  00000acb  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 28 .text.vTaskSuspend 000000e0  00000000  00000000  00000b5d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 29 .text.vTaskPrioritySet 0000011a  00000000  00000000  00000c3d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 30 .text.vTaskDelete 000000d0  00000000  00000000  00000d57  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 31 .text.prvAddCurrentTaskToDelayedList 0000009c  00000000  00000000  00000e27  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 32 .text.xTaskNotifyWait 00000166  00000000  00000000  00000ec3  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 33 .text.ulTaskNotifyTake 00000110  00000000  00000000  00001029  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 34 .text.vTaskPlaceOnUnorderedEventList 0000008a  00000000  00000000  00001139  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 35 .text.vTaskDelay 00000074  00000000  00000000  000011c3  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 36 .text.vTaskDelayUntil 000000a0  00000000  00000000  00001237  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 37 .text.vTaskPlaceOnEventList 00000078  00000000  00000000  000012d7  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 38 .text.vTaskEndScheduler 0000000c  00000000  00000000  0000134f  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 39 .text.prvIdleTask 00000074  00000000  00000000  0000135b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 40 .text.xTaskGenericCreate 0000021a  00000000  00000000  000013cf  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 41 .text.vTaskStartScheduler 00000078  00000000  00000000  000015e9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 42 .bss.pxCurrentTCB 00000002  00000000  00000000  00001661  2**0
                  ALLOC
 43 .bss.uxSchedulerSuspended 00000001  00000000  00000000  00001661  2**0
                  ALLOC
 44 .bss.uxTopReadyPriority 00000001  00000000  00000000  00001661  2**0
                  ALLOC
 45 .bss.xTickCount 00000004  00000000  00000000  00001661  2**0
                  ALLOC
 46 .bss.xNextTaskUnblockTime 00000004  00000000  00000000  00001661  2**0
                  ALLOC
 47 .bss.xYieldPending 00000001  00000000  00000000  00001661  2**0
                  ALLOC
 48 .bss.xNumOfOverflows 00000001  00000000  00000000  00001661  2**0
                  ALLOC
 49 .bss.uxPendedTicks 00000001  00000000  00000000  00001661  2**0
                  ALLOC
 50 .bss.uxCurrentNumberOfTasks 00000001  00000000  00000000  00001661  2**0
                  ALLOC
 51 .bss.xSchedulerRunning 00000001  00000000  00000000  00001661  2**0
                  ALLOC
 52 .bss.uxTasksDeleted 00000001  00000000  00000000  00001661  2**0
                  ALLOC
 53 .bss.uxTaskNumber 00000001  00000000  00000000  00001661  2**0
                  ALLOC
 54 .bss.pxReadyTasksLists 0000006e  00000000  00000000  00001661  2**0
                  ALLOC
 55 .bss.xDelayedTaskList1 0000000b  00000000  00000000  00001661  2**0
                  ALLOC
 56 .bss.xDelayedTaskList2 0000000b  00000000  00000000  00001661  2**0
                  ALLOC
 57 .bss.pxDelayedTaskList 00000002  00000000  00000000  00001661  2**0
                  ALLOC
 58 .bss.pxOverflowDelayedTaskList 00000002  00000000  00000000  00001661  2**0
                  ALLOC
 59 .bss.xPendingReadyList 0000000b  00000000  00000000  00001661  2**0
                  ALLOC
 60 .bss.xTasksWaitingTermination 0000000b  00000000  00000000  00001661  2**0
                  ALLOC
 61 .bss.xSuspendedTaskList 0000000b  00000000  00000000  00001661  2**0
                  ALLOC

Disassembly of section .text.uxTaskPriorityGet:

00000000 <uxTaskPriorityGet>:
   0:	0f b6       	in	r0, 0x3f	; 63
   2:	f8 94       	cli
   4:	0f 92       	push	r0
   6:	00 97       	sbiw	r24, 0x00	; 0
   8:	01 f4       	brne	.+0      	; 0xa <uxTaskPriorityGet+0xa>
   a:	e0 91 00 00 	lds	r30, 0x0000
   e:	f0 91 00 00 	lds	r31, 0x0000
  12:	00 c0       	rjmp	.+0      	; 0x14 <uxTaskPriorityGet+0x14>
  14:	fc 01       	movw	r30, r24
  16:	0f 90       	pop	r0
  18:	0f be       	out	0x3f, r0	; 63
  1a:	82 8d       	ldd	r24, Z+26	; 0x1a
  1c:	08 95       	ret

Disassembly of section .text.uxTaskPriorityGetFromISR:

00000000 <uxTaskPriorityGetFromISR>:
   0:	00 97       	sbiw	r24, 0x00	; 0
   2:	01 f4       	brne	.+0      	; 0x4 <uxTaskPriorityGetFromISR+0x4>
   4:	e0 91 00 00 	lds	r30, 0x0000
   8:	f0 91 00 00 	lds	r31, 0x0000
   c:	00 c0       	rjmp	.+0      	; 0xe <uxTaskPriorityGetFromISR+0xe>
   e:	fc 01       	movw	r30, r24
  10:	82 8d       	ldd	r24, Z+26	; 0x1a
  12:	08 95       	ret

Disassembly of section .text.vTaskSuspendAll:

00000000 <vTaskSuspendAll>:
   0:	80 91 00 00 	lds	r24, 0x0000
   4:	8f 5f       	subi	r24, 0xFF	; 255
   6:	80 93 00 00 	sts	0x0000, r24
   a:	08 95       	ret

Disassembly of section .text.xTaskGetTickCount:

00000000 <xTaskGetTickCount>:
   0:	0f b6       	in	r0, 0x3f	; 63
   2:	f8 94       	cli
   4:	0f 92       	push	r0
   6:	20 91 00 00 	lds	r18, 0x0000
   a:	30 91 00 00 	lds	r19, 0x0000
   e:	40 91 00 00 	lds	r20, 0x0000
  12:	50 91 00 00 	lds	r21, 0x0000
  16:	0f 90       	pop	r0
  18:	0f be       	out	0x3f, r0	; 63
  1a:	b9 01       	movw	r22, r18
  1c:	ca 01       	movw	r24, r20
  1e:	08 95       	ret

Disassembly of section .text.xTaskGetTickCountFromISR:

00000000 <xTaskGetTickCountFromISR>:
   0:	20 91 00 00 	lds	r18, 0x0000
   4:	30 91 00 00 	lds	r19, 0x0000
   8:	40 91 00 00 	lds	r20, 0x0000
   c:	50 91 00 00 	lds	r21, 0x0000
  10:	b9 01       	movw	r22, r18
  12:	ca 01       	movw	r24, r20
  14:	08 95       	ret

Disassembly of section .text.uxTaskGetNumberOfTasks:

00000000 <uxTaskGetNumberOfTasks>:
   0:	80 91 00 00 	lds	r24, 0x0000
   4:	08 95       	ret

Disassembly of section .text.vTaskSwitchContext:

00000000 <vTaskSwitchContext>:
   0:	80 91 00 00 	lds	r24, 0x0000
   4:	88 23       	and	r24, r24
   6:	01 f0       	breq	.+0      	; 0x8 <vTaskSwitchContext+0x8>
   8:	81 e0       	ldi	r24, 0x01	; 1
   a:	80 93 00 00 	sts	0x0000, r24
   e:	08 95       	ret
  10:	10 92 00 00 	sts	0x0000, r1
  14:	2b e0       	ldi	r18, 0x0B	; 11
  16:	30 e0       	ldi	r19, 0x00	; 0
  18:	00 c0       	rjmp	.+0      	; 0x1a <vTaskSwitchContext+0x1a>
  1a:	80 91 00 00 	lds	r24, 0x0000
  1e:	81 50       	subi	r24, 0x01	; 1
  20:	80 93 00 00 	sts	0x0000, r24
  24:	80 91 00 00 	lds	r24, 0x0000
  28:	90 e0       	ldi	r25, 0x00	; 0
  2a:	82 9f       	mul	r24, r18
  2c:	f0 01       	movw	r30, r0
  2e:	83 9f       	mul	r24, r19
  30:	f0 0d       	add	r31, r0
  32:	92 9f       	mul	r25, r18
  34:	f0 0d       	add	r31, r0
  36:	11 24       	eor	r1, r1
  38:	e0 50       	subi	r30, 0x00	; 0
  3a:	f0 40       	sbci	r31, 0x00	; 0
  3c:	80 81       	ld	r24, Z
  3e:	88 23       	and	r24, r24
  40:	01 f0       	breq	.+0      	; 0x42 <vTaskSwitchContext+0x42>
  42:	90 91 00 00 	lds	r25, 0x0000
  46:	8b e0       	ldi	r24, 0x0B	; 11
  48:	98 9f       	mul	r25, r24
  4a:	d0 01       	movw	r26, r0
  4c:	11 24       	eor	r1, r1
  4e:	a0 50       	subi	r26, 0x00	; 0
  50:	b0 40       	sbci	r27, 0x00	; 0
  52:	11 96       	adiw	r26, 0x01	; 1
  54:	ed 91       	ld	r30, X+
  56:	fc 91       	ld	r31, X
  58:	12 97       	sbiw	r26, 0x02	; 2
  5a:	04 80       	ldd	r0, Z+4	; 0x04
  5c:	f5 81       	ldd	r31, Z+5	; 0x05
  5e:	e0 2d       	mov	r30, r0
  60:	12 96       	adiw	r26, 0x02	; 2
  62:	fc 93       	st	X, r31
  64:	ee 93       	st	-X, r30
  66:	11 97       	sbiw	r26, 0x01	; 1
  68:	cd 01       	movw	r24, r26
  6a:	03 96       	adiw	r24, 0x03	; 3
  6c:	e8 17       	cp	r30, r24
  6e:	f9 07       	cpc	r31, r25
  70:	01 f4       	brne	.+0      	; 0x72 <vTaskSwitchContext+0x72>
  72:	84 81       	ldd	r24, Z+4	; 0x04
  74:	95 81       	ldd	r25, Z+5	; 0x05
  76:	12 96       	adiw	r26, 0x02	; 2
  78:	9c 93       	st	X, r25
  7a:	8e 93       	st	-X, r24
  7c:	11 97       	sbiw	r26, 0x01	; 1
  7e:	11 96       	adiw	r26, 0x01	; 1
  80:	ed 91       	ld	r30, X+
  82:	fc 91       	ld	r31, X
  84:	12 97       	sbiw	r26, 0x02	; 2
  86:	80 85       	ldd	r24, Z+8	; 0x08
  88:	91 85       	ldd	r25, Z+9	; 0x09
  8a:	90 93 00 00 	sts	0x0000, r25
  8e:	80 93 00 00 	sts	0x0000, r24
  92:	08 95       	ret

Disassembly of section .text.vTaskSetTimeOutState:

00000000 <vTaskSetTimeOutState>:
   0:	fc 01       	movw	r30, r24
   2:	80 91 00 00 	lds	r24, 0x0000
   6:	80 83       	st	Z, r24
   8:	80 91 00 00 	lds	r24, 0x0000
   c:	90 91 00 00 	lds	r25, 0x0000
  10:	a0 91 00 00 	lds	r26, 0x0000
  14:	b0 91 00 00 	lds	r27, 0x0000
  18:	81 83       	std	Z+1, r24	; 0x01
  1a:	92 83       	std	Z+2, r25	; 0x02
  1c:	a3 83       	std	Z+3, r26	; 0x03
  1e:	b4 83       	std	Z+4, r27	; 0x04
  20:	08 95       	ret

Disassembly of section .text.xTaskCheckForTimeOut:

00000000 <xTaskCheckForTimeOut>:
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
  10:	cf 93       	push	r28
  12:	df 93       	push	r29
  14:	fc 01       	movw	r30, r24
  16:	eb 01       	movw	r28, r22
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	0f 92       	push	r0
  1e:	e0 90 00 00 	lds	r14, 0x0000
  22:	f0 90 00 00 	lds	r15, 0x0000
  26:	00 91 00 00 	lds	r16, 0x0000
  2a:	10 91 00 00 	lds	r17, 0x0000
  2e:	a8 80       	ld	r10, Y
  30:	b9 80       	ldd	r11, Y+1	; 0x01
  32:	ca 80       	ldd	r12, Y+2	; 0x02
  34:	db 80       	ldd	r13, Y+3	; 0x03
  36:	8f ef       	ldi	r24, 0xFF	; 255
  38:	a8 16       	cp	r10, r24
  3a:	8f ef       	ldi	r24, 0xFF	; 255
  3c:	b8 06       	cpc	r11, r24
  3e:	8f ef       	ldi	r24, 0xFF	; 255
  40:	c8 06       	cpc	r12, r24
  42:	8f ef       	ldi	r24, 0xFF	; 255
  44:	d8 06       	cpc	r13, r24
  46:	01 f0       	breq	.+0      	; 0x48 <xTaskCheckForTimeOut+0x48>
  48:	90 91 00 00 	lds	r25, 0x0000
  4c:	80 81       	ld	r24, Z
  4e:	98 17       	cp	r25, r24
  50:	01 f0       	breq	.+0      	; 0x52 <xTaskCheckForTimeOut+0x52>
  52:	81 81       	ldd	r24, Z+1	; 0x01
  54:	92 81       	ldd	r25, Z+2	; 0x02
  56:	a3 81       	ldd	r26, Z+3	; 0x03
  58:	b4 81       	ldd	r27, Z+4	; 0x04
  5a:	e8 16       	cp	r14, r24
  5c:	f9 06       	cpc	r15, r25
  5e:	0a 07       	cpc	r16, r26
  60:	1b 07       	cpc	r17, r27
  62:	00 f4       	brcc	.+0      	; 0x64 <xTaskCheckForTimeOut+0x64>
  64:	21 81       	ldd	r18, Z+1	; 0x01
  66:	32 81       	ldd	r19, Z+2	; 0x02
  68:	43 81       	ldd	r20, Z+3	; 0x03
  6a:	54 81       	ldd	r21, Z+4	; 0x04
  6c:	d8 01       	movw	r26, r16
  6e:	c7 01       	movw	r24, r14
  70:	82 1b       	sub	r24, r18
  72:	93 0b       	sbc	r25, r19
  74:	a4 0b       	sbc	r26, r20
  76:	b5 0b       	sbc	r27, r21
  78:	8a 15       	cp	r24, r10
  7a:	9b 05       	cpc	r25, r11
  7c:	ac 05       	cpc	r26, r12
  7e:	bd 05       	cpc	r27, r13
  80:	00 f4       	brcc	.+0      	; 0x82 <xTaskCheckForTimeOut+0x82>
  82:	2e 19       	sub	r18, r14
  84:	3f 09       	sbc	r19, r15
  86:	40 0b       	sbc	r20, r16
  88:	51 0b       	sbc	r21, r17
  8a:	2a 0d       	add	r18, r10
  8c:	3b 1d       	adc	r19, r11
  8e:	4c 1d       	adc	r20, r12
  90:	5d 1d       	adc	r21, r13
  92:	28 83       	st	Y, r18
  94:	39 83       	std	Y+1, r19	; 0x01
  96:	4a 83       	std	Y+2, r20	; 0x02
  98:	5b 83       	std	Y+3, r21	; 0x03
  9a:	80 91 00 00 	lds	r24, 0x0000
  9e:	80 83       	st	Z, r24
  a0:	80 91 00 00 	lds	r24, 0x0000
  a4:	90 91 00 00 	lds	r25, 0x0000
  a8:	a0 91 00 00 	lds	r26, 0x0000
  ac:	b0 91 00 00 	lds	r27, 0x0000
  b0:	81 83       	std	Z+1, r24	; 0x01
  b2:	92 83       	std	Z+2, r25	; 0x02
  b4:	a3 83       	std	Z+3, r26	; 0x03
  b6:	b4 83       	std	Z+4, r27	; 0x04
  b8:	80 e0       	ldi	r24, 0x00	; 0
  ba:	00 c0       	rjmp	.+0      	; 0xbc <xTaskCheckForTimeOut+0xbc>
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	0f 90       	pop	r0
  c0:	0f be       	out	0x3f, r0	; 63
  c2:	df 91       	pop	r29
  c4:	cf 91       	pop	r28
  c6:	1f 91       	pop	r17
  c8:	0f 91       	pop	r16
  ca:	ff 90       	pop	r15
  cc:	ef 90       	pop	r14
  ce:	df 90       	pop	r13
  d0:	cf 90       	pop	r12
  d2:	bf 90       	pop	r11
  d4:	af 90       	pop	r10
  d6:	08 95       	ret

Disassembly of section .text.vTaskMissedYield:

00000000 <vTaskMissedYield>:
   0:	81 e0       	ldi	r24, 0x01	; 1
   2:	80 93 00 00 	sts	0x0000, r24
   6:	08 95       	ret

Disassembly of section .text.xTaskGetCurrentTaskHandle:

00000000 <xTaskGetCurrentTaskHandle>:
   0:	20 91 00 00 	lds	r18, 0x0000
   4:	30 91 00 00 	lds	r19, 0x0000
   8:	c9 01       	movw	r24, r18
   a:	08 95       	ret

Disassembly of section .text.uxTaskResetEventItemValue:

00000000 <uxTaskResetEventItemValue>:
   0:	e0 91 00 00 	lds	r30, 0x0000
   4:	f0 91 00 00 	lds	r31, 0x0000
   8:	66 85       	ldd	r22, Z+14	; 0x0e
   a:	77 85       	ldd	r23, Z+15	; 0x0f
   c:	80 89       	ldd	r24, Z+16	; 0x10
   e:	91 89       	ldd	r25, Z+17	; 0x11
  10:	a0 91 00 00 	lds	r26, 0x0000
  14:	b0 91 00 00 	lds	r27, 0x0000
  18:	e0 91 00 00 	lds	r30, 0x0000
  1c:	f0 91 00 00 	lds	r31, 0x0000
  20:	e2 8d       	ldd	r30, Z+26	; 0x1a
  22:	2a e0       	ldi	r18, 0x0A	; 10
  24:	30 e0       	ldi	r19, 0x00	; 0
  26:	40 e0       	ldi	r20, 0x00	; 0
  28:	50 e0       	ldi	r21, 0x00	; 0
  2a:	2e 1b       	sub	r18, r30
  2c:	31 09       	sbc	r19, r1
  2e:	41 09       	sbc	r20, r1
  30:	51 09       	sbc	r21, r1
  32:	1e 96       	adiw	r26, 0x0e	; 14
  34:	2d 93       	st	X+, r18
  36:	3d 93       	st	X+, r19
  38:	4d 93       	st	X+, r20
  3a:	5c 93       	st	X, r21
  3c:	51 97       	sbiw	r26, 0x11	; 17
  3e:	08 95       	ret

Disassembly of section .text.pvTaskIncrementMutexHeldCount:

00000000 <pvTaskIncrementMutexHeldCount>:
   0:	80 91 00 00 	lds	r24, 0x0000
   4:	90 91 00 00 	lds	r25, 0x0000
   8:	89 2b       	or	r24, r25
   a:	01 f0       	breq	.+0      	; 0xc <pvTaskIncrementMutexHeldCount+0xc>
   c:	e0 91 00 00 	lds	r30, 0x0000
  10:	f0 91 00 00 	lds	r31, 0x0000
  14:	86 a1       	ldd	r24, Z+38	; 0x26
  16:	8f 5f       	subi	r24, 0xFF	; 255
  18:	86 a3       	std	Z+38, r24	; 0x26
  1a:	20 91 00 00 	lds	r18, 0x0000
  1e:	30 91 00 00 	lds	r19, 0x0000
  22:	c9 01       	movw	r24, r18
  24:	08 95       	ret

Disassembly of section .text.xTaskNotifyStateClear:

00000000 <xTaskNotifyStateClear>:
   0:	fc 01       	movw	r30, r24
   2:	00 97       	sbiw	r24, 0x00	; 0
   4:	01 f4       	brne	.+0      	; 0x6 <xTaskNotifyStateClear+0x6>
   6:	e0 91 00 00 	lds	r30, 0x0000
   a:	f0 91 00 00 	lds	r31, 0x0000
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	0f 92       	push	r0
  14:	83 a5       	ldd	r24, Z+43	; 0x2b
  16:	82 30       	cpi	r24, 0x02	; 2
  18:	01 f0       	breq	.+0      	; 0x1a <xTaskNotifyStateClear+0x1a>
  1a:	80 e0       	ldi	r24, 0x00	; 0
  1c:	00 c0       	rjmp	.+0      	; 0x1e <xTaskNotifyStateClear+0x1e>
  1e:	13 a6       	std	Z+43, r1	; 0x2b
  20:	81 e0       	ldi	r24, 0x01	; 1
  22:	0f 90       	pop	r0
  24:	0f be       	out	0x3f, r0	; 63
  26:	08 95       	ret

Disassembly of section .text.vTaskNotifyGiveFromISR:

00000000 <vTaskNotifyGiveFromISR>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	7b 01       	movw	r14, r22
   e:	ec 01       	movw	r28, r24
  10:	2b a5       	ldd	r18, Y+43	; 0x2b
  12:	82 e0       	ldi	r24, 0x02	; 2
  14:	8b a7       	std	Y+43, r24	; 0x2b
  16:	8f a1       	ldd	r24, Y+39	; 0x27
  18:	98 a5       	ldd	r25, Y+40	; 0x28
  1a:	a9 a5       	ldd	r26, Y+41	; 0x29
  1c:	ba a5       	ldd	r27, Y+42	; 0x2a
  1e:	01 96       	adiw	r24, 0x01	; 1
  20:	a1 1d       	adc	r26, r1
  22:	b1 1d       	adc	r27, r1
  24:	8f a3       	std	Y+39, r24	; 0x27
  26:	98 a7       	std	Y+40, r25	; 0x28
  28:	a9 a7       	std	Y+41, r26	; 0x29
  2a:	ba a7       	std	Y+42, r27	; 0x2a
  2c:	21 30       	cpi	r18, 0x01	; 1
  2e:	01 f4       	brne	.+0      	; 0x30 <vTaskNotifyGiveFromISR+0x30>
  30:	80 91 00 00 	lds	r24, 0x0000
  34:	88 23       	and	r24, r24
  36:	01 f4       	brne	.+0      	; 0x38 <vTaskNotifyGiveFromISR+0x38>
  38:	8e 01       	movw	r16, r28
  3a:	0e 5f       	subi	r16, 0xFE	; 254
  3c:	1f 4f       	sbci	r17, 0xFF	; 255
  3e:	c8 01       	movw	r24, r16
  40:	0e 94 00 00 	call	0	; 0x0 <vTaskNotifyGiveFromISR>
  44:	9a 8d       	ldd	r25, Y+26	; 0x1a
  46:	80 91 00 00 	lds	r24, 0x0000
  4a:	89 17       	cp	r24, r25
  4c:	00 f4       	brcc	.+0      	; 0x4e <vTaskNotifyGiveFromISR+0x4e>
  4e:	90 93 00 00 	sts	0x0000, r25
  52:	8b e0       	ldi	r24, 0x0B	; 11
  54:	98 9f       	mul	r25, r24
  56:	c0 01       	movw	r24, r0
  58:	11 24       	eor	r1, r1
  5a:	80 50       	subi	r24, 0x00	; 0
  5c:	90 40       	sbci	r25, 0x00	; 0
  5e:	b8 01       	movw	r22, r16
  60:	00 c0       	rjmp	.+0      	; 0x62 <vTaskNotifyGiveFromISR+0x62>
  62:	be 01       	movw	r22, r28
  64:	62 5f       	subi	r22, 0xF2	; 242
  66:	7f 4f       	sbci	r23, 0xFF	; 255
  68:	80 e0       	ldi	r24, 0x00	; 0
  6a:	90 e0       	ldi	r25, 0x00	; 0
  6c:	0e 94 00 00 	call	0	; 0x0 <vTaskNotifyGiveFromISR>
  70:	e0 91 00 00 	lds	r30, 0x0000
  74:	f0 91 00 00 	lds	r31, 0x0000
  78:	9a 8d       	ldd	r25, Y+26	; 0x1a
  7a:	82 8d       	ldd	r24, Z+26	; 0x1a
  7c:	89 17       	cp	r24, r25
  7e:	00 f4       	brcc	.+0      	; 0x80 <vTaskNotifyGiveFromISR+0x80>
  80:	e1 14       	cp	r14, r1
  82:	f1 04       	cpc	r15, r1
  84:	01 f0       	breq	.+0      	; 0x86 <vTaskNotifyGiveFromISR+0x86>
  86:	81 e0       	ldi	r24, 0x01	; 1
  88:	f7 01       	movw	r30, r14
  8a:	80 83       	st	Z, r24
  8c:	df 91       	pop	r29
  8e:	cf 91       	pop	r28
  90:	1f 91       	pop	r17
  92:	0f 91       	pop	r16
  94:	ff 90       	pop	r15
  96:	ef 90       	pop	r14
  98:	08 95       	ret

Disassembly of section .text.xTaskGenericNotifyFromISR:

00000000 <xTaskGenericNotifyFromISR>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	f8 01       	movw	r30, r16
   e:	ec 01       	movw	r28, r24
  10:	01 15       	cp	r16, r1
  12:	11 05       	cpc	r17, r1
  14:	01 f0       	breq	.+0      	; 0x16 <xTaskGenericNotifyFromISR+0x16>
  16:	8f a1       	ldd	r24, Y+39	; 0x27
  18:	98 a5       	ldd	r25, Y+40	; 0x28
  1a:	a9 a5       	ldd	r26, Y+41	; 0x29
  1c:	ba a5       	ldd	r27, Y+42	; 0x2a
  1e:	80 83       	st	Z, r24
  20:	91 83       	std	Z+1, r25	; 0x01
  22:	a2 83       	std	Z+2, r26	; 0x02
  24:	b3 83       	std	Z+3, r27	; 0x03
  26:	3b a5       	ldd	r19, Y+43	; 0x2b
  28:	82 e0       	ldi	r24, 0x02	; 2
  2a:	8b a7       	std	Y+43, r24	; 0x2b
  2c:	22 30       	cpi	r18, 0x02	; 2
  2e:	01 f0       	breq	.+0      	; 0x30 <xTaskGenericNotifyFromISR+0x30>
  30:	23 30       	cpi	r18, 0x03	; 3
  32:	00 f4       	brcc	.+0      	; 0x34 <xTaskGenericNotifyFromISR+0x34>
  34:	21 30       	cpi	r18, 0x01	; 1
  36:	01 f4       	brne	.+0      	; 0x38 <xTaskGenericNotifyFromISR+0x38>
  38:	00 c0       	rjmp	.+0      	; 0x3a <xTaskGenericNotifyFromISR+0x3a>
  3a:	23 30       	cpi	r18, 0x03	; 3
  3c:	01 f0       	breq	.+0      	; 0x3e <xTaskGenericNotifyFromISR+0x3e>
  3e:	24 30       	cpi	r18, 0x04	; 4
  40:	01 f4       	brne	.+0      	; 0x42 <xTaskGenericNotifyFromISR+0x42>
  42:	00 c0       	rjmp	.+0      	; 0x44 <xTaskGenericNotifyFromISR+0x44>
  44:	8f a1       	ldd	r24, Y+39	; 0x27
  46:	98 a5       	ldd	r25, Y+40	; 0x28
  48:	a9 a5       	ldd	r26, Y+41	; 0x29
  4a:	ba a5       	ldd	r27, Y+42	; 0x2a
  4c:	84 2b       	or	r24, r20
  4e:	95 2b       	or	r25, r21
  50:	a6 2b       	or	r26, r22
  52:	b7 2b       	or	r27, r23
  54:	00 c0       	rjmp	.+0      	; 0x56 <xTaskGenericNotifyFromISR+0x56>
  56:	8f a1       	ldd	r24, Y+39	; 0x27
  58:	98 a5       	ldd	r25, Y+40	; 0x28
  5a:	a9 a5       	ldd	r26, Y+41	; 0x29
  5c:	ba a5       	ldd	r27, Y+42	; 0x2a
  5e:	01 96       	adiw	r24, 0x01	; 1
  60:	a1 1d       	adc	r26, r1
  62:	b1 1d       	adc	r27, r1
  64:	8f a3       	std	Y+39, r24	; 0x27
  66:	98 a7       	std	Y+40, r25	; 0x28
  68:	a9 a7       	std	Y+41, r26	; 0x29
  6a:	ba a7       	std	Y+42, r27	; 0x2a
  6c:	00 c0       	rjmp	.+0      	; 0x6e <xTaskGenericNotifyFromISR+0x6e>
  6e:	32 30       	cpi	r19, 0x02	; 2
  70:	01 f4       	brne	.+0      	; 0x72 <xTaskGenericNotifyFromISR+0x72>
  72:	80 e0       	ldi	r24, 0x00	; 0
  74:	00 c0       	rjmp	.+0      	; 0x76 <xTaskGenericNotifyFromISR+0x76>
  76:	4f a3       	std	Y+39, r20	; 0x27
  78:	58 a7       	std	Y+40, r21	; 0x28
  7a:	69 a7       	std	Y+41, r22	; 0x29
  7c:	7a a7       	std	Y+42, r23	; 0x2a
  7e:	31 30       	cpi	r19, 0x01	; 1
  80:	01 f4       	brne	.+0      	; 0x82 <xTaskGenericNotifyFromISR+0x82>
  82:	80 91 00 00 	lds	r24, 0x0000
  86:	88 23       	and	r24, r24
  88:	01 f4       	brne	.+0      	; 0x8a <xTaskGenericNotifyFromISR+0x8a>
  8a:	8e 01       	movw	r16, r28
  8c:	0e 5f       	subi	r16, 0xFE	; 254
  8e:	1f 4f       	sbci	r17, 0xFF	; 255
  90:	c8 01       	movw	r24, r16
  92:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericNotifyFromISR>
  96:	9a 8d       	ldd	r25, Y+26	; 0x1a
  98:	80 91 00 00 	lds	r24, 0x0000
  9c:	89 17       	cp	r24, r25
  9e:	00 f4       	brcc	.+0      	; 0xa0 <xTaskGenericNotifyFromISR+0xa0>
  a0:	90 93 00 00 	sts	0x0000, r25
  a4:	8b e0       	ldi	r24, 0x0B	; 11
  a6:	98 9f       	mul	r25, r24
  a8:	c0 01       	movw	r24, r0
  aa:	11 24       	eor	r1, r1
  ac:	80 50       	subi	r24, 0x00	; 0
  ae:	90 40       	sbci	r25, 0x00	; 0
  b0:	b8 01       	movw	r22, r16
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <xTaskGenericNotifyFromISR+0xb4>
  b4:	be 01       	movw	r22, r28
  b6:	62 5f       	subi	r22, 0xF2	; 242
  b8:	7f 4f       	sbci	r23, 0xFF	; 255
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericNotifyFromISR>
  c2:	e0 91 00 00 	lds	r30, 0x0000
  c6:	f0 91 00 00 	lds	r31, 0x0000
  ca:	9a 8d       	ldd	r25, Y+26	; 0x1a
  cc:	82 8d       	ldd	r24, Z+26	; 0x1a
  ce:	89 17       	cp	r24, r25
  d0:	00 f4       	brcc	.+0      	; 0xd2 <xTaskGenericNotifyFromISR+0xd2>
  d2:	e1 14       	cp	r14, r1
  d4:	f1 04       	cpc	r15, r1
  d6:	01 f0       	breq	.+0      	; 0xd8 <xTaskGenericNotifyFromISR+0xd8>
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	f7 01       	movw	r30, r14
  dc:	80 83       	st	Z, r24
  de:	00 c0       	rjmp	.+0      	; 0xe0 <xTaskGenericNotifyFromISR+0xe0>
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	df 91       	pop	r29
  e4:	cf 91       	pop	r28
  e6:	1f 91       	pop	r17
  e8:	0f 91       	pop	r16
  ea:	ff 90       	pop	r15
  ec:	ef 90       	pop	r14
  ee:	08 95       	ret

Disassembly of section .text.xTaskPriorityDisinherit:

00000000 <xTaskPriorityDisinherit>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	00 97       	sbiw	r24, 0x00	; 0
   c:	01 f0       	breq	.+0      	; 0xe <xTaskPriorityDisinherit+0xe>
   e:	2e a1       	ldd	r18, Y+38	; 0x26
  10:	21 50       	subi	r18, 0x01	; 1
  12:	2e a3       	std	Y+38, r18	; 0x26
  14:	9a 8d       	ldd	r25, Y+26	; 0x1a
  16:	8d a1       	ldd	r24, Y+37	; 0x25
  18:	98 17       	cp	r25, r24
  1a:	01 f0       	breq	.+0      	; 0x1c <xTaskPriorityDisinherit+0x1c>
  1c:	22 23       	and	r18, r18
  1e:	01 f4       	brne	.+0      	; 0x20 <xTaskPriorityDisinherit+0x20>
  20:	8e 01       	movw	r16, r28
  22:	0e 5f       	subi	r16, 0xFE	; 254
  24:	1f 4f       	sbci	r17, 0xFF	; 255
  26:	c8 01       	movw	r24, r16
  28:	0e 94 00 00 	call	0	; 0x0 <xTaskPriorityDisinherit>
  2c:	2d a1       	ldd	r18, Y+37	; 0x25
  2e:	2a 8f       	std	Y+26, r18	; 0x1a
  30:	8a e0       	ldi	r24, 0x0A	; 10
  32:	90 e0       	ldi	r25, 0x00	; 0
  34:	a0 e0       	ldi	r26, 0x00	; 0
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	82 1b       	sub	r24, r18
  3a:	91 09       	sbc	r25, r1
  3c:	a1 09       	sbc	r26, r1
  3e:	b1 09       	sbc	r27, r1
  40:	8e 87       	std	Y+14, r24	; 0x0e
  42:	9f 87       	std	Y+15, r25	; 0x0f
  44:	a8 8b       	std	Y+16, r26	; 0x10
  46:	b9 8b       	std	Y+17, r27	; 0x11
  48:	80 91 00 00 	lds	r24, 0x0000
  4c:	82 17       	cp	r24, r18
  4e:	00 f4       	brcc	.+0      	; 0x50 <xTaskPriorityDisinherit+0x50>
  50:	20 93 00 00 	sts	0x0000, r18
  54:	8b e0       	ldi	r24, 0x0B	; 11
  56:	28 9f       	mul	r18, r24
  58:	c0 01       	movw	r24, r0
  5a:	11 24       	eor	r1, r1
  5c:	80 50       	subi	r24, 0x00	; 0
  5e:	90 40       	sbci	r25, 0x00	; 0
  60:	b8 01       	movw	r22, r16
  62:	0e 94 00 00 	call	0	; 0x0 <xTaskPriorityDisinherit>
  66:	81 e0       	ldi	r24, 0x01	; 1
  68:	00 c0       	rjmp	.+0      	; 0x6a <xTaskPriorityDisinherit+0x6a>
  6a:	80 e0       	ldi	r24, 0x00	; 0
  6c:	df 91       	pop	r29
  6e:	cf 91       	pop	r28
  70:	1f 91       	pop	r17
  72:	0f 91       	pop	r16
  74:	08 95       	ret

Disassembly of section .text.vTaskPriorityInherit:

00000000 <vTaskPriorityInherit>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	00 97       	sbiw	r24, 0x00	; 0
   c:	01 f4       	brne	.+0      	; 0xe <vTaskPriorityInherit+0xe>
   e:	00 c0       	rjmp	.+0      	; 0x10 <vTaskPriorityInherit+0x10>
  10:	e0 91 00 00 	lds	r30, 0x0000
  14:	f0 91 00 00 	lds	r31, 0x0000
  18:	9a 8d       	ldd	r25, Y+26	; 0x1a
  1a:	82 8d       	ldd	r24, Z+26	; 0x1a
  1c:	98 17       	cp	r25, r24
  1e:	00 f0       	brcs	.+0      	; 0x20 <vTaskPriorityInherit+0x20>
  20:	00 c0       	rjmp	.+0      	; 0x22 <vTaskPriorityInherit+0x22>
  22:	8e 85       	ldd	r24, Y+14	; 0x0e
  24:	9f 85       	ldd	r25, Y+15	; 0x0f
  26:	a8 89       	ldd	r26, Y+16	; 0x10
  28:	b9 89       	ldd	r27, Y+17	; 0x11
  2a:	b7 fd       	sbrc	r27, 7
  2c:	00 c0       	rjmp	.+0      	; 0x2e <vTaskPriorityInherit+0x2e>
  2e:	e0 91 00 00 	lds	r30, 0x0000
  32:	f0 91 00 00 	lds	r31, 0x0000
  36:	22 8d       	ldd	r18, Z+26	; 0x1a
  38:	8a e0       	ldi	r24, 0x0A	; 10
  3a:	90 e0       	ldi	r25, 0x00	; 0
  3c:	a0 e0       	ldi	r26, 0x00	; 0
  3e:	b0 e0       	ldi	r27, 0x00	; 0
  40:	82 1b       	sub	r24, r18
  42:	91 09       	sbc	r25, r1
  44:	a1 09       	sbc	r26, r1
  46:	b1 09       	sbc	r27, r1
  48:	8e 87       	std	Y+14, r24	; 0x0e
  4a:	9f 87       	std	Y+15, r25	; 0x0f
  4c:	a8 8b       	std	Y+16, r26	; 0x10
  4e:	b9 8b       	std	Y+17, r27	; 0x11
  50:	8a 8d       	ldd	r24, Y+26	; 0x1a
  52:	2b e0       	ldi	r18, 0x0B	; 11
  54:	82 9f       	mul	r24, r18
  56:	c0 01       	movw	r24, r0
  58:	11 24       	eor	r1, r1
  5a:	80 50       	subi	r24, 0x00	; 0
  5c:	90 40       	sbci	r25, 0x00	; 0
  5e:	2c 85       	ldd	r18, Y+12	; 0x0c
  60:	3d 85       	ldd	r19, Y+13	; 0x0d
  62:	28 17       	cp	r18, r24
  64:	39 07       	cpc	r19, r25
  66:	01 f4       	brne	.+0      	; 0x68 <vTaskPriorityInherit+0x68>
  68:	8e 01       	movw	r16, r28
  6a:	0e 5f       	subi	r16, 0xFE	; 254
  6c:	1f 4f       	sbci	r17, 0xFF	; 255
  6e:	c8 01       	movw	r24, r16
  70:	0e 94 00 00 	call	0	; 0x0 <vTaskPriorityInherit>
  74:	e0 91 00 00 	lds	r30, 0x0000
  78:	f0 91 00 00 	lds	r31, 0x0000
  7c:	92 8d       	ldd	r25, Z+26	; 0x1a
  7e:	9a 8f       	std	Y+26, r25	; 0x1a
  80:	80 91 00 00 	lds	r24, 0x0000
  84:	89 17       	cp	r24, r25
  86:	00 f4       	brcc	.+0      	; 0x88 <vTaskPriorityInherit+0x88>
  88:	90 93 00 00 	sts	0x0000, r25
  8c:	8b e0       	ldi	r24, 0x0B	; 11
  8e:	98 9f       	mul	r25, r24
  90:	c0 01       	movw	r24, r0
  92:	11 24       	eor	r1, r1
  94:	80 50       	subi	r24, 0x00	; 0
  96:	90 40       	sbci	r25, 0x00	; 0
  98:	b8 01       	movw	r22, r16
  9a:	0e 94 00 00 	call	0	; 0x0 <vTaskPriorityInherit>
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <vTaskPriorityInherit+0xa0>
  a0:	e0 91 00 00 	lds	r30, 0x0000
  a4:	f0 91 00 00 	lds	r31, 0x0000
  a8:	82 8d       	ldd	r24, Z+26	; 0x1a
  aa:	8a 8f       	std	Y+26, r24	; 0x1a
  ac:	df 91       	pop	r29
  ae:	cf 91       	pop	r28
  b0:	1f 91       	pop	r17
  b2:	0f 91       	pop	r16
  b4:	08 95       	ret

Disassembly of section .text.xTaskRemoveFromUnorderedEventList:

00000000 <xTaskRemoveFromUnorderedEventList>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	fc 01       	movw	r30, r24
   a:	70 68       	ori	r23, 0x80	; 128
   c:	40 83       	st	Z, r20
   e:	51 83       	std	Z+1, r21	; 0x01
  10:	62 83       	std	Z+2, r22	; 0x02
  12:	73 83       	std	Z+3, r23	; 0x03
  14:	c0 85       	ldd	r28, Z+8	; 0x08
  16:	d1 85       	ldd	r29, Z+9	; 0x09
  18:	0e 94 00 00 	call	0	; 0x0 <xTaskRemoveFromUnorderedEventList>
  1c:	8e 01       	movw	r16, r28
  1e:	0e 5f       	subi	r16, 0xFE	; 254
  20:	1f 4f       	sbci	r17, 0xFF	; 255
  22:	c8 01       	movw	r24, r16
  24:	0e 94 00 00 	call	0	; 0x0 <xTaskRemoveFromUnorderedEventList>
  28:	9a 8d       	ldd	r25, Y+26	; 0x1a
  2a:	80 91 00 00 	lds	r24, 0x0000
  2e:	89 17       	cp	r24, r25
  30:	00 f4       	brcc	.+0      	; 0x32 <xTaskRemoveFromUnorderedEventList+0x32>
  32:	90 93 00 00 	sts	0x0000, r25
  36:	8b e0       	ldi	r24, 0x0B	; 11
  38:	98 9f       	mul	r25, r24
  3a:	c0 01       	movw	r24, r0
  3c:	11 24       	eor	r1, r1
  3e:	80 50       	subi	r24, 0x00	; 0
  40:	90 40       	sbci	r25, 0x00	; 0
  42:	b8 01       	movw	r22, r16
  44:	0e 94 00 00 	call	0	; 0x0 <xTaskRemoveFromUnorderedEventList>
  48:	e0 91 00 00 	lds	r30, 0x0000
  4c:	f0 91 00 00 	lds	r31, 0x0000
  50:	9a 8d       	ldd	r25, Y+26	; 0x1a
  52:	82 8d       	ldd	r24, Z+26	; 0x1a
  54:	89 17       	cp	r24, r25
  56:	00 f0       	brcs	.+0      	; 0x58 <xTaskRemoveFromUnorderedEventList+0x58>
  58:	80 e0       	ldi	r24, 0x00	; 0
  5a:	00 c0       	rjmp	.+0      	; 0x5c <xTaskRemoveFromUnorderedEventList+0x5c>
  5c:	81 e0       	ldi	r24, 0x01	; 1
  5e:	80 93 00 00 	sts	0x0000, r24
  62:	df 91       	pop	r29
  64:	cf 91       	pop	r28
  66:	1f 91       	pop	r17
  68:	0f 91       	pop	r16
  6a:	08 95       	ret

Disassembly of section .text.xTaskRemoveFromEventList:

00000000 <xTaskRemoveFromEventList>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	dc 01       	movw	r26, r24
   a:	17 96       	adiw	r26, 0x07	; 7
   c:	ed 91       	ld	r30, X+
   e:	fc 91       	ld	r31, X
  10:	18 97       	sbiw	r26, 0x08	; 8
  12:	c0 85       	ldd	r28, Z+8	; 0x08
  14:	d1 85       	ldd	r29, Z+9	; 0x09
  16:	8e 01       	movw	r16, r28
  18:	02 5f       	subi	r16, 0xF2	; 242
  1a:	1f 4f       	sbci	r17, 0xFF	; 255
  1c:	c8 01       	movw	r24, r16
  1e:	0e 94 00 00 	call	0	; 0x0 <xTaskRemoveFromEventList>
  22:	80 91 00 00 	lds	r24, 0x0000
  26:	88 23       	and	r24, r24
  28:	01 f4       	brne	.+0      	; 0x2a <xTaskRemoveFromEventList+0x2a>
  2a:	8e 01       	movw	r16, r28
  2c:	0e 5f       	subi	r16, 0xFE	; 254
  2e:	1f 4f       	sbci	r17, 0xFF	; 255
  30:	c8 01       	movw	r24, r16
  32:	0e 94 00 00 	call	0	; 0x0 <xTaskRemoveFromEventList>
  36:	9a 8d       	ldd	r25, Y+26	; 0x1a
  38:	80 91 00 00 	lds	r24, 0x0000
  3c:	89 17       	cp	r24, r25
  3e:	00 f4       	brcc	.+0      	; 0x40 <xTaskRemoveFromEventList+0x40>
  40:	90 93 00 00 	sts	0x0000, r25
  44:	8b e0       	ldi	r24, 0x0B	; 11
  46:	98 9f       	mul	r25, r24
  48:	c0 01       	movw	r24, r0
  4a:	11 24       	eor	r1, r1
  4c:	80 50       	subi	r24, 0x00	; 0
  4e:	90 40       	sbci	r25, 0x00	; 0
  50:	00 c0       	rjmp	.+0      	; 0x52 <xTaskRemoveFromEventList+0x52>
  52:	80 e0       	ldi	r24, 0x00	; 0
  54:	90 e0       	ldi	r25, 0x00	; 0
  56:	b8 01       	movw	r22, r16
  58:	0e 94 00 00 	call	0	; 0x0 <xTaskRemoveFromEventList>
  5c:	e0 91 00 00 	lds	r30, 0x0000
  60:	f0 91 00 00 	lds	r31, 0x0000
  64:	9a 8d       	ldd	r25, Y+26	; 0x1a
  66:	82 8d       	ldd	r24, Z+26	; 0x1a
  68:	89 17       	cp	r24, r25
  6a:	00 f0       	brcs	.+0      	; 0x6c <xTaskRemoveFromEventList+0x6c>
  6c:	80 e0       	ldi	r24, 0x00	; 0
  6e:	00 c0       	rjmp	.+0      	; 0x70 <xTaskRemoveFromEventList+0x70>
  70:	81 e0       	ldi	r24, 0x01	; 1
  72:	80 93 00 00 	sts	0x0000, r24
  76:	df 91       	pop	r29
  78:	cf 91       	pop	r28
  7a:	1f 91       	pop	r17
  7c:	0f 91       	pop	r16
  7e:	08 95       	ret

Disassembly of section .text.xTaskIncrementTick:

00000000 <xTaskIncrementTick>:
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
  10:	cf 93       	push	r28
  12:	df 93       	push	r29
  14:	80 91 00 00 	lds	r24, 0x0000
  18:	88 23       	and	r24, r24
  1a:	01 f0       	breq	.+0      	; 0x1c <xTaskIncrementTick+0x1c>
  1c:	00 c0       	rjmp	.+0      	; 0x1e <xTaskIncrementTick+0x1e>
  1e:	80 91 00 00 	lds	r24, 0x0000
  22:	90 91 00 00 	lds	r25, 0x0000
  26:	a0 91 00 00 	lds	r26, 0x0000
  2a:	b0 91 00 00 	lds	r27, 0x0000
  2e:	01 96       	adiw	r24, 0x01	; 1
  30:	a1 1d       	adc	r26, r1
  32:	b1 1d       	adc	r27, r1
  34:	80 93 00 00 	sts	0x0000, r24
  38:	90 93 00 00 	sts	0x0000, r25
  3c:	a0 93 00 00 	sts	0x0000, r26
  40:	b0 93 00 00 	sts	0x0000, r27
  44:	e0 90 00 00 	lds	r14, 0x0000
  48:	f0 90 00 00 	lds	r15, 0x0000
  4c:	00 91 00 00 	lds	r16, 0x0000
  50:	10 91 00 00 	lds	r17, 0x0000
  54:	e1 14       	cp	r14, r1
  56:	f1 04       	cpc	r15, r1
  58:	01 05       	cpc	r16, r1
  5a:	11 05       	cpc	r17, r1
  5c:	01 f4       	brne	.+0      	; 0x5e <xTaskIncrementTick+0x5e>
  5e:	20 91 00 00 	lds	r18, 0x0000
  62:	30 91 00 00 	lds	r19, 0x0000
  66:	80 91 00 00 	lds	r24, 0x0000
  6a:	90 91 00 00 	lds	r25, 0x0000
  6e:	90 93 00 00 	sts	0x0000, r25
  72:	80 93 00 00 	sts	0x0000, r24
  76:	30 93 00 00 	sts	0x0000, r19
  7a:	20 93 00 00 	sts	0x0000, r18
  7e:	80 91 00 00 	lds	r24, 0x0000
  82:	8f 5f       	subi	r24, 0xFF	; 255
  84:	80 93 00 00 	sts	0x0000, r24
  88:	e0 91 00 00 	lds	r30, 0x0000
  8c:	f0 91 00 00 	lds	r31, 0x0000
  90:	80 81       	ld	r24, Z
  92:	88 23       	and	r24, r24
  94:	01 f4       	brne	.+0      	; 0x96 <xTaskIncrementTick+0x96>
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	9f ef       	ldi	r25, 0xFF	; 255
  9a:	af ef       	ldi	r26, 0xFF	; 255
  9c:	bf ef       	ldi	r27, 0xFF	; 255
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <xTaskIncrementTick+0xa0>
  a0:	e0 91 00 00 	lds	r30, 0x0000
  a4:	f0 91 00 00 	lds	r31, 0x0000
  a8:	07 80       	ldd	r0, Z+7	; 0x07
  aa:	f0 85       	ldd	r31, Z+8	; 0x08
  ac:	e0 2d       	mov	r30, r0
  ae:	00 84       	ldd	r0, Z+8	; 0x08
  b0:	f1 85       	ldd	r31, Z+9	; 0x09
  b2:	e0 2d       	mov	r30, r0
  b4:	82 81       	ldd	r24, Z+2	; 0x02
  b6:	93 81       	ldd	r25, Z+3	; 0x03
  b8:	a4 81       	ldd	r26, Z+4	; 0x04
  ba:	b5 81       	ldd	r27, Z+5	; 0x05
  bc:	80 93 00 00 	sts	0x0000, r24
  c0:	90 93 00 00 	sts	0x0000, r25
  c4:	a0 93 00 00 	sts	0x0000, r26
  c8:	b0 93 00 00 	sts	0x0000, r27
  cc:	80 91 00 00 	lds	r24, 0x0000
  d0:	90 91 00 00 	lds	r25, 0x0000
  d4:	a0 91 00 00 	lds	r26, 0x0000
  d8:	b0 91 00 00 	lds	r27, 0x0000
  dc:	e8 16       	cp	r14, r24
  de:	f9 06       	cpc	r15, r25
  e0:	0a 07       	cpc	r16, r26
  e2:	1b 07       	cpc	r17, r27
  e4:	00 f4       	brcc	.+0      	; 0xe6 <xTaskIncrementTick+0xe6>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <xTaskIncrementTick+0xe8>
  e8:	bb 24       	eor	r11, r11
  ea:	9b e0       	ldi	r25, 0x0B	; 11
  ec:	a9 2e       	mov	r10, r25
  ee:	e0 91 00 00 	lds	r30, 0x0000
  f2:	f0 91 00 00 	lds	r31, 0x0000
  f6:	80 81       	ld	r24, Z
  f8:	88 23       	and	r24, r24
  fa:	01 f4       	brne	.+0      	; 0xfc <xTaskIncrementTick+0xfc>
  fc:	8f ef       	ldi	r24, 0xFF	; 255
  fe:	9f ef       	ldi	r25, 0xFF	; 255
 100:	af ef       	ldi	r26, 0xFF	; 255
 102:	bf ef       	ldi	r27, 0xFF	; 255
 104:	00 c0       	rjmp	.+0      	; 0x106 <xTaskIncrementTick+0x106>
 106:	e0 91 00 00 	lds	r30, 0x0000
 10a:	f0 91 00 00 	lds	r31, 0x0000
 10e:	07 80       	ldd	r0, Z+7	; 0x07
 110:	f0 85       	ldd	r31, Z+8	; 0x08
 112:	e0 2d       	mov	r30, r0
 114:	c0 85       	ldd	r28, Z+8	; 0x08
 116:	d1 85       	ldd	r29, Z+9	; 0x09
 118:	8a 81       	ldd	r24, Y+2	; 0x02
 11a:	9b 81       	ldd	r25, Y+3	; 0x03
 11c:	ac 81       	ldd	r26, Y+4	; 0x04
 11e:	bd 81       	ldd	r27, Y+5	; 0x05
 120:	e8 16       	cp	r14, r24
 122:	f9 06       	cpc	r15, r25
 124:	0a 07       	cpc	r16, r26
 126:	1b 07       	cpc	r17, r27
 128:	00 f4       	brcc	.+0      	; 0x12a <xTaskIncrementTick+0x12a>
 12a:	80 93 00 00 	sts	0x0000, r24
 12e:	90 93 00 00 	sts	0x0000, r25
 132:	a0 93 00 00 	sts	0x0000, r26
 136:	b0 93 00 00 	sts	0x0000, r27
 13a:	00 c0       	rjmp	.+0      	; 0x13c <xTaskIncrementTick+0x13c>
 13c:	82 e0       	ldi	r24, 0x02	; 2
 13e:	c8 2e       	mov	r12, r24
 140:	d1 2c       	mov	r13, r1
 142:	cc 0e       	add	r12, r28
 144:	dd 1e       	adc	r13, r29
 146:	c6 01       	movw	r24, r12
 148:	0e 94 00 00 	call	0	; 0x0 <xTaskIncrementTick>
 14c:	88 8d       	ldd	r24, Y+24	; 0x18
 14e:	99 8d       	ldd	r25, Y+25	; 0x19
 150:	89 2b       	or	r24, r25
 152:	01 f0       	breq	.+0      	; 0x154 <xTaskIncrementTick+0x154>
 154:	ce 01       	movw	r24, r28
 156:	0e 96       	adiw	r24, 0x0e	; 14
 158:	0e 94 00 00 	call	0	; 0x0 <xTaskIncrementTick>
 15c:	9a 8d       	ldd	r25, Y+26	; 0x1a
 15e:	80 91 00 00 	lds	r24, 0x0000
 162:	89 17       	cp	r24, r25
 164:	00 f4       	brcc	.+0      	; 0x166 <xTaskIncrementTick+0x166>
 166:	90 93 00 00 	sts	0x0000, r25
 16a:	9a 9d       	mul	r25, r10
 16c:	c0 01       	movw	r24, r0
 16e:	11 24       	eor	r1, r1
 170:	80 50       	subi	r24, 0x00	; 0
 172:	90 40       	sbci	r25, 0x00	; 0
 174:	b6 01       	movw	r22, r12
 176:	0e 94 00 00 	call	0	; 0x0 <xTaskIncrementTick>
 17a:	e0 91 00 00 	lds	r30, 0x0000
 17e:	f0 91 00 00 	lds	r31, 0x0000
 182:	9a 8d       	ldd	r25, Y+26	; 0x1a
 184:	82 8d       	ldd	r24, Z+26	; 0x1a
 186:	98 17       	cp	r25, r24
 188:	00 f4       	brcc	.+0      	; 0x18a <xTaskIncrementTick+0x18a>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <xTaskIncrementTick+0x18c>
 18c:	bb 24       	eor	r11, r11
 18e:	b3 94       	inc	r11
 190:	00 c0       	rjmp	.+0      	; 0x192 <xTaskIncrementTick+0x192>
 192:	bb 24       	eor	r11, r11
 194:	e0 91 00 00 	lds	r30, 0x0000
 198:	f0 91 00 00 	lds	r31, 0x0000
 19c:	82 8d       	ldd	r24, Z+26	; 0x1a
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	2b e0       	ldi	r18, 0x0B	; 11
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	82 9f       	mul	r24, r18
 1a6:	f0 01       	movw	r30, r0
 1a8:	83 9f       	mul	r24, r19
 1aa:	f0 0d       	add	r31, r0
 1ac:	92 9f       	mul	r25, r18
 1ae:	f0 0d       	add	r31, r0
 1b0:	11 24       	eor	r1, r1
 1b2:	e0 50       	subi	r30, 0x00	; 0
 1b4:	f0 40       	sbci	r31, 0x00	; 0
 1b6:	80 81       	ld	r24, Z
 1b8:	82 30       	cpi	r24, 0x02	; 2
 1ba:	00 f0       	brcs	.+0      	; 0x1bc <xTaskIncrementTick+0x1bc>
 1bc:	bb 24       	eor	r11, r11
 1be:	b3 94       	inc	r11
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <xTaskIncrementTick+0x1c2>
 1c2:	80 91 00 00 	lds	r24, 0x0000
 1c6:	8f 5f       	subi	r24, 0xFF	; 255
 1c8:	80 93 00 00 	sts	0x0000, r24
 1cc:	bb 24       	eor	r11, r11
 1ce:	80 91 00 00 	lds	r24, 0x0000
 1d2:	88 23       	and	r24, r24
 1d4:	01 f0       	breq	.+0      	; 0x1d6 <xTaskIncrementTick+0x1d6>
 1d6:	bb 24       	eor	r11, r11
 1d8:	b3 94       	inc	r11
 1da:	8b 2d       	mov	r24, r11
 1dc:	df 91       	pop	r29
 1de:	cf 91       	pop	r28
 1e0:	1f 91       	pop	r17
 1e2:	0f 91       	pop	r16
 1e4:	ff 90       	pop	r15
 1e6:	ef 90       	pop	r14
 1e8:	df 90       	pop	r13
 1ea:	cf 90       	pop	r12
 1ec:	bf 90       	pop	r11
 1ee:	af 90       	pop	r10
 1f0:	08 95       	ret

Disassembly of section .text.xTaskResumeFromISR:

00000000 <xTaskResumeFromISR>:
   0:	df 92       	push	r13
   2:	ef 92       	push	r14
   4:	ff 92       	push	r15
   6:	0f 93       	push	r16
   8:	1f 93       	push	r17
   a:	cf 93       	push	r28
   c:	df 93       	push	r29
   e:	ec 01       	movw	r28, r24
  10:	8c 85       	ldd	r24, Y+12	; 0x0c
  12:	9d 85       	ldd	r25, Y+13	; 0x0d
  14:	80 50       	subi	r24, 0x00	; 0
  16:	90 40       	sbci	r25, 0x00	; 0
  18:	01 f4       	brne	.+0      	; 0x1a <xTaskResumeFromISR+0x1a>
  1a:	88 8d       	ldd	r24, Y+24	; 0x18
  1c:	99 8d       	ldd	r25, Y+25	; 0x19
  1e:	20 e0       	ldi	r18, 0x00	; 0
  20:	80 30       	cpi	r24, 0x00	; 0
  22:	92 07       	cpc	r25, r18
  24:	01 f0       	breq	.+0      	; 0x26 <xTaskResumeFromISR+0x26>
  26:	89 2b       	or	r24, r25
  28:	01 f4       	brne	.+0      	; 0x2a <xTaskResumeFromISR+0x2a>
  2a:	00 c0       	rjmp	.+0      	; 0x2c <xTaskResumeFromISR+0x2c>
  2c:	da 8c       	ldd	r13, Y+26	; 0x1a
  2e:	e0 91 00 00 	lds	r30, 0x0000
  32:	f0 91 00 00 	lds	r31, 0x0000
  36:	02 8d       	ldd	r16, Z+26	; 0x1a
  38:	22 e0       	ldi	r18, 0x02	; 2
  3a:	e2 2e       	mov	r14, r18
  3c:	f1 2c       	mov	r15, r1
  3e:	ec 0e       	add	r14, r28
  40:	fd 1e       	adc	r15, r29
  42:	c7 01       	movw	r24, r14
  44:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeFromISR>
  48:	6a 8d       	ldd	r22, Y+26	; 0x1a
  4a:	80 91 00 00 	lds	r24, 0x0000
  4e:	86 17       	cp	r24, r22
  50:	00 f4       	brcc	.+0      	; 0x52 <xTaskResumeFromISR+0x52>
  52:	60 93 00 00 	sts	0x0000, r22
  56:	10 e0       	ldi	r17, 0x00	; 0
  58:	d0 16       	cp	r13, r16
  5a:	00 f0       	brcs	.+0      	; 0x5c <xTaskResumeFromISR+0x5c>
  5c:	11 e0       	ldi	r17, 0x01	; 1
  5e:	8b e0       	ldi	r24, 0x0B	; 11
  60:	68 9f       	mul	r22, r24
  62:	c0 01       	movw	r24, r0
  64:	11 24       	eor	r1, r1
  66:	80 50       	subi	r24, 0x00	; 0
  68:	90 40       	sbci	r25, 0x00	; 0
  6a:	b7 01       	movw	r22, r14
  6c:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeFromISR>
  70:	00 c0       	rjmp	.+0      	; 0x72 <xTaskResumeFromISR+0x72>
  72:	2e 96       	adiw	r28, 0x0e	; 14
  74:	80 e0       	ldi	r24, 0x00	; 0
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	be 01       	movw	r22, r28
  7a:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeFromISR>
  7e:	10 e0       	ldi	r17, 0x00	; 0
  80:	81 2f       	mov	r24, r17
  82:	df 91       	pop	r29
  84:	cf 91       	pop	r28
  86:	1f 91       	pop	r17
  88:	0f 91       	pop	r16
  8a:	ff 90       	pop	r15
  8c:	ef 90       	pop	r14
  8e:	df 90       	pop	r13
  90:	08 95       	ret
  92:	80 91 00 00 	lds	r24, 0x0000
  96:	88 23       	and	r24, r24
  98:	01 f0       	breq	.+0      	; 0x9a <xTaskResumeFromISR+0x9a>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <__SREG__+0x5d>

Disassembly of section .text.xTaskGenericNotify:

00000000 <xTaskGenericNotify>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	f8 01       	movw	r30, r16
   a:	ec 01       	movw	r28, r24
   c:	0f b6       	in	r0, 0x3f	; 63
   e:	f8 94       	cli
  10:	0f 92       	push	r0
  12:	01 15       	cp	r16, r1
  14:	11 05       	cpc	r17, r1
  16:	01 f0       	breq	.+0      	; 0x18 <xTaskGenericNotify+0x18>
  18:	8f a1       	ldd	r24, Y+39	; 0x27
  1a:	98 a5       	ldd	r25, Y+40	; 0x28
  1c:	a9 a5       	ldd	r26, Y+41	; 0x29
  1e:	ba a5       	ldd	r27, Y+42	; 0x2a
  20:	80 83       	st	Z, r24
  22:	91 83       	std	Z+1, r25	; 0x01
  24:	a2 83       	std	Z+2, r26	; 0x02
  26:	b3 83       	std	Z+3, r27	; 0x03
  28:	3b a5       	ldd	r19, Y+43	; 0x2b
  2a:	82 e0       	ldi	r24, 0x02	; 2
  2c:	8b a7       	std	Y+43, r24	; 0x2b
  2e:	22 30       	cpi	r18, 0x02	; 2
  30:	01 f0       	breq	.+0      	; 0x32 <xTaskGenericNotify+0x32>
  32:	23 30       	cpi	r18, 0x03	; 3
  34:	00 f4       	brcc	.+0      	; 0x36 <xTaskGenericNotify+0x36>
  36:	21 30       	cpi	r18, 0x01	; 1
  38:	01 f4       	brne	.+0      	; 0x3a <xTaskGenericNotify+0x3a>
  3a:	00 c0       	rjmp	.+0      	; 0x3c <xTaskGenericNotify+0x3c>
  3c:	23 30       	cpi	r18, 0x03	; 3
  3e:	01 f0       	breq	.+0      	; 0x40 <xTaskGenericNotify+0x40>
  40:	24 30       	cpi	r18, 0x04	; 4
  42:	01 f4       	brne	.+0      	; 0x44 <xTaskGenericNotify+0x44>
  44:	00 c0       	rjmp	.+0      	; 0x46 <xTaskGenericNotify+0x46>
  46:	8f a1       	ldd	r24, Y+39	; 0x27
  48:	98 a5       	ldd	r25, Y+40	; 0x28
  4a:	a9 a5       	ldd	r26, Y+41	; 0x29
  4c:	ba a5       	ldd	r27, Y+42	; 0x2a
  4e:	84 2b       	or	r24, r20
  50:	95 2b       	or	r25, r21
  52:	a6 2b       	or	r26, r22
  54:	b7 2b       	or	r27, r23
  56:	00 c0       	rjmp	.+0      	; 0x58 <xTaskGenericNotify+0x58>
  58:	8f a1       	ldd	r24, Y+39	; 0x27
  5a:	98 a5       	ldd	r25, Y+40	; 0x28
  5c:	a9 a5       	ldd	r26, Y+41	; 0x29
  5e:	ba a5       	ldd	r27, Y+42	; 0x2a
  60:	01 96       	adiw	r24, 0x01	; 1
  62:	a1 1d       	adc	r26, r1
  64:	b1 1d       	adc	r27, r1
  66:	8f a3       	std	Y+39, r24	; 0x27
  68:	98 a7       	std	Y+40, r25	; 0x28
  6a:	a9 a7       	std	Y+41, r26	; 0x29
  6c:	ba a7       	std	Y+42, r27	; 0x2a
  6e:	00 c0       	rjmp	.+0      	; 0x70 <xTaskGenericNotify+0x70>
  70:	32 30       	cpi	r19, 0x02	; 2
  72:	01 f4       	brne	.+0      	; 0x74 <xTaskGenericNotify+0x74>
  74:	80 e0       	ldi	r24, 0x00	; 0
  76:	00 c0       	rjmp	.+0      	; 0x78 <xTaskGenericNotify+0x78>
  78:	4f a3       	std	Y+39, r20	; 0x27
  7a:	58 a7       	std	Y+40, r21	; 0x28
  7c:	69 a7       	std	Y+41, r22	; 0x29
  7e:	7a a7       	std	Y+42, r23	; 0x2a
  80:	31 30       	cpi	r19, 0x01	; 1
  82:	01 f4       	brne	.+0      	; 0x84 <xTaskGenericNotify+0x84>
  84:	8e 01       	movw	r16, r28
  86:	0e 5f       	subi	r16, 0xFE	; 254
  88:	1f 4f       	sbci	r17, 0xFF	; 255
  8a:	c8 01       	movw	r24, r16
  8c:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericNotify>
  90:	9a 8d       	ldd	r25, Y+26	; 0x1a
  92:	80 91 00 00 	lds	r24, 0x0000
  96:	89 17       	cp	r24, r25
  98:	00 f4       	brcc	.+0      	; 0x9a <xTaskGenericNotify+0x9a>
  9a:	90 93 00 00 	sts	0x0000, r25
  9e:	8b e0       	ldi	r24, 0x0B	; 11
  a0:	98 9f       	mul	r25, r24
  a2:	c0 01       	movw	r24, r0
  a4:	11 24       	eor	r1, r1
  a6:	80 50       	subi	r24, 0x00	; 0
  a8:	90 40       	sbci	r25, 0x00	; 0
  aa:	b8 01       	movw	r22, r16
  ac:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericNotify>
  b0:	e0 91 00 00 	lds	r30, 0x0000
  b4:	f0 91 00 00 	lds	r31, 0x0000
  b8:	9a 8d       	ldd	r25, Y+26	; 0x1a
  ba:	82 8d       	ldd	r24, Z+26	; 0x1a
  bc:	89 17       	cp	r24, r25
  be:	00 f4       	brcc	.+0      	; 0xc0 <xTaskGenericNotify+0xc0>
  c0:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericNotify>
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	0f 90       	pop	r0
  c8:	0f be       	out	0x3f, r0	; 63
  ca:	df 91       	pop	r29
  cc:	cf 91       	pop	r28
  ce:	1f 91       	pop	r17
  d0:	0f 91       	pop	r16
  d2:	08 95       	ret

Disassembly of section .text.xTaskResumeAll:

00000000 <xTaskResumeAll>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	0f b6       	in	r0, 0x3f	; 63
   e:	f8 94       	cli
  10:	0f 92       	push	r0
  12:	80 91 00 00 	lds	r24, 0x0000
  16:	81 50       	subi	r24, 0x01	; 1
  18:	80 93 00 00 	sts	0x0000, r24
  1c:	80 91 00 00 	lds	r24, 0x0000
  20:	88 23       	and	r24, r24
  22:	01 f0       	breq	.+0      	; 0x24 <xTaskResumeAll+0x24>
  24:	00 c0       	rjmp	.+0      	; 0x26 <xTaskResumeAll+0x26>
  26:	80 91 00 00 	lds	r24, 0x0000
  2a:	88 23       	and	r24, r24
  2c:	01 f4       	brne	.+0      	; 0x2e <xTaskResumeAll+0x2e>
  2e:	00 c0       	rjmp	.+0      	; 0x30 <xTaskResumeAll+0x30>
  30:	e0 91 00 00 	lds	r30, 0x0000
  34:	f0 91 00 00 	lds	r31, 0x0000
  38:	c0 85       	ldd	r28, Z+8	; 0x08
  3a:	d1 85       	ldd	r29, Z+9	; 0x09
  3c:	ce 01       	movw	r24, r28
  3e:	0e 96       	adiw	r24, 0x0e	; 14
  40:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeAll>
  44:	8e 01       	movw	r16, r28
  46:	0e 5f       	subi	r16, 0xFE	; 254
  48:	1f 4f       	sbci	r17, 0xFF	; 255
  4a:	c8 01       	movw	r24, r16
  4c:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeAll>
  50:	9a 8d       	ldd	r25, Y+26	; 0x1a
  52:	80 91 00 00 	lds	r24, 0x0000
  56:	89 17       	cp	r24, r25
  58:	00 f4       	brcc	.+0      	; 0x5a <xTaskResumeAll+0x5a>
  5a:	90 93 00 00 	sts	0x0000, r25
  5e:	9e 9d       	mul	r25, r14
  60:	c0 01       	movw	r24, r0
  62:	11 24       	eor	r1, r1
  64:	80 50       	subi	r24, 0x00	; 0
  66:	90 40       	sbci	r25, 0x00	; 0
  68:	b8 01       	movw	r22, r16
  6a:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeAll>
  6e:	e0 91 00 00 	lds	r30, 0x0000
  72:	f0 91 00 00 	lds	r31, 0x0000
  76:	9a 8d       	ldd	r25, Y+26	; 0x1a
  78:	82 8d       	ldd	r24, Z+26	; 0x1a
  7a:	98 17       	cp	r25, r24
  7c:	00 f0       	brcs	.+0      	; 0x7e <xTaskResumeAll+0x7e>
  7e:	f0 92 00 00 	sts	0x0000, r15
  82:	00 c0       	rjmp	.+0      	; 0x84 <xTaskResumeAll+0x84>
  84:	3b e0       	ldi	r19, 0x0B	; 11
  86:	e3 2e       	mov	r14, r19
  88:	ff 24       	eor	r15, r15
  8a:	f3 94       	inc	r15
  8c:	80 91 00 00 	lds	r24, 0x0000
  90:	88 23       	and	r24, r24
  92:	01 f4       	brne	.+0      	; 0x94 <xTaskResumeAll+0x94>
  94:	80 91 00 00 	lds	r24, 0x0000
  98:	88 23       	and	r24, r24
  9a:	01 f4       	brne	.+0      	; 0x9c <xTaskResumeAll+0x9c>
  9c:	00 c0       	rjmp	.+0      	; 0x9e <xTaskResumeAll+0x9e>
  9e:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeAll>
  a2:	88 23       	and	r24, r24
  a4:	01 f0       	breq	.+0      	; 0xa6 <xTaskResumeAll+0xa6>
  a6:	10 93 00 00 	sts	0x0000, r17
  aa:	80 91 00 00 	lds	r24, 0x0000
  ae:	81 50       	subi	r24, 0x01	; 1
  b0:	80 93 00 00 	sts	0x0000, r24
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <xTaskResumeAll+0xb6>
  b6:	11 e0       	ldi	r17, 0x01	; 1
  b8:	80 91 00 00 	lds	r24, 0x0000
  bc:	88 23       	and	r24, r24
  be:	01 f4       	brne	.+0      	; 0xc0 <xTaskResumeAll+0xc0>
  c0:	80 91 00 00 	lds	r24, 0x0000
  c4:	81 30       	cpi	r24, 0x01	; 1
  c6:	01 f4       	brne	.+0      	; 0xc8 <xTaskResumeAll+0xc8>
  c8:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeAll>
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <xTaskResumeAll+0xd0>
  d0:	80 e0       	ldi	r24, 0x00	; 0
  d2:	0f 90       	pop	r0
  d4:	0f be       	out	0x3f, r0	; 63
  d6:	df 91       	pop	r29
  d8:	cf 91       	pop	r28
  da:	1f 91       	pop	r17
  dc:	0f 91       	pop	r16
  de:	ff 90       	pop	r15
  e0:	ef 90       	pop	r14
  e2:	08 95       	ret

Disassembly of section .text.vTaskResume:

00000000 <vTaskResume>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	00 97       	sbiw	r24, 0x00	; 0
   c:	01 f4       	brne	.+0      	; 0xe <vTaskResume+0xe>
   e:	00 c0       	rjmp	.+0      	; 0x10 <vTaskResume+0x10>
  10:	80 91 00 00 	lds	r24, 0x0000
  14:	90 91 00 00 	lds	r25, 0x0000
  18:	c8 17       	cp	r28, r24
  1a:	d9 07       	cpc	r29, r25
  1c:	01 f0       	breq	.+0      	; 0x1e <vTaskResume+0x1e>
  1e:	0f b6       	in	r0, 0x3f	; 63
  20:	f8 94       	cli
  22:	0f 92       	push	r0
  24:	8c 85       	ldd	r24, Y+12	; 0x0c
  26:	9d 85       	ldd	r25, Y+13	; 0x0d
  28:	80 50       	subi	r24, 0x00	; 0
  2a:	90 40       	sbci	r25, 0x00	; 0
  2c:	01 f4       	brne	.+0      	; 0x2e <vTaskResume+0x2e>
  2e:	88 8d       	ldd	r24, Y+24	; 0x18
  30:	99 8d       	ldd	r25, Y+25	; 0x19
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	80 30       	cpi	r24, 0x00	; 0
  36:	92 07       	cpc	r25, r18
  38:	01 f0       	breq	.+0      	; 0x3a <vTaskResume+0x3a>
  3a:	89 2b       	or	r24, r25
  3c:	01 f4       	brne	.+0      	; 0x3e <vTaskResume+0x3e>
  3e:	00 c0       	rjmp	.+0      	; 0x40 <vTaskResume+0x40>
  40:	90 93 00 00 	sts	0x0000, r25
  44:	8b e0       	ldi	r24, 0x0B	; 11
  46:	98 9f       	mul	r25, r24
  48:	c0 01       	movw	r24, r0
  4a:	11 24       	eor	r1, r1
  4c:	80 50       	subi	r24, 0x00	; 0
  4e:	90 40       	sbci	r25, 0x00	; 0
  50:	b8 01       	movw	r22, r16
  52:	0e 94 00 00 	call	0	; 0x0 <vTaskResume>
  56:	e0 91 00 00 	lds	r30, 0x0000
  5a:	f0 91 00 00 	lds	r31, 0x0000
  5e:	9a 8d       	ldd	r25, Y+26	; 0x1a
  60:	82 8d       	ldd	r24, Z+26	; 0x1a
  62:	98 17       	cp	r25, r24
  64:	00 f0       	brcs	.+0      	; 0x66 <vTaskResume+0x66>
  66:	0e 94 00 00 	call	0	; 0x0 <vTaskResume>
  6a:	0f 90       	pop	r0
  6c:	0f be       	out	0x3f, r0	; 63
  6e:	00 c0       	rjmp	.+0      	; 0x70 <vTaskResume+0x70>
  70:	8e 01       	movw	r16, r28
  72:	0e 5f       	subi	r16, 0xFE	; 254
  74:	1f 4f       	sbci	r17, 0xFF	; 255
  76:	c8 01       	movw	r24, r16
  78:	0e 94 00 00 	call	0	; 0x0 <vTaskResume>
  7c:	9a 8d       	ldd	r25, Y+26	; 0x1a
  7e:	80 91 00 00 	lds	r24, 0x0000
  82:	89 17       	cp	r24, r25
  84:	00 f0       	brcs	.+0      	; 0x86 <vTaskResume+0x86>
  86:	00 c0       	rjmp	.+0      	; 0x88 <vTaskResume+0x88>
  88:	df 91       	pop	r29
  8a:	cf 91       	pop	r28
  8c:	1f 91       	pop	r17
  8e:	0f 91       	pop	r16
  90:	08 95       	ret

Disassembly of section .text.vTaskSuspend:

00000000 <vTaskSuspend>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	0f b6       	in	r0, 0x3f	; 63
   a:	f8 94       	cli
   c:	0f 92       	push	r0
   e:	00 97       	sbiw	r24, 0x00	; 0
  10:	01 f4       	brne	.+0      	; 0x12 <vTaskSuspend+0x12>
  12:	c0 91 00 00 	lds	r28, 0x0000
  16:	d0 91 00 00 	lds	r29, 0x0000
  1a:	00 c0       	rjmp	.+0      	; 0x1c <vTaskSuspend+0x1c>
  1c:	ec 01       	movw	r28, r24
  1e:	8e 01       	movw	r16, r28
  20:	0e 5f       	subi	r16, 0xFE	; 254
  22:	1f 4f       	sbci	r17, 0xFF	; 255
  24:	c8 01       	movw	r24, r16
  26:	0e 94 00 00 	call	0	; 0x0 <vTaskSuspend>
  2a:	88 8d       	ldd	r24, Y+24	; 0x18
  2c:	99 8d       	ldd	r25, Y+25	; 0x19
  2e:	89 2b       	or	r24, r25
  30:	01 f0       	breq	.+0      	; 0x32 <vTaskSuspend+0x32>
  32:	ce 01       	movw	r24, r28
  34:	0e 96       	adiw	r24, 0x0e	; 14
  36:	0e 94 00 00 	call	0	; 0x0 <vTaskSuspend>
  3a:	80 e0       	ldi	r24, 0x00	; 0
  3c:	90 e0       	ldi	r25, 0x00	; 0
  3e:	b8 01       	movw	r22, r16
  40:	0e 94 00 00 	call	0	; 0x0 <vTaskSuspend>
  44:	0f 90       	pop	r0
  46:	0f be       	out	0x3f, r0	; 63
  48:	80 91 00 00 	lds	r24, 0x0000
  4c:	90 91 00 00 	lds	r25, 0x0000
  50:	c8 17       	cp	r28, r24
  52:	d9 07       	cpc	r29, r25
  54:	01 f4       	brne	.+0      	; 0x56 <vTaskSuspend+0x56>
  56:	80 91 00 00 	lds	r24, 0x0000
  5a:	88 23       	and	r24, r24
  5c:	01 f0       	breq	.+0      	; 0x5e <vTaskSuspend+0x5e>
  5e:	0e 94 00 00 	call	0	; 0x0 <vTaskSuspend>
  62:	00 c0       	rjmp	.+0      	; 0x64 <vTaskSuspend+0x64>
  64:	90 91 00 00 	lds	r25, 0x0000
  68:	80 91 00 00 	lds	r24, 0x0000
  6c:	89 17       	cp	r24, r25
  6e:	01 f4       	brne	.+0      	; 0x70 <vTaskSuspend+0x70>
  70:	10 92 00 00 	sts	0x0000, r1
  74:	10 92 00 00 	sts	0x0000, r1
  78:	00 c0       	rjmp	.+0      	; 0x7a <vTaskSuspend+0x7a>
  7a:	0e 94 00 00 	call	0	; 0x0 <vTaskSuspend>
  7e:	00 c0       	rjmp	.+0      	; 0x80 <vTaskSuspend+0x80>
  80:	80 91 00 00 	lds	r24, 0x0000
  84:	88 23       	and	r24, r24
  86:	01 f0       	breq	.+0      	; 0x88 <vTaskSuspend+0x88>
  88:	0f b6       	in	r0, 0x3f	; 63
  8a:	f8 94       	cli
  8c:	0f 92       	push	r0
  8e:	e0 91 00 00 	lds	r30, 0x0000
  92:	f0 91 00 00 	lds	r31, 0x0000
  96:	80 81       	ld	r24, Z
  98:	88 23       	and	r24, r24
  9a:	01 f4       	brne	.+0      	; 0x9c <vTaskSuspend+0x9c>
  9c:	8f ef       	ldi	r24, 0xFF	; 255
  9e:	9f ef       	ldi	r25, 0xFF	; 255
  a0:	af ef       	ldi	r26, 0xFF	; 255
  a2:	bf ef       	ldi	r27, 0xFF	; 255
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <vTaskSuspend+0xa6>
  a6:	e0 91 00 00 	lds	r30, 0x0000
  aa:	f0 91 00 00 	lds	r31, 0x0000
  ae:	07 80       	ldd	r0, Z+7	; 0x07
  b0:	f0 85       	ldd	r31, Z+8	; 0x08
  b2:	e0 2d       	mov	r30, r0
  b4:	00 84       	ldd	r0, Z+8	; 0x08
  b6:	f1 85       	ldd	r31, Z+9	; 0x09
  b8:	e0 2d       	mov	r30, r0
  ba:	82 81       	ldd	r24, Z+2	; 0x02
  bc:	93 81       	ldd	r25, Z+3	; 0x03
  be:	a4 81       	ldd	r26, Z+4	; 0x04
  c0:	b5 81       	ldd	r27, Z+5	; 0x05
  c2:	80 93 00 00 	sts	0x0000, r24
  c6:	90 93 00 00 	sts	0x0000, r25
  ca:	a0 93 00 00 	sts	0x0000, r26
  ce:	b0 93 00 00 	sts	0x0000, r27
  d2:	0f 90       	pop	r0
  d4:	0f be       	out	0x3f, r0	; 63
  d6:	df 91       	pop	r29
  d8:	cf 91       	pop	r28
  da:	1f 91       	pop	r17
  dc:	0f 91       	pop	r16
  de:	08 95       	ret

Disassembly of section .text.vTaskPrioritySet:

00000000 <vTaskPrioritySet>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	df 93       	push	r29
   a:	cf 93       	push	r28
   c:	0f 92       	push	r0
   e:	cd b7       	in	r28, 0x3d	; 61
  10:	de b7       	in	r29, 0x3e	; 62
  12:	6a 30       	cpi	r22, 0x0A	; 10
  14:	00 f0       	brcs	.+0      	; 0x16 <vTaskPrioritySet+0x16>
  16:	69 e0       	ldi	r22, 0x09	; 9
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	0f 92       	push	r0
  1e:	00 97       	sbiw	r24, 0x00	; 0
  20:	01 f4       	brne	.+0      	; 0x22 <vTaskPrioritySet+0x22>
  22:	e0 90 00 00 	lds	r14, 0x0000
  26:	f0 90 00 00 	lds	r15, 0x0000
  2a:	00 c0       	rjmp	.+0      	; 0x2c <vTaskPrioritySet+0x2c>
  2c:	7c 01       	movw	r14, r24
  2e:	d7 01       	movw	r26, r14
  30:	95 96       	adiw	r26, 0x25	; 37
  32:	2c 91       	ld	r18, X
  34:	26 17       	cp	r18, r22
  36:	01 f4       	brne	.+0      	; 0x38 <vTaskPrioritySet+0x38>
  38:	00 c0       	rjmp	.+0      	; 0x3a <vTaskPrioritySet+0x3a>
  3a:	26 17       	cp	r18, r22
  3c:	00 f4       	brcc	.+0      	; 0x3e <vTaskPrioritySet+0x3e>
  3e:	80 91 00 00 	lds	r24, 0x0000
  42:	90 91 00 00 	lds	r25, 0x0000
  46:	e8 16       	cp	r14, r24
  48:	f9 06       	cpc	r15, r25
  4a:	01 f4       	brne	.+0      	; 0x4c <vTaskPrioritySet+0x4c>
  4c:	19 82       	std	Y+1, r1	; 0x01
  4e:	00 c0       	rjmp	.+0      	; 0x50 <vTaskPrioritySet+0x50>
  50:	e0 91 00 00 	lds	r30, 0x0000
  54:	f0 91 00 00 	lds	r31, 0x0000
  58:	19 82       	std	Y+1, r1	; 0x01
  5a:	82 8d       	ldd	r24, Z+26	; 0x1a
  5c:	68 17       	cp	r22, r24
  5e:	00 f0       	brcs	.+0      	; 0x60 <vTaskPrioritySet+0x60>
  60:	b1 e0       	ldi	r27, 0x01	; 1
  62:	b9 83       	std	Y+1, r27	; 0x01
  64:	00 c0       	rjmp	.+0      	; 0x66 <vTaskPrioritySet+0x66>
  66:	80 91 00 00 	lds	r24, 0x0000
  6a:	90 91 00 00 	lds	r25, 0x0000
  6e:	19 82       	std	Y+1, r1	; 0x01
  70:	e8 16       	cp	r14, r24
  72:	f9 06       	cpc	r15, r25
  74:	01 f4       	brne	.+0      	; 0x76 <vTaskPrioritySet+0x76>
  76:	e1 e0       	ldi	r30, 0x01	; 1
  78:	e9 83       	std	Y+1, r30	; 0x01
  7a:	d7 01       	movw	r26, r14
  7c:	5a 96       	adiw	r26, 0x1a	; 26
  7e:	3c 91       	ld	r19, X
  80:	5a 97       	sbiw	r26, 0x1a	; 26
  82:	23 17       	cp	r18, r19
  84:	01 f4       	brne	.+0      	; 0x86 <vTaskPrioritySet+0x86>
  86:	5a 96       	adiw	r26, 0x1a	; 26
  88:	6c 93       	st	X, r22
  8a:	f7 01       	movw	r30, r14
  8c:	65 a3       	std	Z+37, r22	; 0x25
  8e:	86 85       	ldd	r24, Z+14	; 0x0e
  90:	97 85       	ldd	r25, Z+15	; 0x0f
  92:	a0 89       	ldd	r26, Z+16	; 0x10
  94:	b1 89       	ldd	r27, Z+17	; 0x11
  96:	b7 fd       	sbrc	r27, 7
  98:	00 c0       	rjmp	.+0      	; 0x9a <vTaskPrioritySet+0x9a>
  9a:	8a e0       	ldi	r24, 0x0A	; 10
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	a0 e0       	ldi	r26, 0x00	; 0
  a0:	b0 e0       	ldi	r27, 0x00	; 0
  a2:	86 1b       	sub	r24, r22
  a4:	91 09       	sbc	r25, r1
  a6:	a1 09       	sbc	r26, r1
  a8:	b1 09       	sbc	r27, r1
  aa:	86 87       	std	Z+14, r24	; 0x0e
  ac:	97 87       	std	Z+15, r25	; 0x0f
  ae:	a0 8b       	std	Z+16, r26	; 0x10
  b0:	b1 8b       	std	Z+17, r27	; 0x11
  b2:	8b e0       	ldi	r24, 0x0B	; 11
  b4:	38 9f       	mul	r19, r24
  b6:	c0 01       	movw	r24, r0
  b8:	11 24       	eor	r1, r1
  ba:	80 50       	subi	r24, 0x00	; 0
  bc:	90 40       	sbci	r25, 0x00	; 0
  be:	d7 01       	movw	r26, r14
  c0:	1c 96       	adiw	r26, 0x0c	; 12
  c2:	2d 91       	ld	r18, X+
  c4:	3c 91       	ld	r19, X
  c6:	1d 97       	sbiw	r26, 0x0d	; 13
  c8:	28 17       	cp	r18, r24
  ca:	39 07       	cpc	r19, r25
  cc:	01 f4       	brne	.+0      	; 0xce <vTaskPrioritySet+0xce>
  ce:	87 01       	movw	r16, r14
  d0:	0e 5f       	subi	r16, 0xFE	; 254
  d2:	1f 4f       	sbci	r17, 0xFF	; 255
  d4:	c8 01       	movw	r24, r16
  d6:	0e 94 00 00 	call	0	; 0x0 <vTaskPrioritySet>
  da:	f7 01       	movw	r30, r14
  dc:	92 8d       	ldd	r25, Z+26	; 0x1a
  de:	80 91 00 00 	lds	r24, 0x0000
  e2:	89 17       	cp	r24, r25
  e4:	00 f4       	brcc	.+0      	; 0xe6 <vTaskPrioritySet+0xe6>
  e6:	90 93 00 00 	sts	0x0000, r25
  ea:	8b e0       	ldi	r24, 0x0B	; 11
  ec:	98 9f       	mul	r25, r24
  ee:	c0 01       	movw	r24, r0
  f0:	11 24       	eor	r1, r1
  f2:	80 50       	subi	r24, 0x00	; 0
  f4:	90 40       	sbci	r25, 0x00	; 0
  f6:	b8 01       	movw	r22, r16
  f8:	0e 94 00 00 	call	0	; 0x0 <vTaskPrioritySet>
  fc:	f9 81       	ldd	r31, Y+1	; 0x01
  fe:	f1 30       	cpi	r31, 0x01	; 1
 100:	01 f4       	brne	.+0      	; 0x102 <vTaskPrioritySet+0x102>
 102:	0e 94 00 00 	call	0	; 0x0 <vTaskPrioritySet>
 106:	0f 90       	pop	r0
 108:	0f be       	out	0x3f, r0	; 63
 10a:	0f 90       	pop	r0
 10c:	cf 91       	pop	r28
 10e:	df 91       	pop	r29
 110:	1f 91       	pop	r17
 112:	0f 91       	pop	r16
 114:	ff 90       	pop	r15
 116:	ef 90       	pop	r14
 118:	08 95       	ret

Disassembly of section .text.vTaskDelete:

00000000 <vTaskDelete>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	0f b6       	in	r0, 0x3f	; 63
   a:	f8 94       	cli
   c:	0f 92       	push	r0
   e:	00 97       	sbiw	r24, 0x00	; 0
  10:	01 f4       	brne	.+0      	; 0x12 <vTaskDelete+0x12>
  12:	c0 91 00 00 	lds	r28, 0x0000
  16:	d0 91 00 00 	lds	r29, 0x0000
  1a:	00 c0       	rjmp	.+0      	; 0x1c <vTaskDelete+0x1c>
  1c:	ec 01       	movw	r28, r24
  1e:	8e 01       	movw	r16, r28
  20:	0e 5f       	subi	r16, 0xFE	; 254
  22:	1f 4f       	sbci	r17, 0xFF	; 255
  24:	c8 01       	movw	r24, r16
  26:	0e 94 00 00 	call	0	; 0x0 <vTaskDelete>
  2a:	88 8d       	ldd	r24, Y+24	; 0x18
  2c:	99 8d       	ldd	r25, Y+25	; 0x19
  2e:	89 2b       	or	r24, r25
  30:	01 f0       	breq	.+0      	; 0x32 <vTaskDelete+0x32>
  32:	ce 01       	movw	r24, r28
  34:	0e 96       	adiw	r24, 0x0e	; 14
  36:	0e 94 00 00 	call	0	; 0x0 <vTaskDelete>
  3a:	80 e0       	ldi	r24, 0x00	; 0
  3c:	90 e0       	ldi	r25, 0x00	; 0
  3e:	b8 01       	movw	r22, r16
  40:	0e 94 00 00 	call	0	; 0x0 <vTaskDelete>
  44:	80 91 00 00 	lds	r24, 0x0000
  48:	8f 5f       	subi	r24, 0xFF	; 255
  4a:	80 93 00 00 	sts	0x0000, r24
  4e:	80 91 00 00 	lds	r24, 0x0000
  52:	8f 5f       	subi	r24, 0xFF	; 255
  54:	80 93 00 00 	sts	0x0000, r24
  58:	0f 90       	pop	r0
  5a:	0f be       	out	0x3f, r0	; 63
  5c:	80 91 00 00 	lds	r24, 0x0000
  60:	88 23       	and	r24, r24
  62:	01 f0       	breq	.+0      	; 0x64 <vTaskDelete+0x64>
  64:	80 91 00 00 	lds	r24, 0x0000
  68:	90 91 00 00 	lds	r25, 0x0000
  6c:	c8 17       	cp	r28, r24
  6e:	d9 07       	cpc	r29, r25
  70:	01 f4       	brne	.+0      	; 0x72 <vTaskDelete+0x72>
  72:	0e 94 00 00 	call	0	; 0x0 <vTaskDelete>
  76:	00 c0       	rjmp	.+0      	; 0x78 <vTaskDelete+0x78>
  78:	0f b6       	in	r0, 0x3f	; 63
  7a:	f8 94       	cli
  7c:	0f 92       	push	r0
  7e:	e0 91 00 00 	lds	r30, 0x0000
  82:	f0 91 00 00 	lds	r31, 0x0000
  86:	80 81       	ld	r24, Z
  88:	88 23       	and	r24, r24
  8a:	01 f4       	brne	.+0      	; 0x8c <vTaskDelete+0x8c>
  8c:	8f ef       	ldi	r24, 0xFF	; 255
  8e:	9f ef       	ldi	r25, 0xFF	; 255
  90:	af ef       	ldi	r26, 0xFF	; 255
  92:	bf ef       	ldi	r27, 0xFF	; 255
  94:	00 c0       	rjmp	.+0      	; 0x96 <vTaskDelete+0x96>
  96:	e0 91 00 00 	lds	r30, 0x0000
  9a:	f0 91 00 00 	lds	r31, 0x0000
  9e:	07 80       	ldd	r0, Z+7	; 0x07
  a0:	f0 85       	ldd	r31, Z+8	; 0x08
  a2:	e0 2d       	mov	r30, r0
  a4:	00 84       	ldd	r0, Z+8	; 0x08
  a6:	f1 85       	ldd	r31, Z+9	; 0x09
  a8:	e0 2d       	mov	r30, r0
  aa:	82 81       	ldd	r24, Z+2	; 0x02
  ac:	93 81       	ldd	r25, Z+3	; 0x03
  ae:	a4 81       	ldd	r26, Z+4	; 0x04
  b0:	b5 81       	ldd	r27, Z+5	; 0x05
  b2:	80 93 00 00 	sts	0x0000, r24
  b6:	90 93 00 00 	sts	0x0000, r25
  ba:	a0 93 00 00 	sts	0x0000, r26
  be:	b0 93 00 00 	sts	0x0000, r27
  c2:	0f 90       	pop	r0
  c4:	0f be       	out	0x3f, r0	; 63
  c6:	df 91       	pop	r29
  c8:	cf 91       	pop	r28
  ca:	1f 91       	pop	r17
  cc:	0f 91       	pop	r16
  ce:	08 95       	ret

Disassembly of section .text.prvAddCurrentTaskToDelayedList:

00000000 <prvAddCurrentTaskToDelayedList>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	7b 01       	movw	r14, r22
   a:	8c 01       	movw	r16, r24
   c:	e0 91 00 00 	lds	r30, 0x0000
  10:	f0 91 00 00 	lds	r31, 0x0000
  14:	62 83       	std	Z+2, r22	; 0x02
  16:	73 83       	std	Z+3, r23	; 0x03
  18:	84 83       	std	Z+4, r24	; 0x04
  1a:	95 83       	std	Z+5, r25	; 0x05
  1c:	80 91 00 00 	lds	r24, 0x0000
  20:	90 91 00 00 	lds	r25, 0x0000
  24:	a0 91 00 00 	lds	r26, 0x0000
  28:	b0 91 00 00 	lds	r27, 0x0000
  2c:	e8 16       	cp	r14, r24
  2e:	f9 06       	cpc	r15, r25
  30:	0a 07       	cpc	r16, r26
  32:	1b 07       	cpc	r17, r27
  34:	00 f4       	brcc	.+0      	; 0x36 <prvAddCurrentTaskToDelayedList+0x36>
  36:	80 91 00 00 	lds	r24, 0x0000
  3a:	90 91 00 00 	lds	r25, 0x0000
  3e:	60 91 00 00 	lds	r22, 0x0000
  42:	70 91 00 00 	lds	r23, 0x0000
  46:	6e 5f       	subi	r22, 0xFE	; 254
  48:	7f 4f       	sbci	r23, 0xFF	; 255
  4a:	0e 94 00 00 	call	0	; 0x0 <prvAddCurrentTaskToDelayedList>
  4e:	00 c0       	rjmp	.+0      	; 0x50 <prvAddCurrentTaskToDelayedList+0x50>
  50:	80 91 00 00 	lds	r24, 0x0000
  54:	90 91 00 00 	lds	r25, 0x0000
  58:	60 91 00 00 	lds	r22, 0x0000
  5c:	70 91 00 00 	lds	r23, 0x0000
  60:	6e 5f       	subi	r22, 0xFE	; 254
  62:	7f 4f       	sbci	r23, 0xFF	; 255
  64:	0e 94 00 00 	call	0	; 0x0 <prvAddCurrentTaskToDelayedList>
  68:	80 91 00 00 	lds	r24, 0x0000
  6c:	90 91 00 00 	lds	r25, 0x0000
  70:	a0 91 00 00 	lds	r26, 0x0000
  74:	b0 91 00 00 	lds	r27, 0x0000
  78:	e8 16       	cp	r14, r24
  7a:	f9 06       	cpc	r15, r25
  7c:	0a 07       	cpc	r16, r26
  7e:	1b 07       	cpc	r17, r27
  80:	00 f4       	brcc	.+0      	; 0x82 <prvAddCurrentTaskToDelayedList+0x82>
  82:	e0 92 00 00 	sts	0x0000, r14
  86:	f0 92 00 00 	sts	0x0000, r15
  8a:	00 93 00 00 	sts	0x0000, r16
  8e:	10 93 00 00 	sts	0x0000, r17
  92:	1f 91       	pop	r17
  94:	0f 91       	pop	r16
  96:	ff 90       	pop	r15
  98:	ef 90       	pop	r14
  9a:	08 95       	ret

Disassembly of section .text.xTaskNotifyWait:

00000000 <xTaskNotifyWait>:
   0:	4f 92       	push	r4
   2:	5f 92       	push	r5
   4:	6f 92       	push	r6
   6:	7f 92       	push	r7
   8:	8f 92       	push	r8
   a:	9f 92       	push	r9
   c:	af 92       	push	r10
   e:	bf 92       	push	r11
  10:	cf 92       	push	r12
  12:	df 92       	push	r13
  14:	ef 92       	push	r14
  16:	ff 92       	push	r15
  18:	0f 93       	push	r16
  1a:	1f 93       	push	r17
  1c:	cf 93       	push	r28
  1e:	df 93       	push	r29
  20:	4b 01       	movw	r8, r22
  22:	5c 01       	movw	r10, r24
  24:	29 01       	movw	r4, r18
  26:	3a 01       	movw	r6, r20
  28:	e8 01       	movw	r28, r16
  2a:	0f b6       	in	r0, 0x3f	; 63
  2c:	f8 94       	cli
  2e:	0f 92       	push	r0
  30:	e0 91 00 00 	lds	r30, 0x0000
  34:	f0 91 00 00 	lds	r31, 0x0000
  38:	83 a5       	ldd	r24, Z+43	; 0x2b
  3a:	82 30       	cpi	r24, 0x02	; 2
  3c:	01 f4       	brne	.+0      	; 0x3e <xTaskNotifyWait+0x3e>
  3e:	00 c0       	rjmp	.+0      	; 0x40 <xTaskNotifyWait+0x40>
  40:	e0 91 00 00 	lds	r30, 0x0000
  44:	f0 91 00 00 	lds	r31, 0x0000
  48:	87 a1       	ldd	r24, Z+39	; 0x27
  4a:	90 a5       	ldd	r25, Z+40	; 0x28
  4c:	a1 a5       	ldd	r26, Z+41	; 0x29
  4e:	b2 a5       	ldd	r27, Z+42	; 0x2a
  50:	80 94       	com	r8
  52:	90 94       	com	r9
  54:	a0 94       	com	r10
  56:	b0 94       	com	r11
  58:	88 21       	and	r24, r8
  5a:	99 21       	and	r25, r9
  5c:	aa 21       	and	r26, r10
  5e:	bb 21       	and	r27, r11
  60:	87 a3       	std	Z+39, r24	; 0x27
  62:	90 a7       	std	Z+40, r25	; 0x28
  64:	a1 a7       	std	Z+41, r26	; 0x29
  66:	b2 a7       	std	Z+42, r27	; 0x2a
  68:	e0 91 00 00 	lds	r30, 0x0000
  6c:	f0 91 00 00 	lds	r31, 0x0000
  70:	81 e0       	ldi	r24, 0x01	; 1
  72:	83 a7       	std	Z+43, r24	; 0x2b
  74:	c1 14       	cp	r12, r1
  76:	d1 04       	cpc	r13, r1
  78:	e1 04       	cpc	r14, r1
  7a:	f1 04       	cpc	r15, r1
  7c:	01 f0       	breq	.+0      	; 0x7e <xTaskNotifyWait+0x7e>
  7e:	80 91 00 00 	lds	r24, 0x0000
  82:	90 91 00 00 	lds	r25, 0x0000
  86:	02 96       	adiw	r24, 0x02	; 2
  88:	0e 94 00 00 	call	0	; 0x0 <xTaskNotifyWait>
  8c:	8f ef       	ldi	r24, 0xFF	; 255
  8e:	c8 16       	cp	r12, r24
  90:	8f ef       	ldi	r24, 0xFF	; 255
  92:	d8 06       	cpc	r13, r24
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	e8 06       	cpc	r14, r24
  98:	8f ef       	ldi	r24, 0xFF	; 255
  9a:	f8 06       	cpc	r15, r24
  9c:	01 f4       	brne	.+0      	; 0x9e <xTaskNotifyWait+0x9e>
  9e:	60 91 00 00 	lds	r22, 0x0000
  a2:	70 91 00 00 	lds	r23, 0x0000
  a6:	6e 5f       	subi	r22, 0xFE	; 254
  a8:	7f 4f       	sbci	r23, 0xFF	; 255
  aa:	80 e0       	ldi	r24, 0x00	; 0
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	0e 94 00 00 	call	0	; 0x0 <xTaskNotifyWait>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <xTaskNotifyWait+0xb4>
  b4:	60 91 00 00 	lds	r22, 0x0000
  b8:	70 91 00 00 	lds	r23, 0x0000
  bc:	80 91 00 00 	lds	r24, 0x0000
  c0:	90 91 00 00 	lds	r25, 0x0000
  c4:	6c 0d       	add	r22, r12
  c6:	7d 1d       	adc	r23, r13
  c8:	8e 1d       	adc	r24, r14
  ca:	9f 1d       	adc	r25, r15
  cc:	0e 94 00 00 	call	0	; 0x0 <xTaskNotifyWait>
  d0:	0e 94 00 00 	call	0	; 0x0 <xTaskNotifyWait>
  d4:	0f 90       	pop	r0
  d6:	0f be       	out	0x3f, r0	; 63
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	f8 94       	cli
  dc:	0f 92       	push	r0
  de:	20 97       	sbiw	r28, 0x00	; 0
  e0:	01 f0       	breq	.+0      	; 0xe2 <xTaskNotifyWait+0xe2>
  e2:	e0 91 00 00 	lds	r30, 0x0000
  e6:	f0 91 00 00 	lds	r31, 0x0000
  ea:	87 a1       	ldd	r24, Z+39	; 0x27
  ec:	90 a5       	ldd	r25, Z+40	; 0x28
  ee:	a1 a5       	ldd	r26, Z+41	; 0x29
  f0:	b2 a5       	ldd	r27, Z+42	; 0x2a
  f2:	88 83       	st	Y, r24
  f4:	99 83       	std	Y+1, r25	; 0x01
  f6:	aa 83       	std	Y+2, r26	; 0x02
  f8:	bb 83       	std	Y+3, r27	; 0x03
  fa:	e0 91 00 00 	lds	r30, 0x0000
  fe:	f0 91 00 00 	lds	r31, 0x0000
 102:	83 a5       	ldd	r24, Z+43	; 0x2b
 104:	81 30       	cpi	r24, 0x01	; 1
 106:	01 f4       	brne	.+0      	; 0x108 <xTaskNotifyWait+0x108>
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	00 c0       	rjmp	.+0      	; 0x10c <xTaskNotifyWait+0x10c>
 10c:	e0 91 00 00 	lds	r30, 0x0000
 110:	f0 91 00 00 	lds	r31, 0x0000
 114:	87 a1       	ldd	r24, Z+39	; 0x27
 116:	90 a5       	ldd	r25, Z+40	; 0x28
 118:	a1 a5       	ldd	r26, Z+41	; 0x29
 11a:	b2 a5       	ldd	r27, Z+42	; 0x2a
 11c:	40 94       	com	r4
 11e:	50 94       	com	r5
 120:	60 94       	com	r6
 122:	70 94       	com	r7
 124:	84 21       	and	r24, r4
 126:	95 21       	and	r25, r5
 128:	a6 21       	and	r26, r6
 12a:	b7 21       	and	r27, r7
 12c:	87 a3       	std	Z+39, r24	; 0x27
 12e:	90 a7       	std	Z+40, r25	; 0x28
 130:	a1 a7       	std	Z+41, r26	; 0x29
 132:	b2 a7       	std	Z+42, r27	; 0x2a
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	e0 91 00 00 	lds	r30, 0x0000
 13a:	f0 91 00 00 	lds	r31, 0x0000
 13e:	13 a6       	std	Z+43, r1	; 0x2b
 140:	0f 90       	pop	r0
 142:	0f be       	out	0x3f, r0	; 63
 144:	df 91       	pop	r29
 146:	cf 91       	pop	r28
 148:	1f 91       	pop	r17
 14a:	0f 91       	pop	r16
 14c:	ff 90       	pop	r15
 14e:	ef 90       	pop	r14
 150:	df 90       	pop	r13
 152:	cf 90       	pop	r12
 154:	bf 90       	pop	r11
 156:	af 90       	pop	r10
 158:	9f 90       	pop	r9
 15a:	8f 90       	pop	r8
 15c:	7f 90       	pop	r7
 15e:	6f 90       	pop	r6
 160:	5f 90       	pop	r5
 162:	4f 90       	pop	r4
 164:	08 95       	ret

Disassembly of section .text.ulTaskNotifyTake:

00000000 <ulTaskNotifyTake>:
   0:	df 92       	push	r13
   2:	ef 92       	push	r14
   4:	ff 92       	push	r15
   6:	0f 93       	push	r16
   8:	1f 93       	push	r17
   a:	d8 2e       	mov	r13, r24
   c:	7a 01       	movw	r14, r20
   e:	8b 01       	movw	r16, r22
  10:	0f b6       	in	r0, 0x3f	; 63
  12:	f8 94       	cli
  14:	0f 92       	push	r0
  16:	e0 91 00 00 	lds	r30, 0x0000
  1a:	f0 91 00 00 	lds	r31, 0x0000
  1e:	87 a1       	ldd	r24, Z+39	; 0x27
  20:	90 a5       	ldd	r25, Z+40	; 0x28
  22:	a1 a5       	ldd	r26, Z+41	; 0x29
  24:	b2 a5       	ldd	r27, Z+42	; 0x2a
  26:	00 97       	sbiw	r24, 0x00	; 0
  28:	a1 05       	cpc	r26, r1
  2a:	b1 05       	cpc	r27, r1
  2c:	01 f4       	brne	.+0      	; 0x2e <ulTaskNotifyTake+0x2e>
  2e:	e0 91 00 00 	lds	r30, 0x0000
  32:	f0 91 00 00 	lds	r31, 0x0000
  36:	81 e0       	ldi	r24, 0x01	; 1
  38:	83 a7       	std	Z+43, r24	; 0x2b
  3a:	41 15       	cp	r20, r1
  3c:	51 05       	cpc	r21, r1
  3e:	61 05       	cpc	r22, r1
  40:	71 05       	cpc	r23, r1
  42:	01 f0       	breq	.+0      	; 0x44 <ulTaskNotifyTake+0x44>
  44:	80 91 00 00 	lds	r24, 0x0000
  48:	90 91 00 00 	lds	r25, 0x0000
  4c:	02 96       	adiw	r24, 0x02	; 2
  4e:	0e 94 00 00 	call	0	; 0x0 <ulTaskNotifyTake>
  52:	8f ef       	ldi	r24, 0xFF	; 255
  54:	e8 16       	cp	r14, r24
  56:	8f ef       	ldi	r24, 0xFF	; 255
  58:	f8 06       	cpc	r15, r24
  5a:	8f ef       	ldi	r24, 0xFF	; 255
  5c:	08 07       	cpc	r16, r24
  5e:	8f ef       	ldi	r24, 0xFF	; 255
  60:	18 07       	cpc	r17, r24
  62:	01 f4       	brne	.+0      	; 0x64 <ulTaskNotifyTake+0x64>
  64:	60 91 00 00 	lds	r22, 0x0000
  68:	70 91 00 00 	lds	r23, 0x0000
  6c:	6e 5f       	subi	r22, 0xFE	; 254
  6e:	7f 4f       	sbci	r23, 0xFF	; 255
  70:	80 e0       	ldi	r24, 0x00	; 0
  72:	90 e0       	ldi	r25, 0x00	; 0
  74:	0e 94 00 00 	call	0	; 0x0 <ulTaskNotifyTake>
  78:	00 c0       	rjmp	.+0      	; 0x7a <ulTaskNotifyTake+0x7a>
  7a:	60 91 00 00 	lds	r22, 0x0000
  7e:	70 91 00 00 	lds	r23, 0x0000
  82:	80 91 00 00 	lds	r24, 0x0000
  86:	90 91 00 00 	lds	r25, 0x0000
  8a:	6e 0d       	add	r22, r14
  8c:	7f 1d       	adc	r23, r15
  8e:	80 1f       	adc	r24, r16
  90:	91 1f       	adc	r25, r17
  92:	0e 94 00 00 	call	0	; 0x0 <ulTaskNotifyTake>
  96:	0e 94 00 00 	call	0	; 0x0 <ulTaskNotifyTake>
  9a:	0f 90       	pop	r0
  9c:	0f be       	out	0x3f, r0	; 63
  9e:	0f b6       	in	r0, 0x3f	; 63
  a0:	f8 94       	cli
  a2:	0f 92       	push	r0
  a4:	e0 91 00 00 	lds	r30, 0x0000
  a8:	f0 91 00 00 	lds	r31, 0x0000
  ac:	27 a1       	ldd	r18, Z+39	; 0x27
  ae:	30 a5       	ldd	r19, Z+40	; 0x28
  b0:	41 a5       	ldd	r20, Z+41	; 0x29
  b2:	52 a5       	ldd	r21, Z+42	; 0x2a
  b4:	21 15       	cp	r18, r1
  b6:	31 05       	cpc	r19, r1
  b8:	41 05       	cpc	r20, r1
  ba:	51 05       	cpc	r21, r1
  bc:	01 f0       	breq	.+0      	; 0xbe <ulTaskNotifyTake+0xbe>
  be:	dd 20       	and	r13, r13
  c0:	01 f0       	breq	.+0      	; 0xc2 <ulTaskNotifyTake+0xc2>
  c2:	e0 91 00 00 	lds	r30, 0x0000
  c6:	f0 91 00 00 	lds	r31, 0x0000
  ca:	17 a2       	std	Z+39, r1	; 0x27
  cc:	10 a6       	std	Z+40, r1	; 0x28
  ce:	11 a6       	std	Z+41, r1	; 0x29
  d0:	12 a6       	std	Z+42, r1	; 0x2a
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <ulTaskNotifyTake+0xd4>
  d4:	e0 91 00 00 	lds	r30, 0x0000
  d8:	f0 91 00 00 	lds	r31, 0x0000
  dc:	87 a1       	ldd	r24, Z+39	; 0x27
  de:	90 a5       	ldd	r25, Z+40	; 0x28
  e0:	a1 a5       	ldd	r26, Z+41	; 0x29
  e2:	b2 a5       	ldd	r27, Z+42	; 0x2a
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	a1 09       	sbc	r26, r1
  e8:	b1 09       	sbc	r27, r1
  ea:	87 a3       	std	Z+39, r24	; 0x27
  ec:	90 a7       	std	Z+40, r25	; 0x28
  ee:	a1 a7       	std	Z+41, r26	; 0x29
  f0:	b2 a7       	std	Z+42, r27	; 0x2a
  f2:	e0 91 00 00 	lds	r30, 0x0000
  f6:	f0 91 00 00 	lds	r31, 0x0000
  fa:	13 a6       	std	Z+43, r1	; 0x2b
  fc:	0f 90       	pop	r0
  fe:	0f be       	out	0x3f, r0	; 63
 100:	b9 01       	movw	r22, r18
 102:	ca 01       	movw	r24, r20
 104:	1f 91       	pop	r17
 106:	0f 91       	pop	r16
 108:	ff 90       	pop	r15
 10a:	ef 90       	pop	r14
 10c:	df 90       	pop	r13
 10e:	08 95       	ret

Disassembly of section .text.vTaskPlaceOnUnorderedEventList:

00000000 <vTaskPlaceOnUnorderedEventList>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	78 01       	movw	r14, r16
   a:	89 01       	movw	r16, r18
   c:	e0 91 00 00 	lds	r30, 0x0000
  10:	f0 91 00 00 	lds	r31, 0x0000
  14:	70 68       	ori	r23, 0x80	; 128
  16:	46 87       	std	Z+14, r20	; 0x0e
  18:	57 87       	std	Z+15, r21	; 0x0f
  1a:	60 8b       	std	Z+16, r22	; 0x10
  1c:	71 8b       	std	Z+17, r23	; 0x11
  1e:	60 91 00 00 	lds	r22, 0x0000
  22:	70 91 00 00 	lds	r23, 0x0000
  26:	62 5f       	subi	r22, 0xF2	; 242
  28:	7f 4f       	sbci	r23, 0xFF	; 255
  2a:	0e 94 00 00 	call	0	; 0x0 <vTaskPlaceOnUnorderedEventList>
  2e:	80 91 00 00 	lds	r24, 0x0000
  32:	90 91 00 00 	lds	r25, 0x0000
  36:	02 96       	adiw	r24, 0x02	; 2
  38:	0e 94 00 00 	call	0	; 0x0 <vTaskPlaceOnUnorderedEventList>
  3c:	8f ef       	ldi	r24, 0xFF	; 255
  3e:	e8 16       	cp	r14, r24
  40:	8f ef       	ldi	r24, 0xFF	; 255
  42:	f8 06       	cpc	r15, r24
  44:	8f ef       	ldi	r24, 0xFF	; 255
  46:	08 07       	cpc	r16, r24
  48:	8f ef       	ldi	r24, 0xFF	; 255
  4a:	18 07       	cpc	r17, r24
  4c:	01 f4       	brne	.+0      	; 0x4e <vTaskPlaceOnUnorderedEventList+0x4e>
  4e:	60 91 00 00 	lds	r22, 0x0000
  52:	70 91 00 00 	lds	r23, 0x0000
  56:	6e 5f       	subi	r22, 0xFE	; 254
  58:	7f 4f       	sbci	r23, 0xFF	; 255
  5a:	80 e0       	ldi	r24, 0x00	; 0
  5c:	90 e0       	ldi	r25, 0x00	; 0
  5e:	0e 94 00 00 	call	0	; 0x0 <vTaskPlaceOnUnorderedEventList>
  62:	00 c0       	rjmp	.+0      	; 0x64 <vTaskPlaceOnUnorderedEventList+0x64>
  64:	60 91 00 00 	lds	r22, 0x0000
  68:	70 91 00 00 	lds	r23, 0x0000
  6c:	80 91 00 00 	lds	r24, 0x0000
  70:	90 91 00 00 	lds	r25, 0x0000
  74:	6e 0d       	add	r22, r14
  76:	7f 1d       	adc	r23, r15
  78:	80 1f       	adc	r24, r16
  7a:	91 1f       	adc	r25, r17
  7c:	0e 94 00 00 	call	0	; 0x0 <vTaskPlaceOnUnorderedEventList>
  80:	1f 91       	pop	r17
  82:	0f 91       	pop	r16
  84:	ff 90       	pop	r15
  86:	ef 90       	pop	r14
  88:	08 95       	ret

Disassembly of section .text.vTaskDelay:

00000000 <vTaskDelay>:
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
  10:	5b 01       	movw	r10, r22
  12:	6c 01       	movw	r12, r24
  14:	61 15       	cp	r22, r1
  16:	71 05       	cpc	r23, r1
  18:	81 05       	cpc	r24, r1
  1a:	91 05       	cpc	r25, r1
  1c:	01 f0       	breq	.+0      	; 0x1e <vTaskDelay+0x1e>
  1e:	80 91 00 00 	lds	r24, 0x0000
  22:	8f 5f       	subi	r24, 0xFF	; 255
  24:	80 93 00 00 	sts	0x0000, r24
  28:	e0 90 00 00 	lds	r14, 0x0000
  2c:	f0 90 00 00 	lds	r15, 0x0000
  30:	00 91 00 00 	lds	r16, 0x0000
  34:	10 91 00 00 	lds	r17, 0x0000
  38:	80 91 00 00 	lds	r24, 0x0000
  3c:	90 91 00 00 	lds	r25, 0x0000
  40:	02 96       	adiw	r24, 0x02	; 2
  42:	0e 94 00 00 	call	0	; 0x0 <vTaskDelay>
  46:	ea 0c       	add	r14, r10
  48:	fb 1c       	adc	r15, r11
  4a:	0c 1d       	adc	r16, r12
  4c:	1d 1d       	adc	r17, r13
  4e:	c8 01       	movw	r24, r16
  50:	b7 01       	movw	r22, r14
  52:	0e 94 00 00 	call	0	; 0x0 <vTaskDelay>
  56:	0e 94 00 00 	call	0	; 0x0 <vTaskDelay>
  5a:	88 23       	and	r24, r24
  5c:	01 f4       	brne	.+0      	; 0x5e <vTaskDelay+0x5e>
  5e:	0e 94 00 00 	call	0	; 0x0 <vTaskDelay>
  62:	1f 91       	pop	r17
  64:	0f 91       	pop	r16
  66:	ff 90       	pop	r15
  68:	ef 90       	pop	r14
  6a:	df 90       	pop	r13
  6c:	cf 90       	pop	r12
  6e:	bf 90       	pop	r11
  70:	af 90       	pop	r10
  72:	08 95       	ret

Disassembly of section .text.vTaskDelayUntil:

00000000 <vTaskDelayUntil>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	fc 01       	movw	r30, r24
   a:	7a 01       	movw	r14, r20
   c:	8b 01       	movw	r16, r22
   e:	80 91 00 00 	lds	r24, 0x0000
  12:	8f 5f       	subi	r24, 0xFF	; 255
  14:	80 93 00 00 	sts	0x0000, r24
  18:	20 91 00 00 	lds	r18, 0x0000
  1c:	30 91 00 00 	lds	r19, 0x0000
  20:	40 91 00 00 	lds	r20, 0x0000
  24:	50 91 00 00 	lds	r21, 0x0000
  28:	80 81       	ld	r24, Z
  2a:	91 81       	ldd	r25, Z+1	; 0x01
  2c:	a2 81       	ldd	r26, Z+2	; 0x02
  2e:	b3 81       	ldd	r27, Z+3	; 0x03
  30:	e8 0e       	add	r14, r24
  32:	f9 1e       	adc	r15, r25
  34:	0a 1f       	adc	r16, r26
  36:	1b 1f       	adc	r17, r27
  38:	28 17       	cp	r18, r24
  3a:	39 07       	cpc	r19, r25
  3c:	4a 07       	cpc	r20, r26
  3e:	5b 07       	cpc	r21, r27
  40:	00 f4       	brcc	.+0      	; 0x42 <vTaskDelayUntil+0x42>
  42:	e8 16       	cp	r14, r24
  44:	f9 06       	cpc	r15, r25
  46:	0a 07       	cpc	r16, r26
  48:	1b 07       	cpc	r17, r27
  4a:	00 f0       	brcs	.+0      	; 0x4c <vTaskDelayUntil+0x4c>
  4c:	80 e0       	ldi	r24, 0x00	; 0
  4e:	00 c0       	rjmp	.+0      	; 0x50 <vTaskDelayUntil+0x50>
  50:	e8 16       	cp	r14, r24
  52:	f9 06       	cpc	r15, r25
  54:	0a 07       	cpc	r16, r26
  56:	1b 07       	cpc	r17, r27
  58:	00 f0       	brcs	.+0      	; 0x5a <vTaskDelayUntil+0x5a>
  5a:	80 e0       	ldi	r24, 0x00	; 0
  5c:	2e 15       	cp	r18, r14
  5e:	3f 05       	cpc	r19, r15
  60:	40 07       	cpc	r20, r16
  62:	51 07       	cpc	r21, r17
  64:	00 f4       	brcc	.+0      	; 0x66 <vTaskDelayUntil+0x66>
  66:	81 e0       	ldi	r24, 0x01	; 1
  68:	e0 82       	st	Z, r14
  6a:	f1 82       	std	Z+1, r15	; 0x01
  6c:	02 83       	std	Z+2, r16	; 0x02
  6e:	13 83       	std	Z+3, r17	; 0x03
  70:	88 23       	and	r24, r24
  72:	01 f0       	breq	.+0      	; 0x74 <vTaskDelayUntil+0x74>
  74:	80 91 00 00 	lds	r24, 0x0000
  78:	90 91 00 00 	lds	r25, 0x0000
  7c:	02 96       	adiw	r24, 0x02	; 2
  7e:	0e 94 00 00 	call	0	; 0x0 <vTaskDelayUntil>
  82:	c8 01       	movw	r24, r16
  84:	b7 01       	movw	r22, r14
  86:	0e 94 00 00 	call	0	; 0x0 <vTaskDelayUntil>
  8a:	0e 94 00 00 	call	0	; 0x0 <vTaskDelayUntil>
  8e:	88 23       	and	r24, r24
  90:	01 f4       	brne	.+0      	; 0x92 <vTaskDelayUntil+0x92>
  92:	0e 94 00 00 	call	0	; 0x0 <vTaskDelayUntil>
  96:	1f 91       	pop	r17
  98:	0f 91       	pop	r16
  9a:	ff 90       	pop	r15
  9c:	ef 90       	pop	r14
  9e:	08 95       	ret

Disassembly of section .text.vTaskPlaceOnEventList:

00000000 <vTaskPlaceOnEventList>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	7a 01       	movw	r14, r20
   a:	8b 01       	movw	r16, r22
   c:	60 91 00 00 	lds	r22, 0x0000
  10:	70 91 00 00 	lds	r23, 0x0000
  14:	62 5f       	subi	r22, 0xF2	; 242
  16:	7f 4f       	sbci	r23, 0xFF	; 255
  18:	0e 94 00 00 	call	0	; 0x0 <vTaskPlaceOnEventList>
  1c:	80 91 00 00 	lds	r24, 0x0000
  20:	90 91 00 00 	lds	r25, 0x0000
  24:	02 96       	adiw	r24, 0x02	; 2
  26:	0e 94 00 00 	call	0	; 0x0 <vTaskPlaceOnEventList>
  2a:	8f ef       	ldi	r24, 0xFF	; 255
  2c:	e8 16       	cp	r14, r24
  2e:	8f ef       	ldi	r24, 0xFF	; 255
  30:	f8 06       	cpc	r15, r24
  32:	8f ef       	ldi	r24, 0xFF	; 255
  34:	08 07       	cpc	r16, r24
  36:	8f ef       	ldi	r24, 0xFF	; 255
  38:	18 07       	cpc	r17, r24
  3a:	01 f4       	brne	.+0      	; 0x3c <vTaskPlaceOnEventList+0x3c>
  3c:	60 91 00 00 	lds	r22, 0x0000
  40:	70 91 00 00 	lds	r23, 0x0000
  44:	6e 5f       	subi	r22, 0xFE	; 254
  46:	7f 4f       	sbci	r23, 0xFF	; 255
  48:	80 e0       	ldi	r24, 0x00	; 0
  4a:	90 e0       	ldi	r25, 0x00	; 0
  4c:	0e 94 00 00 	call	0	; 0x0 <vTaskPlaceOnEventList>
  50:	00 c0       	rjmp	.+0      	; 0x52 <vTaskPlaceOnEventList+0x52>
  52:	60 91 00 00 	lds	r22, 0x0000
  56:	70 91 00 00 	lds	r23, 0x0000
  5a:	80 91 00 00 	lds	r24, 0x0000
  5e:	90 91 00 00 	lds	r25, 0x0000
  62:	6e 0d       	add	r22, r14
  64:	7f 1d       	adc	r23, r15
  66:	80 1f       	adc	r24, r16
  68:	91 1f       	adc	r25, r17
  6a:	0e 94 00 00 	call	0	; 0x0 <vTaskPlaceOnEventList>
  6e:	1f 91       	pop	r17
  70:	0f 91       	pop	r16
  72:	ff 90       	pop	r15
  74:	ef 90       	pop	r14
  76:	08 95       	ret

Disassembly of section .text.vTaskEndScheduler:

00000000 <vTaskEndScheduler>:
   0:	f8 94       	cli
   2:	10 92 00 00 	sts	0x0000, r1
   6:	0e 94 00 00 	call	0	; 0x0 <vTaskEndScheduler>
   a:	08 95       	ret

Disassembly of section .text.prvIdleTask:

00000000 <prvIdleTask>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	00 c0       	rjmp	.+0      	; 0x6 <prvIdleTask+0x6>
   6:	80 91 00 00 	lds	r24, 0x0000
   a:	8f 5f       	subi	r24, 0xFF	; 255
   c:	80 93 00 00 	sts	0x0000, r24
  10:	10 91 00 00 	lds	r17, 0x0000
  14:	0e 94 00 00 	call	0	; 0x0 <prvIdleTask>
  18:	11 23       	and	r17, r17
  1a:	01 f0       	breq	.+0      	; 0x1c <prvIdleTask+0x1c>
  1c:	0f b6       	in	r0, 0x3f	; 63
  1e:	f8 94       	cli
  20:	0f 92       	push	r0
  22:	e0 91 00 00 	lds	r30, 0x0000
  26:	f0 91 00 00 	lds	r31, 0x0000
  2a:	00 85       	ldd	r16, Z+8	; 0x08
  2c:	11 85       	ldd	r17, Z+9	; 0x09
  2e:	c8 01       	movw	r24, r16
  30:	02 96       	adiw	r24, 0x02	; 2
  32:	0e 94 00 00 	call	0	; 0x0 <prvIdleTask>
  36:	80 91 00 00 	lds	r24, 0x0000
  3a:	81 50       	subi	r24, 0x01	; 1
  3c:	80 93 00 00 	sts	0x0000, r24
  40:	80 91 00 00 	lds	r24, 0x0000
  44:	81 50       	subi	r24, 0x01	; 1
  46:	80 93 00 00 	sts	0x0000, r24
  4a:	0f 90       	pop	r0
  4c:	0f be       	out	0x3f, r0	; 63
  4e:	f8 01       	movw	r30, r16
  50:	83 8d       	ldd	r24, Z+27	; 0x1b
  52:	94 8d       	ldd	r25, Z+28	; 0x1c
  54:	0e 94 00 00 	call	0	; 0x0 <prvIdleTask>
  58:	c8 01       	movw	r24, r16
  5a:	0e 94 00 00 	call	0	; 0x0 <prvIdleTask>
  5e:	80 91 00 00 	lds	r24, 0x0000
  62:	88 23       	and	r24, r24
  64:	01 f4       	brne	.+0      	; 0x66 <prvIdleTask+0x66>
  66:	80 91 00 00 	lds	r24, 0x0000
  6a:	82 30       	cpi	r24, 0x02	; 2
  6c:	00 f0       	brcs	.+0      	; 0x6e <prvIdleTask+0x6e>
  6e:	0e 94 00 00 	call	0	; 0x0 <prvIdleTask>
  72:	00 c0       	rjmp	.+0      	; 0x74 <__SREG__+0x35>

Disassembly of section .text.xTaskGenericCreate:

00000000 <xTaskGenericCreate>:
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
   6:	5f 92       	push	r5
   8:	7f 92       	push	r7
   a:	8f 92       	push	r8
   c:	9f 92       	push	r9
   e:	af 92       	push	r10
  10:	bf 92       	push	r11
  12:	cf 92       	push	r12
  14:	df 92       	push	r13
  16:	ef 92       	push	r14
  18:	ff 92       	push	r15
  1a:	0f 93       	push	r16
  1c:	1f 93       	push	r17
  1e:	cf 93       	push	r28
  20:	df 93       	push	r29
  22:	1c 01       	movw	r2, r24
  24:	96 2e       	mov	r9, r22
  26:	87 2e       	mov	r8, r23
  28:	5a 01       	movw	r10, r20
  2a:	29 01       	movw	r4, r18
  2c:	70 2e       	mov	r7, r16
  2e:	e6 01       	movw	r28, r12
  30:	c1 14       	cp	r12, r1
  32:	d1 04       	cpc	r13, r1
  34:	01 f4       	brne	.+0      	; 0x36 <xTaskGenericCreate+0x36>
  36:	ca 01       	movw	r24, r20
  38:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
  3c:	ec 01       	movw	r28, r24
  3e:	00 97       	sbiw	r24, 0x00	; 0
  40:	01 f0       	breq	.+0      	; 0x42 <xTaskGenericCreate+0x42>
  42:	8c e2       	ldi	r24, 0x2C	; 44
  44:	90 e0       	ldi	r25, 0x00	; 0
  46:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
  4a:	6c 01       	movw	r12, r24
  4c:	00 97       	sbiw	r24, 0x00	; 0
  4e:	01 f0       	breq	.+0      	; 0x50 <xTaskGenericCreate+0x50>
  50:	fc 01       	movw	r30, r24
  52:	d4 8f       	std	Z+28, r29	; 0x1c
  54:	c3 8f       	std	Z+27, r28	; 0x1b
  56:	89 2d       	mov	r24, r9
  58:	98 2d       	mov	r25, r8
  5a:	9c 01       	movw	r18, r24
  5c:	f9 01       	movw	r30, r18
  5e:	d6 01       	movw	r26, r12
  60:	90 e0       	ldi	r25, 0x00	; 0
  62:	00 c0       	rjmp	.+0      	; 0x64 <xTaskGenericCreate+0x64>
  64:	ce 01       	movw	r24, r28
  66:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
  6a:	8f ef       	ldi	r24, 0xFF	; 255
  6c:	00 c0       	rjmp	.+0      	; 0x6e <xTaskGenericCreate+0x6e>
  6e:	80 81       	ld	r24, Z
  70:	5d 96       	adiw	r26, 0x1d	; 29
  72:	8c 93       	st	X, r24
  74:	5d 97       	sbiw	r26, 0x1d	; 29
  76:	80 81       	ld	r24, Z
  78:	88 23       	and	r24, r24
  7a:	01 f0       	breq	.+0      	; 0x7c <xTaskGenericCreate+0x7c>
  7c:	9f 5f       	subi	r25, 0xFF	; 255
  7e:	31 96       	adiw	r30, 0x01	; 1
  80:	11 96       	adiw	r26, 0x01	; 1
  82:	98 30       	cpi	r25, 0x08	; 8
  84:	01 f4       	brne	.+0      	; 0x86 <xTaskGenericCreate+0x86>
  86:	f6 01       	movw	r30, r12
  88:	14 a2       	std	Z+36, r1	; 0x24
  8a:	07 2d       	mov	r16, r7
  8c:	f9 e0       	ldi	r31, 0x09	; 9
  8e:	f7 15       	cp	r31, r7
  90:	00 f4       	brcc	.+0      	; 0x92 <xTaskGenericCreate+0x92>
  92:	09 e0       	ldi	r16, 0x09	; 9
  94:	f6 01       	movw	r30, r12
  96:	02 8f       	std	Z+26, r16	; 0x1a
  98:	05 a3       	std	Z+37, r16	; 0x25
  9a:	16 a2       	std	Z+38, r1	; 0x26
  9c:	52 e0       	ldi	r21, 0x02	; 2
  9e:	85 2e       	mov	r8, r21
  a0:	91 2c       	mov	r9, r1
  a2:	8c 0c       	add	r8, r12
  a4:	9d 1c       	adc	r9, r13
  a6:	c4 01       	movw	r24, r8
  a8:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
  ac:	c6 01       	movw	r24, r12
  ae:	0e 96       	adiw	r24, 0x0e	; 14
  b0:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
  b4:	f6 01       	movw	r30, r12
  b6:	d3 86       	std	Z+11, r13	; 0x0b
  b8:	c2 86       	std	Z+10, r12	; 0x0a
  ba:	8a e0       	ldi	r24, 0x0A	; 10
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	a0 e0       	ldi	r26, 0x00	; 0
  c0:	b0 e0       	ldi	r27, 0x00	; 0
  c2:	80 1b       	sub	r24, r16
  c4:	91 09       	sbc	r25, r1
  c6:	a1 09       	sbc	r26, r1
  c8:	b1 09       	sbc	r27, r1
  ca:	86 87       	std	Z+14, r24	; 0x0e
  cc:	97 87       	std	Z+15, r25	; 0x0f
  ce:	a0 8b       	std	Z+16, r26	; 0x10
  d0:	b1 8b       	std	Z+17, r27	; 0x11
  d2:	d7 8a       	std	Z+23, r13	; 0x17
  d4:	c6 8a       	std	Z+22, r12	; 0x16
  d6:	17 a2       	std	Z+39, r1	; 0x27
  d8:	10 a6       	std	Z+40, r1	; 0x28
  da:	11 a6       	std	Z+41, r1	; 0x29
  dc:	12 a6       	std	Z+42, r1	; 0x2a
  de:	13 a6       	std	Z+43, r1	; 0x2b
  e0:	08 94       	sec
  e2:	a1 08       	sbc	r10, r1
  e4:	b1 08       	sbc	r11, r1
  e6:	ce 01       	movw	r24, r28
  e8:	8a 0d       	add	r24, r10
  ea:	9b 1d       	adc	r25, r11
  ec:	b1 01       	movw	r22, r2
  ee:	a2 01       	movw	r20, r4
  f0:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
  f4:	f6 01       	movw	r30, r12
  f6:	91 83       	std	Z+1, r25	; 0x01
  f8:	80 83       	st	Z, r24
  fa:	e1 14       	cp	r14, r1
  fc:	f1 04       	cpc	r15, r1
  fe:	01 f0       	breq	.+0      	; 0x100 <xTaskGenericCreate+0x100>
 100:	f7 01       	movw	r30, r14
 102:	d1 82       	std	Z+1, r13	; 0x01
 104:	c0 82       	st	Z, r12
 106:	0f b6       	in	r0, 0x3f	; 63
 108:	f8 94       	cli
 10a:	0f 92       	push	r0
 10c:	80 91 00 00 	lds	r24, 0x0000
 110:	8f 5f       	subi	r24, 0xFF	; 255
 112:	80 93 00 00 	sts	0x0000, r24
 116:	80 91 00 00 	lds	r24, 0x0000
 11a:	90 91 00 00 	lds	r25, 0x0000
 11e:	89 2b       	or	r24, r25
 120:	01 f4       	brne	.+0      	; 0x122 <xTaskGenericCreate+0x122>
 122:	d0 92 00 00 	sts	0x0000, r13
 126:	c0 92 00 00 	sts	0x0000, r12
 12a:	80 91 00 00 	lds	r24, 0x0000
 12e:	81 30       	cpi	r24, 0x01	; 1
 130:	01 f4       	brne	.+0      	; 0x132 <xTaskGenericCreate+0x132>
 132:	c0 e0       	ldi	r28, 0x00	; 0
 134:	d0 e0       	ldi	r29, 0x00	; 0
 136:	ce 01       	movw	r24, r28
 138:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 13c:	2b 96       	adiw	r28, 0x0b	; 11
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	c0 30       	cpi	r28, 0x00	; 0
 142:	df 07       	cpc	r29, r31
 144:	01 f4       	brne	.+0      	; 0x146 <xTaskGenericCreate+0x146>
 146:	40 e0       	ldi	r20, 0x00	; 0
 148:	e4 2e       	mov	r14, r20
 14a:	40 e0       	ldi	r20, 0x00	; 0
 14c:	f4 2e       	mov	r15, r20
 14e:	c7 01       	movw	r24, r14
 150:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 154:	00 e0       	ldi	r16, 0x00	; 0
 156:	10 e0       	ldi	r17, 0x00	; 0
 158:	c8 01       	movw	r24, r16
 15a:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 15e:	80 e0       	ldi	r24, 0x00	; 0
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 176:	f0 92 00 00 	sts	0x0000, r15
 17a:	e0 92 00 00 	sts	0x0000, r14
 17e:	10 93 00 00 	sts	0x0000, r17
 182:	00 93 00 00 	sts	0x0000, r16
 186:	00 c0       	rjmp	.+0      	; 0x188 <xTaskGenericCreate+0x188>
 188:	80 91 00 00 	lds	r24, 0x0000
 18c:	88 23       	and	r24, r24
 18e:	01 f4       	brne	.+0      	; 0x190 <xTaskGenericCreate+0x190>
 190:	e0 91 00 00 	lds	r30, 0x0000
 194:	f0 91 00 00 	lds	r31, 0x0000
 198:	82 8d       	ldd	r24, Z+26	; 0x1a
 19a:	78 16       	cp	r7, r24
 19c:	00 f0       	brcs	.+0      	; 0x19e <xTaskGenericCreate+0x19e>
 19e:	d0 92 00 00 	sts	0x0000, r13
 1a2:	c0 92 00 00 	sts	0x0000, r12
 1a6:	80 91 00 00 	lds	r24, 0x0000
 1aa:	8f 5f       	subi	r24, 0xFF	; 255
 1ac:	80 93 00 00 	sts	0x0000, r24
 1b0:	f6 01       	movw	r30, r12
 1b2:	92 8d       	ldd	r25, Z+26	; 0x1a
 1b4:	80 91 00 00 	lds	r24, 0x0000
 1b8:	89 17       	cp	r24, r25
 1ba:	00 f4       	brcc	.+0      	; 0x1bc <xTaskGenericCreate+0x1bc>
 1bc:	90 93 00 00 	sts	0x0000, r25
 1c0:	f6 01       	movw	r30, r12
 1c2:	82 8d       	ldd	r24, Z+26	; 0x1a
 1c4:	2b e0       	ldi	r18, 0x0B	; 11
 1c6:	82 9f       	mul	r24, r18
 1c8:	c0 01       	movw	r24, r0
 1ca:	11 24       	eor	r1, r1
 1cc:	80 50       	subi	r24, 0x00	; 0
 1ce:	90 40       	sbci	r25, 0x00	; 0
 1d0:	b4 01       	movw	r22, r8
 1d2:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 1d6:	0f 90       	pop	r0
 1d8:	0f be       	out	0x3f, r0	; 63
 1da:	80 91 00 00 	lds	r24, 0x0000
 1de:	88 23       	and	r24, r24
 1e0:	01 f0       	breq	.+0      	; 0x1e2 <xTaskGenericCreate+0x1e2>
 1e2:	e0 91 00 00 	lds	r30, 0x0000
 1e6:	f0 91 00 00 	lds	r31, 0x0000
 1ea:	82 8d       	ldd	r24, Z+26	; 0x1a
 1ec:	87 15       	cp	r24, r7
 1ee:	00 f4       	brcc	.+0      	; 0x1f0 <xTaskGenericCreate+0x1f0>
 1f0:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	df 91       	pop	r29
 1f8:	cf 91       	pop	r28
 1fa:	1f 91       	pop	r17
 1fc:	0f 91       	pop	r16
 1fe:	ff 90       	pop	r15
 200:	ef 90       	pop	r14
 202:	df 90       	pop	r13
 204:	cf 90       	pop	r12
 206:	bf 90       	pop	r11
 208:	af 90       	pop	r10
 20a:	9f 90       	pop	r9
 20c:	8f 90       	pop	r8
 20e:	7f 90       	pop	r7
 210:	5f 90       	pop	r5
 212:	4f 90       	pop	r4
 214:	3f 90       	pop	r3
 216:	2f 90       	pop	r2
 218:	08 95       	ret

Disassembly of section .text.vTaskStartScheduler:

00000000 <vTaskStartScheduler>:
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	80 e0       	ldi	r24, 0x00	; 0
  10:	90 e0       	ldi	r25, 0x00	; 0
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e0       	ldi	r23, 0x00	; 0
  16:	45 e5       	ldi	r20, 0x55	; 85
  18:	50 e0       	ldi	r21, 0x00	; 0
  1a:	20 e0       	ldi	r18, 0x00	; 0
  1c:	30 e0       	ldi	r19, 0x00	; 0
  1e:	00 e0       	ldi	r16, 0x00	; 0
  20:	ee 24       	eor	r14, r14
  22:	ff 24       	eor	r15, r15
  24:	cc 24       	eor	r12, r12
  26:	dd 24       	eor	r13, r13
  28:	aa 24       	eor	r10, r10
  2a:	bb 24       	eor	r11, r11
  2c:	0e 94 00 00 	call	0	; 0x0 <vTaskStartScheduler>
  30:	81 30       	cpi	r24, 0x01	; 1
  32:	01 f4       	brne	.+0      	; 0x34 <vTaskStartScheduler+0x34>
  34:	f8 94       	cli
  36:	8f ef       	ldi	r24, 0xFF	; 255
  38:	9f ef       	ldi	r25, 0xFF	; 255
  3a:	af ef       	ldi	r26, 0xFF	; 255
  3c:	bf ef       	ldi	r27, 0xFF	; 255
  3e:	80 93 00 00 	sts	0x0000, r24
  42:	90 93 00 00 	sts	0x0000, r25
  46:	a0 93 00 00 	sts	0x0000, r26
  4a:	b0 93 00 00 	sts	0x0000, r27
  4e:	81 e0       	ldi	r24, 0x01	; 1
  50:	80 93 00 00 	sts	0x0000, r24
  54:	10 92 00 00 	sts	0x0000, r1
  58:	10 92 00 00 	sts	0x0000, r1
  5c:	10 92 00 00 	sts	0x0000, r1
  60:	10 92 00 00 	sts	0x0000, r1
  64:	0e 94 00 00 	call	0	; 0x0 <vTaskStartScheduler>
  68:	0f 91       	pop	r16
  6a:	ff 90       	pop	r15
  6c:	ef 90       	pop	r14
  6e:	df 90       	pop	r13
  70:	cf 90       	pop	r12
  72:	bf 90       	pop	r11
  74:	af 90       	pop	r10
  76:	08 95       	ret

timers.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
